#22
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:902:            text = getString(R.string.ans_text_gmail);
#23
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:635:        if (text.equals(getString(R.string.ans_text_alarmmessage)) && categoryID.equals(CategoryID.ALERT_CAT_ALARM))
#24
#25
src/com/fujitsu/mobile_phone/BLESettings/BLEConflictErrorActivity.java:118:        sb.append(r.getString(R.string.ble_conflict_register_error_title));
#26
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:340:            editor.putBoolean(getString(R.string.menu_pasp), true);
#27
#28
#29
#30
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:662:                     (text.startsWith(getString(R.string.ans_text_carrier_new_message_nx ))||
#31
res/layout/main.xml:42:        android:summary="@string/ble_fmp_summary"
#32
res/layout/main.xml:57:        android:title="@string/ble_pxp_dialog_title"
res/layout/main.xml:58:        android:summary="@string/ble_pxp_summary"
res/layout/main.xml:63:        android:dialogTitle="@string/ble_pxp_dialog_title" />
#33
#34
src/com/fujitsu/mobile_phone/BLESettings/BLEConflictErrorActivity.java:57:        StringBuilder builder = new StringBuilder(r.getString(R.string.ble_conflict_detail_message));
#35
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:332:            editor.putBoolean(getString(R.string.anp_gmial), true);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:947:            boolean gmail = sp.getBoolean(getString(R.string.anp_gmial), true);
res/layout/alert_notification_list_kddi_tab.xml:32:            android:key="@string/anp_gmial"
res/layout/alert_notification_list.xml:36:            android:key="@string/anp_gmial"
res/layout/alert_notification_list_dcm_tab.xml:32:            android:key="@string/anp_gmial"
res/layout/alert_notification_list_sbm_phone.xml:36:            android:key="@string/anp_gmial"
res/layout/alert_notification_list_sbm_tab.xml:32:            android:key="@string/anp_gmial"
res/layout/alert_notification_list_dcm_phone.xml:36:            android:key="@string/anp_gmial"
res/layout/alert_notification_list_kddi_phone.xml:36:            android:key="@string/anp_gmial"
#36
#37
res/layout/alert_notification_list_kddi_tab.xml:41:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list.xml:45:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_dcm_tab.xml:41:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_sbm_phone.xml:41:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_sbm_tab.xml:37:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_dcm_phone.xml:45:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_kddi_phone.xml:45:            android:title="@string/ble_anp_alarm"
#38
src/com/fujitsu/mobile_phone/BLESettings/BLEConflictErrorActivity.java:98:        sb.append(r.getString(R.string.ble_conflict_register_service));
#39
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_SettingsActivity.java:66:                anpPreference.setSummary(getString(R.string.ble_anp_summary_tablet));
#40
res/layout/alert_notification_list_kddi_tab.xml:37:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list.xml:41:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list_dcm_tab.xml:37:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list_dcm_phone.xml:41:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list_kddi_phone.xml:41:            android:title="@string/ble_anp_message"
#41
res/layout/main.xml:48:        android:title="@string/ble_fmp_detail"
#42
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:335:            editor.putBoolean(getString(R.string.anp_schedule), true);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:944:            boolean schedule = sp.getBoolean(getString(R.string.anp_schedule), true);
res/layout/alert_notification_list_kddi_tab.xml:44:            android:key="@string/anp_schedule"
res/layout/alert_notification_list.xml:48:            android:key="@string/anp_schedule"
res/layout/alert_notification_list_dcm_tab.xml:44:            android:key="@string/anp_schedule"
res/layout/alert_notification_list_sbm_phone.xml:44:            android:key="@string/anp_schedule"
res/layout/alert_notification_list_sbm_tab.xml:40:            android:key="@string/anp_schedule"
res/layout/alert_notification_list_dcm_phone.xml:48:            android:key="@string/anp_schedule"
res/layout/alert_notification_list_kddi_phone.xml:48:            android:key="@string/anp_schedule"
#43
#44
#45
#46
res/layout/main.xml:67:            android:title="@string/ble_time"
res/layout/main.xml:68:            android:summary="@string/ble_time_summary"
#47
res/layout/main.xml:31:        android:title="@string/ble_anp_detail">
#48
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:887:            text = getString(R.string.ans_text_miss_call);
#49
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:339:            editor.putBoolean(getString(R.string.menu_time), true);
src/com/fujitsu/mobile_phone/BLESettings/TimeProfile.java:140:            boolean pfTime = sp.getBoolean(getString(R.string.menu_time), false);
res/layout/main.xml:66:            android:key="@string/menu_time"
#50
res/layout/alert_notification_list_kddi_tab.xml:33:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list.xml:37:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_dcm_tab.xml:33:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_sbm_phone.xml:37:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_sbm_tab.xml:33:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_dcm_phone.xml:37:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_kddi_phone.xml:37:            android:title="@string/ble_anp_gmial"
#51
res/layout/main.xml:57:        android:title="@string/ble_pxp_dialog_title"
res/layout/main.xml:63:        android:dialogTitle="@string/ble_pxp_dialog_title" />
#52
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:643:            //if (text.startsWith(getString(R.string.ans_text_carrier_Message_not_sent))) {
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:646:                if ((!TextUtils.isEmpty(text)) && (text.indexOf(getString(R.string.ans_text_carrier_Message_not_sent)) == -1)) {
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:653:            if (text.startsWith(getString(R.string.ans_text_carrier_Message_not_sent))
#53
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:337:            editor.putString(getString(R.string.menu_fmp), PRESET_SOUND_PASS);
src/com/fujitsu/mobile_phone/BLESettings/FmpProfileTarget.java:784:        return sp.getBoolean(getString(R.string.menu_fmp_switch),true);
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_SettingsActivity.java:167:        }else if(key.equals(res.getString(R.string.menu_fmp_switch))){
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_FMP_DialogActivity.java:117:        mTargetSound = sp.getString(getString(R.string.menu_fmp), "");
res/layout/main.xml:40:        android:key="@string/menu_fmp_switch"
res/layout/main.xml:47:        android:key="@string/menu_fmp"
#54
res/layout/alert_notification_list.xml:25:            android:title="@string/ble_anp_incall"
res/layout/alert_notification_list_sbm_phone.xml:25:            android:title="@string/ble_anp_incall"
res/layout/alert_notification_list_dcm_phone.xml:25:            android:title="@string/ble_anp_incall"
res/layout/alert_notification_list_kddi_phone.xml:25:            android:title="@string/ble_anp_incall"
#55
src/com/fujitsu/mobile_phone/BLESettingsServer/BLESettingIntentReceiver.java:143:            res.getString(R.string.ble_conflict_error_ticker), System.currentTimeMillis());
#56
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:899:            text = getString(R.string.ans_text_schedule);
#57
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:333:            editor.putBoolean(getString(R.string.anp_message), true);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:939:            boolean mms = sp.getBoolean(getString(R.string.anp_message), true);
res/layout/alert_notification_list_kddi_tab.xml:36:            android:key="@string/anp_message"
res/layout/alert_notification_list.xml:40:            android:key="@string/anp_message"
res/layout/alert_notification_list_dcm_tab.xml:36:            android:key="@string/anp_message"
res/layout/alert_notification_list_dcm_phone.xml:40:            android:key="@string/anp_message"
res/layout/alert_notification_list_kddi_phone.xml:40:            android:key="@string/anp_message"
#58
res/layout/main.xml:68:            android:summary="@string/ble_time_summary"
#59
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:334:            editor.putBoolean(getString(R.string.anp_alarm), true);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:953:            boolean alarm = sp.getBoolean(getString(R.string.anp_alarm), true);
res/layout/alert_notification_list_kddi_tab.xml:40:            android:key="@string/anp_alarm"
res/layout/alert_notification_list.xml:44:            android:key="@string/anp_alarm"
res/layout/alert_notification_list_dcm_tab.xml:40:            android:key="@string/anp_alarm"
res/layout/alert_notification_list_sbm_phone.xml:40:            android:key="@string/anp_alarm"
res/layout/alert_notification_list_sbm_tab.xml:36:            android:key="@string/anp_alarm"
res/layout/alert_notification_list_dcm_phone.xml:44:            android:key="@string/anp_alarm"
res/layout/alert_notification_list_kddi_phone.xml:44:            android:key="@string/anp_alarm"
#60
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:635:        if (text.equals(getString(R.string.ans_text_alarmmessage)) && categoryID.equals(CategoryID.ALERT_CAT_ALARM))
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:912:            text = getString(R.string.ans_text_alarm);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:914:            text = getString(R.string.ans_text_alarmclock);
#61
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_FMP_DialogActivity.java:494:        dialog.setTitle(mContext.getString(R.string.fmp_alert_title));
#62
res/layout/alert_notification_list_sbm_phone.xml:29:            android:title="@string/ble_anp_carriiermail_sbm"
res/layout/alert_notification_list_sbm_tab.xml:25:            android:title="@string/ble_anp_carriiermail_sbm"
#63
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:329:            editor.putBoolean(getString(R.string.anp_incall), true);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:936:                boolean call = sp.getBoolean(getString(R.string.anp_incall), true);
res/layout/alert_notification_list.xml:24:            android:key="@string/anp_incall"
res/layout/alert_notification_list_sbm_phone.xml:24:            android:key="@string/anp_incall"
res/layout/alert_notification_list_dcm_phone.xml:24:            android:key="@string/anp_incall"
res/layout/alert_notification_list_kddi_phone.xml:24:            android:key="@string/anp_incall"
#64
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_SettingsActivity.java:66:                anpPreference.setSummary(getString(R.string.ble_anp_summary_tablet));
res/layout/alert_notification_list_kddi_tab.xml:25:            android:title="@string/ble_anp_carriiermail_kddi"
res/layout/alert_notification_list_kddi_tab.xml:29:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_kddi_tab.xml:33:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_kddi_tab.xml:37:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list_kddi_tab.xml:41:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_kddi_tab.xml:45:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list.xml:25:            android:title="@string/ble_anp_incall"
res/layout/alert_notification_list.xml:29:            android:title="@string/ble_anp_carriiermail"
res/layout/alert_notification_list.xml:33:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list.xml:37:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list.xml:41:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list.xml:45:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list.xml:49:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_dcm_tab.xml:25:            android:title="@string/ble_anp_carriiermail_dcm"
res/layout/alert_notification_list_dcm_tab.xml:29:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_dcm_tab.xml:33:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_dcm_tab.xml:37:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list_dcm_tab.xml:41:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_dcm_tab.xml:45:            android:title="@string/ble_anp_schedule"
res/layout/main.xml:23:        android:title="@string/ble_anp"
res/layout/main.xml:24:        android:summary="@string/ble_anp_summary"
res/layout/main.xml:31:        android:title="@string/ble_anp_detail">
res/layout/alert_notification_list_sbm_phone.xml:25:            android:title="@string/ble_anp_incall"
res/layout/alert_notification_list_sbm_phone.xml:29:            android:title="@string/ble_anp_carriiermail_sbm"
res/layout/alert_notification_list_sbm_phone.xml:33:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_sbm_phone.xml:37:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_sbm_phone.xml:41:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_sbm_phone.xml:45:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_sbm_tab.xml:25:            android:title="@string/ble_anp_carriiermail_sbm"
res/layout/alert_notification_list_sbm_tab.xml:29:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_sbm_tab.xml:33:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_sbm_tab.xml:37:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_sbm_tab.xml:41:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_dcm_phone.xml:25:            android:title="@string/ble_anp_incall"
res/layout/alert_notification_list_dcm_phone.xml:29:            android:title="@string/ble_anp_carriiermail_dcm"
res/layout/alert_notification_list_dcm_phone.xml:33:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_dcm_phone.xml:37:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_dcm_phone.xml:41:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list_dcm_phone.xml:45:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_dcm_phone.xml:49:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_kddi_phone.xml:25:            android:title="@string/ble_anp_incall"
res/layout/alert_notification_list_kddi_phone.xml:29:            android:title="@string/ble_anp_carriiermail_kddi"
res/layout/alert_notification_list_kddi_phone.xml:33:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_kddi_phone.xml:37:            android:title="@string/ble_anp_gmial"
res/layout/alert_notification_list_kddi_phone.xml:41:            android:title="@string/ble_anp_message"
res/layout/alert_notification_list_kddi_phone.xml:45:            android:title="@string/ble_anp_alarm"
res/layout/alert_notification_list_kddi_phone.xml:49:            android:title="@string/ble_anp_schedule"
AndroidManifest.xml:69:            android:label="@string/ble_anp">
bin/AndroidManifest.xml:69:            android:label="@string/ble_anp">
#65
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:896:            text = getString(R.string.ans_text_email);
#66
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_SettingsActivity.java:66:                anpPreference.setSummary(getString(R.string.ble_anp_summary_tablet));
res/layout/main.xml:24:        android:summary="@string/ble_anp_summary"
#67
res/layout/alert_notification_list_kddi_tab.xml:45:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list.xml:49:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_dcm_tab.xml:45:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_sbm_phone.xml:45:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_sbm_tab.xml:41:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_dcm_phone.xml:49:            android:title="@string/ble_anp_schedule"
res/layout/alert_notification_list_kddi_phone.xml:49:            android:title="@string/ble_anp_schedule"
#68
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:906:            text = getString(R.string.ans_text_carriiermail);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:909:            text = getString(R.string.ans_text_carriiermail);
#69
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:331:            editor.putBoolean(getString(R.string.anp_email), true);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:930:            boolean email = sp.getBoolean(getString(R.string.anp_email), true);
res/layout/alert_notification_list_kddi_tab.xml:28:            android:key="@string/anp_email"
res/layout/alert_notification_list.xml:32:            android:key="@string/anp_email"
res/layout/alert_notification_list_dcm_tab.xml:28:            android:key="@string/anp_email"
res/layout/alert_notification_list_sbm_phone.xml:32:            android:key="@string/anp_email"
res/layout/alert_notification_list_sbm_tab.xml:28:            android:key="@string/anp_email"
res/layout/alert_notification_list_dcm_phone.xml:32:            android:key="@string/anp_email"
res/layout/alert_notification_list_kddi_phone.xml:32:            android:key="@string/anp_email"
#70
AndroidManifest.xml:43:        android:label="@string/app_name" >
AndroidManifest.xml:48:            android:label="@string/app_name"
AndroidManifest.xml:58:            android:label="@string/app_name"
bin/AndroidManifest.xml:43:        android:label="@string/app_name" >
bin/AndroidManifest.xml:48:            android:label="@string/app_name"
bin/AndroidManifest.xml:58:            android:label="@string/app_name"
#71
res/layout/alert_notification_list_kddi_tab.xml:25:            android:title="@string/ble_anp_carriiermail_kddi"
res/layout/alert_notification_list.xml:29:            android:title="@string/ble_anp_carriiermail"
res/layout/alert_notification_list_dcm_tab.xml:25:            android:title="@string/ble_anp_carriiermail_dcm"
res/layout/alert_notification_list_sbm_phone.xml:29:            android:title="@string/ble_anp_carriiermail_sbm"
res/layout/alert_notification_list_sbm_tab.xml:25:            android:title="@string/ble_anp_carriiermail_sbm"
res/layout/alert_notification_list_dcm_phone.xml:29:            android:title="@string/ble_anp_carriiermail_dcm"
res/layout/alert_notification_list_kddi_phone.xml:29:            android:title="@string/ble_anp_carriiermail_kddi"
#72
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:641:            //if (!text.equals(getString(R.string.ans_text_carrier_new_message))) {
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:655:            // ||(text.startsWith(getString(R.string.ans_text_carrier_new_message))&&(ledOffMS==0))) {
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:656:             || text.startsWith(getString(R.string.ans_text_carrier_new_message))) {
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:662:                     (text.startsWith(getString(R.string.ans_text_carrier_new_message_nx ))||
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:663:                      text.startsWith(getString(R.string.ans_text_carrier_new_message_isp)))){
#73
res/layout/alert_notification_list_dcm_tab.xml:25:            android:title="@string/ble_anp_carriiermail_dcm"
res/layout/alert_notification_list_dcm_phone.xml:29:            android:title="@string/ble_anp_carriiermail_dcm"
#74
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:890:            text = getString(R.string.ans_text_call);
#75
res/layout/main.xml:58:        android:summary="@string/ble_pxp_summary"
#76
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:663:                      text.startsWith(getString(R.string.ans_text_carrier_new_message_isp)))){
#77
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_FMP_DialogActivity.java:496:        dialog.setPositiveButton(mContext.getString(R.string.fmp_alert_btn), this);
#78
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:1437:        return sp.getBoolean(getString(R.string.menu_anp_switch),true);
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_SettingsActivity.java:155:        if(key.equals(res.getString(R.string.menu_anp_switch))){
src/com/fujitsu/mobile_phone/BLESettings/PassProfile.java:858:        return sp.getBoolean(getString(R.string.menu_anp_switch),true);
res/layout/main.xml:22:        android:key="@string/menu_anp_switch"
res/layout/main.xml:30:        android:key="@string/menu_anp"
#79
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:330:            editor.putBoolean(getString(R.string.anp_carriiermail), true);
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:950:            boolean carrier = sp.getBoolean(getString(R.string.anp_carriiermail), true);
res/layout/alert_notification_list_kddi_tab.xml:24:            android:key="@string/anp_carriiermail"
res/layout/alert_notification_list.xml:28:            android:key="@string/anp_carriiermail"
res/layout/alert_notification_list_dcm_tab.xml:24:            android:key="@string/anp_carriiermail"
res/layout/alert_notification_list_sbm_phone.xml:28:            android:key="@string/anp_carriiermail"
res/layout/alert_notification_list_sbm_tab.xml:24:            android:key="@string/anp_carriiermail"
res/layout/alert_notification_list_dcm_phone.xml:28:            android:key="@string/anp_carriiermail"
res/layout/alert_notification_list_kddi_phone.xml:28:            android:key="@string/anp_carriiermail"
#80
res/layout/alert_notification_list_kddi_tab.xml:25:            android:title="@string/ble_anp_carriiermail_kddi"
res/layout/alert_notification_list_kddi_phone.xml:29:            android:title="@string/ble_anp_carriiermail_kddi"
#81
src/com/fujitsu/mobile_phone/BLESettings/BLEConflictErrorActivity.java:65:        dialog.setPositiveButton(R.string.btn_ok,
#82
src/com/fujitsu/mobile_phone/BLESettings/Bluetooth_Low_Energy_FMP_DialogActivity.java:495:        dialog.setMessage(mContext.getString(R.string.fmp_alert_msg, mDeviceName));
#83
#84
src/com/fujitsu/mobile_phone/BLESettingsServer/GattServerProfile.java:338:            editor.putString(getString(R.string.menu_pxp), "0");
src/com/fujitsu/mobile_phone/BLESettings/PxpProfile.java:239:                        int pxpval = Integer.parseInt(sp.getString(getString(R.string.menu_pxp), "0"));
src/com/fujitsu/mobile_phone/BLESettings/PxpProfile.java:384://            int linkLossAlertLevel = Integer.parseInt(sp.getString(getString(R.string.menu_pxp), "0"));
src/com/fujitsu/mobile_phone/BLESettings/PxpProfile.java:428:                    int linkLossAlertLevel = Integer.parseInt(sp.getString(getString(R.string.menu_pxp), "0"));
res/layout/main.xml:56:        android:key="@string/menu_pxp"
#85
src/com/fujitsu/mobile_phone/BLESettingsServer/BLESettingIntentReceiver.java:145:        notification.setLatestEventInfo(context, res.getString(R.string.ble_conflict_error_title),
#86
res/layout/alert_notification_list_kddi_tab.xml:29:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list.xml:33:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_dcm_tab.xml:29:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_sbm_phone.xml:33:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_sbm_tab.xml:29:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_dcm_phone.xml:33:            android:title="@string/ble_anp_email"
res/layout/alert_notification_list_kddi_phone.xml:33:            android:title="@string/ble_anp_email"
#87
#88
res/layout/main.xml:41:        android:title="@string/ble_fmp"
res/layout/main.xml:42:        android:summary="@string/ble_fmp_summary"
res/layout/main.xml:48:        android:title="@string/ble_fmp_detail"
#89
src/com/fujitsu/mobile_phone/BLESettings/BLEConflictErrorActivity.java:54:        dialog.setTitle(R.string.ble_conflict_detail_title);
#90
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:914:            text = getString(R.string.ans_text_alarmclock);
#91
src/com/fujitsu/mobile_phone/BLESettings/AnsProfile.java:893:            text = getString(R.string.ans_text_message);
#92
src/com/android/bluetooth/opp/BluetoothOppTransferAdapter.java:126:                    completeText = r.getString(R.string.download_success_nosize);
#93
src/com/android/bluetooth/opp/BluetoothOppBtEnableActivity.java:75:        p.mTitle = getString(R.string.bt_enable_title);
#94
src/com/android/bluetooth/opp/BluetoothOppIncomingFileConfirmActivity.java:147:        String text = getString(R.string.incoming_file_confirm_content_nosize,
#95
res/menu/browsercontext.xml:60:            android:title="@string/select_dot"/>
#96
src/com/android/browser/Tab.java:799:                    .setMessage(R.string.popup_window_attempt)
#97
tests/src/com/android/contacts/interactions/ContactDeletionInteractionTest.java:137:        assertWithMessageId(R.string.multipleContactDeleteConfirmation);
src/com/android/contacts/interactions/ContactDeletionInteraction.java:257:            mMessageId = R.string.multipleContactDeleteConfirmation;
#98
res/menu/view_contact.xml:39:        android:title="@string/menu_redirect_calls_to_vm" />
#99
res/menu-sw600dp/view_contact.xml:21:        android:title="@string/menu_editContact"
res/menu/view_contact.xml:20:        android:title="@string/menu_editContact"
#100
src/com/android/contacts/quickcontact/QuickContactActivity.java:383:                getResources().getString(R.string.menu_addStar));
src/com/android/contacts/detail/ContactDetailDisplayUtils.java:200:                    isStarred ? R.string.menu_removeStar : R.string.menu_addStar));
src/com/android/contacts/detail/ContactDetailDisplayUtils.java:219:            starredMenuItem.setTitle(isStarred ? R.string.menu_removeStar : R.string.menu_addStar);
res/layout/quickcontact_photo_container.xml:70:            android:contentDescription="@string/menu_addStar" />
#101
#102
#103
#104
res/menu-sw600dp/view_contact.xml:36:        android:title="@string/menu_create_contact_shortcut" />
res/menu/view_contact.xml:43:        android:title="@string/menu_create_contact_shortcut" />
#105
res/layout/group_editor_view.xml:42:            android:hint="@string/group_name_hint"
res/layout-land/group_editor_view.xml:41:            android:hint="@string/group_name_hint"
res/layout-sw600dp/group_editor_view.xml:48:            android:hint="@string/group_name_hint"
#106
src/com/android/contacts/activities/PeopleActivity.java:1521:                            R.string.activity_title_settings);
AndroidManifest.xml:233:            android:label="@string/activity_title_settings"
bin/AndroidManifest.xml:233:            android:label="@string/activity_title_settings"
#107
AndroidManifest.xml:79:            android:label="@string/people"
bin/AndroidManifest.xml:79:            android:label="@string/people"
#108
res/layout/group_editor_autocomplete_view.xml:26:    android:hint="@string/enter_contact_name"
#109
#110
src/com/android/contacts/editor/EventFieldEditorView.java:79:        mNoDateString = mContext.getString(R.string.event_edit_field_hint_text);
#111
src/com/android/contacts/detail/ContactDetailFragment.java:1913:                    ContextMenu.NONE, getString(R.string.set_default));
#112
AndroidManifest.xml:122:            <intent-filter android:label="@string/frequentList">
bin/AndroidManifest.xml:122:            <intent-filter android:label="@string/frequentList">
#113
#114
res/layout/add_group_menu_item.xml:31:    android:description="@string/menu_new_group_action_bar"
res/menu-sw600dp/people_options.xml:32:        android:title="@string/menu_new_group_action_bar"
res/menu/people_options.xml:32:        android:title="@string/menu_new_group_action_bar"
#115
res/menu-sw600dp/view_contact.xml:32:        android:title="@string/menu_deleteContact" />
res/menu/view_contact.xml:30:        android:title="@string/menu_deleteContact" />
#116
src/com/android/contacts/editor/ContactEditorFragment.java:1213:                    Toast.makeText(mContext, R.string.contactSavedToast, Toast.LENGTH_SHORT).show();
src/com/android/contacts/activities/ConfirmAddDetailActivity.java:846:                Toast.makeText(context, R.string.contactSavedToast, Toast.LENGTH_SHORT).show();
#117
#118
src/com/android/contacts/activities/PeopleActivity.java:777:                            areGroupWritableAccountsAvailable() ? -1 : R.string.noAccounts);
res/layout/group_browse_list_fragment.xml:64:        android:text="@string/noAccounts" />
#119
src/com/android/contacts/quickcontact/QuickContactActivity.java:379:                getResources().getString(R.string.menu_removeStar));
src/com/android/contacts/detail/ContactDetailDisplayUtils.java:200:                    isStarred ? R.string.menu_removeStar : R.string.menu_addStar));
src/com/android/contacts/detail/ContactDetailDisplayUtils.java:219:            starredMenuItem.setTitle(isStarred ? R.string.menu_removeStar : R.string.menu_addStar);
#120
src/com/android/contacts/list/DefaultContactBrowseListFragment.java:232:                    mSearchProgressText.setText(R.string.listFoundAllContactsZero);
res/layout/contact_picker_content.xml:38:              android:text="@string/listFoundAllContactsZero"/>
#121
src/com/android/contacts/list/JoinContactListAdapter.java:154:                        R.string.separatorJoinAggregateAll);
#122
AndroidManifest.xml:337:            android:label="@string/viewContactTitle"
bin/AndroidManifest.xml:337:            android:label="@string/viewContactTitle"
#123
tests/src/com/android/contacts/interactions/ContactDeletionInteractionTest.java:118:        assertWithMessageId(R.string.deleteConfirmation);
src/com/android/contacts/interactions/ContactDeletionInteraction.java:259:            mMessageId = R.string.deleteConfirmation;
#124
src/com/android/contacts/editor/ContactEditorFragment.java:1603:                    .setMessage(R.string.aggregation_suggestion_edit_dialog_message)
#125
#126
src/com/android/contacts/editor/PhotoActionPopup.java:88:                    context.getString(R.string.removePhoto)));
#127
#128
AndroidManifest.xml:297:            android:label="@string/shortcutContact"
bin/AndroidManifest.xml:297:            android:label="@string/shortcutContact"
#129
#130
#131
src/com/android/contacts/editor/SplitContactConfirmationDialogFragment.java:43:        builder.setTitle(R.string.splitConfirmation_title);
#132
AndroidManifest.xml:116:            <intent-filter android:label="@string/starredList">
bin/AndroidManifest.xml:116:            <intent-filter android:label="@string/starredList">
#133
src/com/android/contacts/detail/ContactDetailFragment.java:1180:            this.mLabel = context.getString(R.string.add_connection_button);
#134
res/layout/external_group_editor_view.xml:34:        android:text="@string/group_read_only" />
res/layout-sw600dp/external_group_editor_view.xml:48:            android:text="@string/group_read_only" />
#135
src/com/android/contacts/list/ContactTileListFragment.java:198:                emptyText = getString(R.string.noContacts);
src/com/android/contacts/activities/PeopleActivity.java:780:                    mContactsUnavailableFragment.setMessageText(R.string.noContacts, -1);
#136
res/layout/contacts_unavailable_fragment.xml:64:                android:text="@string/contacts_unavailable_add_account" />
res/layout/group_browse_list_fragment.xml:73:        android:text="@string/contacts_unavailable_add_account" />
#137
res/menu-sw600dp/people_options.xml:63:        android:title="@string/menu_settings" />
res/menu/people_options.xml:53:        android:title="@string/menu_settings" />
#138
src/com/android/contacts/editor/RawContactReadOnlyEditorView.java:191:                    Toast.makeText(mContext, mContext.getString(R.string.contact_read_only),
src/com/android/contacts/activities/ConfirmAddDetailActivity.java:672:            mReadOnlyWarningView.setText(getString(R.string.contact_read_only));
#139
#140
AndroidManifest.xml:128:            <intent-filter android:label="@string/strequentList">
bin/AndroidManifest.xml:128:            <intent-filter android:label="@string/strequentList">
#141
src/com/android/contacts/activities/ContactEditorAccountsChangedActivity.java:93:            textView.setText(getString(R.string.contact_editor_prompt_multiple_accounts));
#142
#143
res/layout/raw_contact_readonly_editor_view.xml:56:        android:text="@string/edit_contact"
#144
#145
src/com/android/contacts/detail/ContactDetailFragment.java:2096:            return getString(R.string.menu_copyContact);
#146
src/com/android/contacts/editor/ContactEditorFragment.java:1216:                Toast.makeText(mContext, R.string.contactSavedErrorToast, Toast.LENGTH_LONG).show();
src/com/android/contacts/activities/ConfirmAddDetailActivity.java:848:                Toast.makeText(context, R.string.contactSavedErrorToast, Toast.LENGTH_LONG).show();
src/com/android/contacts/ContactSaveService.java:1074:            showToast(R.string.contactSavedErrorToast);
src/com/android/contacts/ContactSaveService.java:1077:            showToast(R.string.contactSavedErrorToast);
#147
#148
res/xml/preference_display_options.xml:25:        android:title="@string/display_options_view_names_as"
res/xml/preference_display_options.xml:26:        android:dialogTitle="@string/display_options_view_names_as" />
#149
res/menu/edit_contact.xml:34:        android:title="@string/menu_discard" />
res/menu/edit_group.xml:21:        android:title="@string/menu_discard"
#150
#151
src/com/android/contacts/quickcontact/QuickContactActivity.java:759:                        Toast.makeText(QuickContactActivity.this, R.string.quickcontact_missing_app,
#152
res/menu-sw600dp/view_group.xml:21:        android:title="@string/menu_editGroup"
res/menu/view_group.xml:20:        android:title="@string/menu_editGroup"
#153
AndroidManifest.xml:309:            android:label="@string/shortcutDialContact"
bin/AndroidManifest.xml:309:            android:label="@string/shortcutDialContact"
#154
#155
src/com/android/contacts/list/ContactsUnavailableFragment.java:120:                mMessageView.setText(R.string.upgrade_in_progress);
#156
src/com/android/contacts/list/JoinContactListAdapter.java:148:                        R.string.separatorJoinAggregateSuggestions);
#157
src/com/android/contacts/NonPhoneActivity.java:74:            alertDialog.setTitle(R.string.non_phone_caption);
#158
src/com/android/contacts/editor/ContactEditorFragment.java:1555:                    .setMessage(R.string.aggregation_suggestion_join_dialog_message)
#159
src/com/android/contacts/editor/PhotoActionPopup.java:93:            final int takePhotoResId = replace ? R.string.take_new_photo : R.string.take_photo;
#160
AndroidManifest.xml:323:            android:label="@string/shortcutMessageContact"
bin/AndroidManifest.xml:323:            android:label="@string/shortcutMessageContact"
#161
src/com/android/contacts/editor/PhotoActionPopup.java:95:            final int pickPhotoResId = replace ? R.string.pick_new_photo : R.string.pick_photo;
#162
#163
src/com/android/contacts/editor/LabeledEditorView.java:384:        builder.setTitle(R.string.customLabelPickerTitle);
#164
src/com/android/contacts/quickcontact/DataAction.java:211:                            mAlternateIconDescriptionRes = R.string.audio_chat;
src/com/android/contacts/detail/ContactDetailFragment.java:1733:                secondaryActionDescription = resources.getString(R.string.audio_chat);
#165
src/com/android/contacts/quickcontact/DataAction.java:208:                            mAlternateIconDescriptionRes = R.string.video_chat;
src/com/android/contacts/detail/ContactDetailFragment.java:1729:                secondaryActionDescription = resources.getString(R.string.video_chat);
#166
src/com/android/contacts/group/GroupBrowseListFragment.java:216:        mEmptyView.setText(R.string.noGroups);
src/com/android/contacts/activities/PeopleActivity.java:776:                    mContactsUnavailableFragment.setMessageText(R.string.noGroups,
res/layout/group_browse_list_fragment.xml:48:        android:text="@string/noGroups" />
#167
res/layout/quickcontact_photo_container.xml:29:            android:contentDescription="@string/description_contact_photo" />
res/layout/item_photo_editor.xml:43:            android:contentDescription="@string/description_contact_photo"
#168
res/menu-sw600dp/view_contact.xml:27:        android:title="@string/menu_share"
res/menu/view_contact.xml:25:        android:title="@string/menu_share"
#169
AndroidManifest.xml:379:            <intent-filter android:label="@string/insertContactDescription">
bin/AndroidManifest.xml:379:            <intent-filter android:label="@string/insertContactDescription">
#170
src/com/android/contacts/activities/ContactEditorAccountsChangedActivity.java:144:            leftButton.setText(getString(R.string.keep_local));
#171
res/layout/edit_add_field.xml:34:        android:text="@string/add_new_entry_for_section" />
#172
res/layout-sw720dp-land/contact_detail_empty.xml:27:        android:text="@string/no_contact_details"
res/layout/contact_detail_fragment.xml:40:            android:text="@string/no_contact_details"
res/layout/contact_detail_empty.xml:23:    android:text="@string/no_contact_details"
res/layout-land/contact_detail_fragment.xml:69:            android:text="@string/no_contact_details"
#173
res/layout/raw_contact_editor_view.xml:72:            android:text="@string/add_field"
#174
src/com/android/contacts/activities/JoinContactActivity.java:98:        setTitle(R.string.titleJoinContactDataWith);
#175
src/com/android/contacts/detail/ContactDetailTabCarousel.java:130:        mUpdatesTab.setLabel(mContext.getString(R.string.contactDetailUpdates));
#176
src/com/android/contacts/activities/ContactEditorAccountsChangedActivity.java:158:            rightButton.setText(getString(R.string.add_account));
#177
tests/src/com/android/contacts/interactions/ContactDeletionInteractionTest.java:130:        assertWithMessageId(R.string.readOnlyContactDeleteConfirmation);
src/com/android/contacts/interactions/ContactDeletionInteraction.java:253:            mMessageId = R.string.readOnlyContactDeleteConfirmation;
#178
src/com/android/contacts/list/DefaultContactBrowseListFragment.java:229:                    mSearchProgressText.setText(R.string.search_results_searching);
#179
src/com/android/contacts/ContactSaveService.java:1070:            showToast(R.string.contactsJoinedMessage);
#180
src/com/android/contacts/detail/ContactDetailDisplayUtils.java:140:            return context.getString(R.string.contact_directory_description, displayName);
#181
src/com/android/contacts/editor/ContactEditorFragment.java:1170:                    .setMessage(R.string.cancel_confirmation_dialog_message)
src/com/android/contacts/group/GroupEditorFragment.java:551:                    .setMessage(R.string.cancel_confirmation_dialog_message)
#182
#183
#184
AndroidManifest.xml:354:            android:label="@string/activity_title_confirm_add_detail"
bin/AndroidManifest.xml:354:            android:label="@string/activity_title_confirm_add_detail"
#185
res/xml/preference_display_options.xml:20:        android:title="@string/display_options_sort_list_by"
res/xml/preference_display_options.xml:21:        android:dialogTitle="@string/display_options_sort_list_by" />
#186
#187
src/com/android/contacts/NonPhoneActivity.java:79:                    getActivity().getString(R.string.non_phone_close), this);
#188
#189
#190
src/com/android/contacts/preference/DisplayOrderPreference.java:50:                mContext.getString(R.string.display_options_view_given_name_first),
src/com/android/contacts/preference/DisplayOrderPreference.java:69:                return mContext.getString(R.string.display_options_view_given_name_first);
#191
#192
src/com/android/contacts/detail/ContactDetailFragment.java:1910:                    ContextMenu.NONE, getString(R.string.clear_default));
#193
res/layout/organization_editor_view_switcher.xml:39:        android:text="@string/add_organization"
#194
#195
res/layout/photo_selector_view.xml:37:        android:contentDescription="@string/contact_detail_picture_description"/>
#196
src/com/android/contacts/list/ContactsUnavailableFragment.java:108:                mMessageView.setText(R.string.locale_change_in_progress);
#197
src/com/android/contacts/activities/ContactEditorAccountsChangedActivity.java:140:            textView.setText(getString(R.string.contact_editor_prompt_zero_accounts));
#198
#199
src/com/android/contacts/editor/PhotoActionPopup.java:83:                    context.getString(R.string.use_photo_as_primary)));
#200
res/menu/contact_picker_options.xml:20:        android:title="@string/pickerNewContactText"
res/layout-sw600dp/contact_picker.xml:77:            android:text="@string/pickerNewContactText"/>
#201
#202
src/com/android/contacts/activities/ContactSelectionActivity.java:291:                setTitle(R.string.callShortcutActivityTitle);
#203
#204
src/com/android/contacts/util/AccountPromptUtils.java:97:        options.putCharSequence(KEY_INTRO_MESSAGE, activity.getString(R.string.no_account_prompt));
#205
#206
src/com/android/contacts/editor/GroupMembershipView.java:309:                getContext().getString(R.string.create_group_item_label), false));
#207
#208
src/com/android/contacts/editor/PhotoActionPopup.java:95:            final int pickPhotoResId = replace ? R.string.pick_new_photo : R.string.pick_photo;
#209
AndroidManifest.xml:407:            android:label="@string/attach_photo_dialog_title"
bin/AndroidManifest.xml:407:            android:label="@string/attach_photo_dialog_title"
#210
res/layout/group_detail_fragment_empty_view.xml:37:        android:text="@string/addPeopleToGroup"
#211
res/layout/quickcontact_photo_container.xml:57:            android:contentDescription="@string/viewContactDesription" />
AndroidManifest.xml:342:            <intent-filter android:label="@string/viewContactDesription">
bin/AndroidManifest.xml:342:            <intent-filter android:label="@string/viewContactDesription">
#212
#213
src/com/android/contacts/detail/ContactLoaderFragment.java:333:                final CharSequence chooseTitle = mContext.getText(R.string.share_via);
#214
res/menu-sw600dp/people_options.xml:26:        android:title="@string/menu_new_contact_action_bar"
res/menu/people_options.xml:26:        android:title="@string/menu_new_contact_action_bar"
#215
src/com/android/contacts/detail/ContactDetailFragment.java:825:        String networkKindTitle = mContext.getString(R.string.connections);
#216
src/com/android/contacts/activities/ContactEditorAccountsChangedActivity.java:96:            button.setText(getString(R.string.add_new_account));
src/com/android/contacts/activities/ContactEditorAccountsChangedActivity.java:119:            leftButton.setText(getString(R.string.add_new_account));
#217
res/menu/edit_contact.xml:29:        android:title="@string/menu_joinAggregate" />
#218
res/layout-sw720dp-land/updates_header_contact.xml:34:        android:text="@string/recent_updates"
res/layout-land/updates_header_contact.xml:37:        android:text="@string/recent_updates"
res/layout-sw600dp-land/updates_header_contact.xml:34:        android:text="@string/recent_updates"
#219
src/com/android/contacts/activities/ContactDetailActivity.java:284:            Toast.makeText(ContactDetailActivity.this, R.string.toast_making_personal_copy,
src/com/android/contacts/activities/PeopleActivity.java:1247:            Toast.makeText(PeopleActivity.this, R.string.toast_making_personal_copy,
#220
src/com/android/contacts/preference/DisplayOrderPreference.java:51:                mContext.getString(R.string.display_options_view_family_name_first),
src/com/android/contacts/preference/DisplayOrderPreference.java:71:                return mContext.getString(R.string.display_options_view_family_name_first);
#221
src/com/android/contacts/preference/SortOrderPreference.java:50:                mContext.getString(R.string.display_options_sort_by_given_name),
src/com/android/contacts/preference/SortOrderPreference.java:69:                return mContext.getString(R.string.display_options_sort_by_given_name);
#222
src/com/android/contacts/detail/ContactDetailTabCarousel.java:124:        mAboutTab.setLabel(mContext.getString(R.string.contactDetailAbout));
#223
res/layout/group_detail_fragment_empty_view.xml:29:        android:text="@string/emptyGroup"
#224
src/com/android/contacts/activities/ActionBarAdapter.java:182:        addTab(TabState.ALL, R.drawable.ic_tab_all, R.string.contactsAllLabel);
src/com/android/contacts/activities/ActionBarAdapter.java:190:        navAdapter.add(mContext.getString(R.string.contactsAllLabel));
#225
src/com/android/contacts/editor/RawContactEditorView.java:249:                    mContext.getString(R.string.account_type_format, accountType));
src/com/android/contacts/editor/RawContactReadOnlyEditorView.java:154:            mAccountTypeTextView.setText(mContext.getString(R.string.account_type_format,
#226
res/menu-sw600dp/people_options.xml:68:        android:title="@string/menu_help" />
res/menu/people_options.xml:57:        android:title="@string/menu_help" />
res/menu/edit_contact.xml:38:        android:title="@string/menu_help" />
#227
res/layout/contacts_unavailable_fragment.xml:71:                android:text="@string/contacts_unavailable_import_contacts" />
#228
src/com/android/contacts/editor/GroupMembershipView.java:163:        mNoGroupString = mContext.getString(R.string.group_edit_field_hint_text);
#229
src/com/android/contacts/activities/ActionBarAdapter.java:183:        addTab(TabState.GROUPS, R.drawable.ic_tab_groups, R.string.contactsGroupsLabel);
src/com/android/contacts/activities/ActionBarAdapter.java:191:        navAdapter.add(mContext.getString(R.string.contactsGroupsLabel));
#230
#231
src/com/android/contacts/group/GroupEditorFragment.java:629:            Toast.makeText(mContext, success ? R.string.groupSavedToast :
#232
src/com/android/contacts/detail/ContactDetailFragment.java:2049:            return getString(R.string.add_to_my_contacts);
#233
res/xml/preference_headers.xml:22:        android:title="@string/preference_displayOptions" />
#234
src/com/android/contacts/detail/ContactDetailFragment.java:1888:                ContextMenu.NONE, getString(R.string.copy_text));
#235
src/com/android/contacts/editor/PhotoActionPopup.java:93:            final int takePhotoResId = replace ? R.string.take_new_photo : R.string.take_photo;
#236
src/com/android/contacts/activities/ContactSelectionActivity.java:296:                setTitle(R.string.messageShortcutActivityTitle);
#237
#238
res/layout/contacts_unavailable_fragment.xml:85:                android:text="@string/upgrade_out_of_memory_retry" />
#239
src/com/android/contacts/list/DefaultContactBrowseListFragment.java:203:                        mCounterHeaderView.setText(R.string.listTotalPhoneContactsZero);
#240
src/com/android/contacts/interactions/GroupDeletionDialogFragment.java:51:        String message = getActivity().getString(R.string.delete_group_dialog_message, label);
#241
#242
src/com/android/contacts/activities/ShowOrCreateActivity.java:213:                        R.string.add_contact_dlg_message_fmt, mCreateDescrip);
#243
src/com/android/contacts/list/JoinContactListFragment.java:129:        String blurb = activity.getString(R.string.blurbJoinContactDataWith, displayName);
#244
res/layout/date_picker.xml:33:        android:text="@string/date_year_toggle"
#245
src/com/android/contacts/editor/RawContactEditorView.java:230:                mAccountTypeTextView.setText(mContext.getString(R.string.external_profile_title,
src/com/android/contacts/editor/RawContactReadOnlyEditorView.java:137:                mAccountTypeTextView.setText(mContext.getString(R.string.external_profile_title,
#246
#247
res/layout-sw720dp-land/updates_header_contact.xml:34:        android:text="@string/recent_updates"
res/layout/updates_header_contact.xml:60:            android:text="@string/recent"
res/layout-land/updates_header_contact.xml:37:        android:text="@string/recent_updates"
res/layout-sw600dp-land/updates_header_contact.xml:34:        android:text="@string/recent_updates"
res/layout-sw600dp/updates_header_contact.xml:52:        android:text="@string/recent"
#248
src/com/android/contacts/group/GroupEditorFragment.java:335:                R.string.dialog_new_group_account, AccountListFilter.ACCOUNTS_GROUP_WRITABLE,
#249
src/com/android/contacts/editor/ContactEditorFragment.java:1088:            Toast.makeText(mContext, R.string.toast_join_with_empty_contact,
#250
res/xml/searchable.xml:27:    android:searchSettingsDescription="@string/search_settings_description"
#251
AndroidManifest.xml:372:            <intent-filter android:label="@string/editContactDescription">
bin/AndroidManifest.xml:372:            <intent-filter android:label="@string/editContactDescription">
#252
src/com/android/contacts/activities/ContactEditorAccountsChangedActivity.java:114:            textView.setText(getString(R.string.contact_editor_prompt_one_account,
#253
res/menu-sw600dp/view_group.xml:27:        android:title="@string/menu_deleteGroup" />
res/menu/view_group.xml:25:        android:title="@string/menu_deleteGroup" />
#254
res/xml/searchable.xml:19:    android:hint="@string/searchHint"
#255
src/com/android/contacts/NonPhoneActivity.java:77:                    getActivity().getString(R.string.non_phone_add_to_contacts), this);
#256
src/com/android/contacts/detail/PhotoSelectionHandler.java:239:            Toast.makeText(mContext, R.string.photoPickerNotFoundText, Toast.LENGTH_LONG).show();
src/com/android/contacts/detail/PhotoSelectionHandler.java:325:                        mContext, R.string.photoPickerNotFoundText, Toast.LENGTH_LONG).show();
src/com/android/contacts/detail/PhotoSelectionHandler.java:336:                        mContext, R.string.photoPickerNotFoundText, Toast.LENGTH_LONG).show();
#257
src/com/android/contacts/activities/ConfirmAddDetailActivity.java:782:                    null, activityTarget.getText(R.string.savingContact)));
#258
src/com/android/contacts/editor/RawContactEditorView.java:227:                mAccountTypeTextView.setText(R.string.local_profile_title);
src/com/android/contacts/editor/RawContactReadOnlyEditorView.java:134:                mAccountTypeTextView.setText(R.string.local_profile_title);
#259
src/com/android/contacts/activities/ContactSelectionActivity.java:276:                setTitle(R.string.shortcutActivityTitle);
#260
res/xml/searchable.xml:18:    android:label="@string/contactsList"
AndroidManifest.xml:70:        android:label="@string/contactsList"
AndroidManifest.xml:164:            android:label="@string/contactsList"
bin/AndroidManifest.xml:70:        android:label="@string/contactsList"
bin/AndroidManifest.xml:164:            android:label="@string/contactsList"
#261
#262
#263
src/com/android/contacts/interactions/GroupCreationDialogFragment.java:76:        return R.string.create_group_dialog_title;
#264
src/com/android/contacts/group/GroupEditorFragment.java:630:                    R.string.groupSavedErrorToast, Toast.LENGTH_SHORT).show();
#265
src/com/android/contacts/detail/ContactDetailDisplayUtils.java:172:                                    R.string.organization_company_and_title,
#266
src/com/android/contacts/editor/SplitContactConfirmationDialogFragment.java:43:        builder.setTitle(R.string.splitConfirmation_title);
src/com/android/contacts/editor/SplitContactConfirmationDialogFragment.java:45:        builder.setMessage(R.string.splitConfirmation);
#267
src/com/android/contacts/activities/ContactSelectionActivity.java:261:                setTitle(R.string.contactPickerActivityTitle);
src/com/android/contacts/activities/ContactSelectionActivity.java:266:                setTitle(R.string.contactPickerActivityTitle);
src/com/android/contacts/activities/ContactSelectionActivity.java:271:                setTitle(R.string.contactPickerActivityTitle);
src/com/android/contacts/activities/ContactSelectionActivity.java:281:                setTitle(R.string.contactPickerActivityTitle);
src/com/android/contacts/activities/ContactSelectionActivity.java:286:                setTitle(R.string.contactPickerActivityTitle);
src/com/android/contacts/activities/ContactSelectionActivity.java:301:                setTitle(R.string.contactPickerActivityTitle);
#268
src/com/android/contacts/preference/SortOrderPreference.java:51:                mContext.getString(R.string.display_options_sort_by_family_name),
src/com/android/contacts/preference/SortOrderPreference.java:71:                return mContext.getString(R.string.display_options_sort_by_family_name);
#269
#270
#271
res/menu/view_contact.xml:34:        android:title="@string/menu_set_ring_tone" />
#272
src/com/android/contacts/detail/ContactLoaderFragment.java:382:                        R.string.createContactShortcutSuccessful,
#273
#274
res/menu-sw600dp/people_options.xml:72:        android:title="@string/menu_export_database"
res/menu/people_options.xml:61:        android:title="@string/menu_export_database"
#275
#276
res/layout/user_profile_button.xml:30:    android:text="@string/profile_display_name"
#277
res/layout/contacts_unavailable_fragment.xml:78:                android:text="@string/upgrade_out_of_memory_uninstall" />
#278
src/com/android/contacts/list/ContactsUnavailableFragment.java:132:                String message = getResources().getString(R.string.upgrade_out_of_memory,
res/layout/contacts_unavailable_fragment.xml:78:                android:text="@string/upgrade_out_of_memory_uninstall" />
res/layout/contacts_unavailable_fragment.xml:85:                android:text="@string/upgrade_out_of_memory_retry" />
#279
#280
tests/src/com/android/contacts/interactions/ContactDeletionInteractionTest.java:123:        assertWithMessageId(R.string.readOnlyContactWarning);
src/com/android/contacts/interactions/ContactDeletionInteraction.java:255:            mMessageId = R.string.readOnlyContactWarning;
#281
res/menu/edit_contact.xml:25:        android:title="@string/menu_splitAggregate" />
#282
res/layout/create_new_contact.xml:42:            android:text="@string/pickerNewContactHeader"
#283
src/com/android/contacts/quickcontact/QuickContactActivity.java:620:                Toast.makeText(QuickContactActivity.this, R.string.invalidContactMessage,
#284
#285
res/layout/contacts_unavailable_fragment.xml:57:                android:text="@string/contacts_unavailable_create_contact" />
#286
#287
#288
#289
#290
#291
#292
#293
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:834:                    Toast.makeText(CallDetailActivity.this, R.string.toast_call_detail_error,
#294
#295
#296
#297
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:596:            customText.setText(R.string.outgoingCallDetailTitle);
#298
#299
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:1100:                    call_count.setText(String.format(getString(R.string.all_count), details.length));
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:1143:                    call_count.setText(String.format(getString(R.string.all_count), details.length));
#300
#301
#302
#303
#304
#305
#306
#307
#308
#309
#310
#311
#312
#313
#314
#315
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1119://        alertDialogBuilder.setTitle(R.string.clearCallLogConfirmation_title);
#316
#317
#318
#319
#320
#321
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1119://        alertDialogBuilder.setTitle(R.string.clearCallLogConfirmation_title);
#322
#323
#324
#325
#326
#327
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1217://                mHistoryTitleText.setText(R.string.phone_dsp_call_log_incoming_history);
res/layout/calls_incoming.xml:32:        android:text="@string/phone_dsp_call_log_incoming_history" />
#328
#329
#330
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:868://                showFilterStatus(R.string.call_log_incoming_header);
#331
#332
#333
#334
#335
#336
#337
#338
#339
#340
#341
#342
#343
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:180:                sdf = new SimpleDateFormat(mResources.getString(R.string.calllog_list_date_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:183:                sdf = new SimpleDateFormat(mResources.getString(R.string.calllog_list_date_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:186:                sdf = new SimpleDateFormat(mResources.getString(R.string.calllog_list_date_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:193://                sdf = new SimpleDateFormat(mResources.getString(R.string.calllog_list_date_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:196://                sdf = new SimpleDateFormat(mResources.getString(R.string.calllog_list_date_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:199://                sdf = new SimpleDateFormat(mResources.getString(R.string.calllog_list_date_format));
#344
#345
#346
#347
#348
#349
#350
#351
#352
#353
#354
#355
#356
#357
#358
#359
#360
#361
#362
res/layout/call_detail_view.xml:138:                        android:text="@string/register"
res/layout/call_detail_view.xml:402:                        android:text="@string/register"
res/layout/call_detail_view.xml:433:                        android:text="@string/register"
#363
#364
#365
#366
#367
#368
#369
#370
#371
#372
#373
#374
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1198://                mHistoryTitleText.setText(R.string.phone_dsp_call_log_redialing);
res/layout/calls_outgoing.xml:32:        android:text="@string/phone_dsp_call_log_redialing" />
#375
#376
#377
#378
#379
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:1029:                            getString(R.string.menu_callNumber,
#380
#381
#382
#383
#384
#385
#386
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:310://                    R.string.call_log_item_count_and_date, callCount.intValue(), dateText);
#387
#388
#389
#390
#391
#392
#393
#394
#395
#396
#397
#398
#399
#400
#401
#402
#403
#404
#405
#406
#407
#408
#409
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1235://                mHistoryTitleText.setText(R.string.phone_dsp_call_log_missed_call_history);
#410
#411
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:1092:                        call_name.setText(R.string.non_contacts_number);
#412
#413
#414
#415
#416
#417
#418
#419
#420
#421
#422
#423
#424
#425
#426
#427
#428
#429
#430
#431
#432
#433
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:899:                            getString(R.string.description_view_contact, nameOrNumber);
#434
#435
#436
#437
#438
#439
#440
src/com/fujitsu/mobile_phone/contacts/calllog/CallTypeHelper.java:59:        mOutgoingName = resources.getString(R.string.type_outgoing);
#441
#442
#443
#444
#445
#446
#447
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:181:                sdftime = new SimpleDateFormat(mResources.getString(R.string.calllog_detail_time12_format), Locale.US);
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:194://                sdftime = new SimpleDateFormat(mResources.getString(R.string.calllog_detail_time12_format), Locale.US);
src/com/fujitsu/mobile_phone/contacts/calllog/CallDetailHistoryAdapter.java:218:            sdftime = new SimpleDateFormat(mContext.getResources().getString(R.string.calllog_detail_time12_format), Locale.US);
#448
#449
#450
#451
#452
#453
#454
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:184:                sdftime = new SimpleDateFormat(mResources.getString(R.string.calllog_detail_time24_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:187:                sdftime = new SimpleDateFormat(mResources.getString(R.string.calllog_detail_time24_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:197://                sdftime = new SimpleDateFormat(mResources.getString(R.string.calllog_detail_time24_format));
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:200://                sdftime = new SimpleDateFormat(mResources.getString(R.string.calllog_detail_time24_format));
src/com/fujitsu/mobile_phone/contacts/calllog/CallDetailHistoryAdapter.java:221:            sdftime = new SimpleDateFormat(mContext.getResources().getString(R.string.calllog_detail_time24_format));
src/com/fujitsu/mobile_phone/contacts/calllog/CallDetailHistoryAdapter.java:224:            sdftime = new SimpleDateFormat(mContext.getResources().getString(R.string.calllog_detail_time24_format));
#455
#456
#457
#458
#459
#460
#461
#462
src/com/fujitsu/mobile_phone/contacts/calllog/CallTypeHelper.java:60:        mMissedName = resources.getString(R.string.type_missed);
#463
#464
#465
#466
#467
#468
#469
#470
#471
#472
#473
#474
#475
#476
#477
#478
#479
#480
#481
#482
#483
#484
#485
#486
#487
#488
#489
src/com/fujitsu/mobile_phone/contacts/calllog/PhoneNumberHelper.java:105://            return mResources.getString(R.string.payphone);
src/com/fujitsu/mobile_phone/contacts/calllog/PhoneNumberHelper.java:114:            return mResources.getString(R.string.payphone);
#490
#491
#492
#493
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:123:            return resources.getString(R.string.call_log_empty_gecode);
#494
#495
#496
#497
#498
#499
#500
#501
#502
#503
#504
#505
#506
#507
#508
#509
#510
src/com/fujitsu/mobile_phone/contacts/calllog/PhoneNumberHelper.java:102://            return mResources.getString(R.string.private_num);
src/com/fujitsu/mobile_phone/contacts/calllog/PhoneNumberHelper.java:111:            return mResources.getString(R.string.private_num);
#511
#512
#513
#514
#515
#516
#517
#518
#519
#520
#521
#522
#523
#524
#525
#526
#527
#528
#529
#530
#531
#532
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1179://                mHistoryTitleText.setText(R.string.log_text_header_all);
#533
#534
#535
#536
#537
#538
#539
#540
#541
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:588://        customText.setText(R.string.callDetailTitle);
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:599:            customText.setText(R.string.callDetailTitle);
#542
#543
#544
#545
src/com/fujitsu/mobile_phone/contacts/calllog/CallDetailHistoryAdapter.java:271:        return mContext.getString(R.string.callDetailsDurationFormat, minutes, seconds);
#546
#547
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogAdapter.java:239://                             : R.string.call_log_old_header);
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogAdapter.java:243:                             : mContext.getResources().getString(R.string.call_log_old_header));
#548
#549
#550
#551
#552
src/com/fujitsu/mobile_phone/contacts/calllog/PhoneNumberHelper.java:99://            return mResources.getString(R.string.unknown);
src/com/fujitsu/mobile_phone/contacts/calllog/PhoneNumberHelper.java:108:            return mResources.getString(R.string.unknown);
#553
#554
#555
#556
#557
#558
#559
res/menu/call_details_cab.xml:20:        android:title="@string/menu_copy"
#560
#561
#562
#563
#564
#565
#566
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:1029:                            getString(R.string.menu_callNumber,
#567
#568
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:874://                showFilterStatus(R.string.call_log_missed_header);
#569
#570
#571
#572
#573
#574
#575
#576
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1122://                .setMessage(R.string.recentCalls_noDataError_message);
#577
#578
#579
#580
#581
#582
#583
#584
#585
#586
#587
#588
#589
#590
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:593:            customText.setText(R.string.incomingCallDetailTitle);
#591
#592
#593
#594
#595
#596
#597
#598
#599
#600
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:871://                showFilterStatus(R.string.call_log_outgoing_header);
#601
#602
#603
#604
#605
#606
#607
#608
#609
#610
#611
#612
#613
#614
#615
#616
#617
#618
#619
#620
#621
#622
#623
#624
#625
#626
#627
#628
#629
#630
#631
#632
#633
#634
#635
#636
#637
#638
#639
#640
#641
#642
#643
#644
#645
#646
#647
#648
#649
#650
#651
#652
#653
#654
#655
#656
#657
#658
#659
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogAdapter.java:238://                             ? R.string.call_log_new_header
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogAdapter.java:242:                             ? mContext.getResources().getString(R.string.call_log_new_header)
#660
#661
#662
#663
#664
#665
#666
#667
#668
src/com/fujitsu/mobile_phone/contacts/calllog/CallTypeHelper.java:58:        mIncomingName = resources.getString(R.string.type_incoming);
#669
#670
#671
#672
#673
#674
#675
#676
#677
#678
#679
#680
#681
#682
#683
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:267://                        mResources.getString(R.string.recentCalls_addToContact));
#684
#685
#686
#687
#688
#689
#690
#691
#692
#693
#694
src/com/fujitsu/mobile_phone/contacts/util/ClipboardUtils.java:65:            String toastText = context.getString(R.string.toast_text_copied);
#695
#696
#697
#698
#699
#700
#701
#702
#703
#704
#705
#706
#707
#708
#709
#710
#711
#712
#713
#714
#715
#716
#717
#718
res/layout/call_detail_view.xml:301:                    android:text="@string/messege_button"
#719
#720
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:947:                    mainActionDescription = getString(R.string.description_add_contact);
#721
#722
#723
#724
#725
#726
#727
#728
#729
#730
#731
#732
#733
#734
#735
#736
#737
#738
#739
#740
#741
#742
#743
#744
#745
#746
#747
#748
#749
#750
#751
#752
#753
#754
#755
#756
#757
#758
#759
#760
#761
#762
#763
#764
#765
#766
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:324:           	views.callCount.setText(String.format(mResources.getString(R.string.calllog_list_count_format), callCount));
#767
#768
#769
#770
#771
#772
#773
#774
#775
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:1032:                                    getString(R.string.description_call, nameOrNumber));
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogListItemHelper.java:151:        return mResources.getString(R.string.description_call, recipient);
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogListItemHelper.java:161://                mResources.getString(R.string.description_call_log_play_button));
#776
#777
#778
#779
#780
#781
#782
#783
#784
#785
#786
#787
#788
#789
#790
#791
#792
#793
#794
#795
#796
#797
#798
src/com/fujitsu/mobile_phone/contacts/calllog/PhoneNumberHelper.java:119://            return mResources.getString(R.string.voicemail);
res/layout/call_log_list_item.xml:550:            android:contentDescription="@string/voicemail" />
res/layout/call_detail_history_item.xml:288:            android:contentDescription="@string/voicemail" />
#799
#800
res/layout/call_log_fragment.xml:208:            android:text="@string/recentCalls_empty"
res/layout/call_log_fragment.xml:218:            android:text="@string/recentCalls_empty"
#801
#802
#803
#804
#805
#806
#807
#808
#809
#810
#811
#812
#813
#814
#815
#816
#817
#818
#819
#820
#821
#822
#823
#824
#825
#826
res/layout/call_detail_view.xml:606:                        android:text="@string/deleteButton_call_log"
res/layout/call_detail_view.xml:616:                        android:text="@string/deleteButton_call_log"
#827
#828
#829
#830
#831
#832
#833
#834
#835
#836
#837
#838
#839
#840
#841
#842
#843
#844
res/layout/call_log_fragment.xml:270:            android:text="@string/tabPhoneBookLabel"
#845
#846
#847
#848
#849
#850
#851
#852
#853
#854
#855
#856
#857
#858
#859
#860
#861
#862
#863
#864
#865
#866
#867
#868
#869
#870
#871
#872
#873
res/layout/call_detail_view.xml:241:                    android:text="@string/description_dial_button"
res/layout/call_detail_view.xml:271:                    android:text="@string/description_dial_button"
res/layout/call_detail_view.xml:551:                        android:text="@string/description_dial_button"
res/layout/call_detail_view.xml:559:                        android:text="@string/description_dial_button"
#874
#875
#876
#877
#878
#879
#880
#881
#882
#883
#884
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogListItemHelper.java:161://                mResources.getString(R.string.description_call_log_play_button));
#885
#886
#887
#888
#889
#890
#891
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:411://                Toast.makeText(CallDetailActivity.this, R.string.quickcontact_missing_app, Toast.LENGTH_SHORT).show();
#892
#893
#894
#895
#896
#897
#898
#899
src/com/fujitsu/mobile_phone/contacts/calllog/CallDetailHistoryAdapter.java:217:            sdf = new SimpleDateFormat(mContext.getResources().getString(R.string.calllog_detail_date_format));
src/com/fujitsu/mobile_phone/contacts/calllog/CallDetailHistoryAdapter.java:220:            sdf = new SimpleDateFormat(mContext.getResources().getString(R.string.calllog_detail_date_format));
src/com/fujitsu/mobile_phone/contacts/calllog/CallDetailHistoryAdapter.java:223:            sdf = new SimpleDateFormat(mContext.getResources().getString(R.string.calllog_detail_date_format));
#900
#901
#902
#903
#904
#905
#906
#907
#908
#909
#910
#911
#912
#913
#914
#915
#916
#917
#918
#919
#920
#921
#922
#923
#924
#925
#926
#927
#928
#929
#930
#931
#932
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:877://                showFilterStatus(R.string.call_log_voicemail_header);
#933
#934
#935
#936
#937
#938
#939
#940
#941
#942
#943
#944
#945
#946
#947
#948
#949
#950
#951
#952
#953
#954
#955
#956
src/com/fujitsu/mobile_phone/contacts/calllog/CallTypeHelper.java:61:        mVoicemailName = resources.getString(R.string.type_voicemail);
#957
#958
src/com/fujitsu/mobile_phone/contacts/CallDetailActivity.java:1052:                                getString(R.string.description_send_text_message, nameOrNumber));
#959
#960
#961
#962
#963
#964
#965
#966
#967
#968
#969
src/com/fujitsu/mobile_phone/contacts/PhoneCallDetailsHelper.java:267://                        mResources.getString(R.string.recentCalls_addToContact));
src/com/fujitsu/mobile_phone/contacts/calllog/CallLogFragment.java:1122://                .setMessage(R.string.recentCalls_noDataError_message);
res/layout/call_log_fragment.xml:208:            android:text="@string/recentCalls_empty"
res/layout/call_log_fragment.xml:218:            android:text="@string/recentCalls_empty"
#970
#971
#972
#973
#974
#975
#976
#977
#978
#979
#980
#981
#982
#983
#984
#985
#986
#987
#988
#989
#990
#991
#992
#993
#994
#995
#996
#997
#998
#999
res/layout/appwidget_error.xml:28:    android:text="@string/gadget_error_text"
#1000
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:842://        	int strId = R.string.out_of_brand;
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:934:            String str = getString(R.string.out_of_brand);
#1001
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:233:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:330:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:428:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:524:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:620:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1642:                return R.string.item_phone_group;
#1002
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:242:            R.string.item_settings,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:339:            R.string.item_settings,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:437:            R.string.item_settings,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:533:            R.string.item_settings,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:629:            R.string.item_settings,
#1003
#1004
AndroidManifest.xml:46:        android:description="@string/permdesc_uninstall_shortcut"/>
#1005
#1006
res/layout/drop_target_bar.xml:23:<!-- delete android:text="@string/delete_zone_label_workspace" -->
#1007
src/com/fujitsu/mobile_phone/houjin_simplehome/DeleteDropTarget.java:184://                : R.string.delete_target_label);
#1008
src/com/fujitsu/mobile_phone/houjin_simplehome/AppsCustomizePagedView.java:630:            mWidgetInstructionToast = Toast.makeText(getContext(),R.string.long_press_widget_to_add,
#1009
#1010
AndroidManifest.xml:51:        android:label="@string/permlab_read_settings"
#1011
#1012
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:641:            R.string.item_clock,
#1013
src/com/fujitsu/mobile_phone/houjin_simplehome/PagedView.java:266:        mLimitScrollToast = Toast.makeText(mContext, mContext.getString(R.string.limit_scroll), Toast.LENGTH_SHORT);
#1014
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:6422:                    		telephoneingTxt.setText(R.string.telephoning);
res/layout/communication_view.xml:51:                    android:text="@string/telephoning"
#1015
#1016
#1017
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2697:        //menu.add(MENU_GROUP_INIT_MAIL, MENU_INIT_MAIL_CHOICE, 0, R.string.menu_choose_mail_init);
#1018
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1439:            R.string.item_telephone_book,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1458:            R.string.item_telephone_book,
#1019
res/layout/all_apps_cling.xml:65:            android:text="@string/all_apps_cling_add_item" />
res/layout/all_apps_cling.xml:147:                android:text="@string/all_apps_cling_add_item" />
#1020
src/com/fujitsu/mobile_phone/houjin_simplehome/DragLayer.java:215:            int stringId = isEditingName ? R.string.folder_tap_to_rename : R.string.folder_tap_to_close;
#1021
#1022
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2684:        menu.add(0, MENU_MANAGE_APPS, 0, R.string.menu_manage_apps)
#1023
src/com/fujitsu/mobile_phone/houjin_simplehome/UninstallShortcutReceiver.java:134:                Toast.makeText(context, context.getString(R.string.shortcut_uninstalled, name),
#1024
AndroidManifest.xml:45:        android:label="@string/permlab_uninstall_shortcut"
#1025
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2793:        	builder.setPositiveButton(R.string.choose_mail_init_ok_button, new DialogInterface.OnClickListener() {
#1026
res/layout/all_apps_cling.xml:79:            android:text="@string/all_apps_cling_checkbox_text"
res/layout/all_apps_cling.xml:156:            android:text="@string/all_apps_cling_checkbox_text"
#1027
src/com/fujitsu/mobile_phone/houjin_simplehome/InstallShortcutReceiver.java:159:                Toast.makeText(context, context.getString(R.string.shortcut_duplicate, name),
#1028
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2688:        menu.add(0, MENU_SYSTEM_SETTINGS, 0, R.string.menu_settings)
#1029
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2806:            builder.setNegativeButton(R.string.choose_mail_init_cancel_button, null);
#1030
#1031
src/com/fujitsu/mobile_phone/houjin_simplehome/Folder.java:500:                        getContext().getString(R.string.folder_closed));
#1032
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:272:            R.string.item_music,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:369:            R.string.item_music,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:467:            R.string.item_music,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:557:            R.string.item_music,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:663:            R.string.item_music,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1644:                return R.string.item_music;
#1033
#1034
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2791:        	builder.setTitle(R.string.choose_mail_init_title);
#1035
src/com/fujitsu/mobile_phone/houjin_simplehome/DragLayer.java:215:            int stringId = isEditingName ? R.string.folder_tap_to_rename : R.string.folder_tap_to_close;
#1036
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:224:            R.string.item_convenient_tool,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:321:            R.string.item_convenient_tool,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:419:            R.string.item_convenient_tool,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:515:            R.string.item_convenient_tool,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:611:            R.string.item_convenient_tool,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1640:                return R.string.item_convenient_tool;
#1037
src/com/fujitsu/mobile_phone/houjin_simplehome/Hotseat.java:118:        allAppsButton.setContentDescription(context.getString(R.string.all_apps_button_label));
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:4660:            text.add(getString(R.string.all_apps_button_label));
src/com/fujitsu/mobile_phone/houjin_simplehome/AppsCustomizeTabHost.java:120:        label = getContext().getString(R.string.all_apps_button_label);
src/com/fujitsu/mobile_phone/houjin_simplehome/HandleView.java:50:        setContentDescription(context.getString(R.string.all_apps_button_label));
#1038
#1039
src/com/fujitsu/mobile_phone/houjin_simplehome/Folder.java:268:                    String.format(getContext().getString(R.string.folder_renamed), newTitle));
#1040
AndroidManifest.xml:39:        android:label="@string/permlab_install_shortcut"
#1041
res/layout/workspace_cling.xml:43:                android:text="@string/workspace_cling_move_item" />
#1042
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:260:            R.string.item_profile,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:357:            R.string.item_profile,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:455:            R.string.item_profile,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:551:            R.string.item_profile,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:647:            R.string.item_profile,
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:7404:                && item.titleResourceId == R.string.item_profile) {
#1043
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:248:            R.string.item_map,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:345:            R.string.item_map,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:443:            R.string.item_map,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:539:            R.string.item_map,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:635:            R.string.item_map,
#1044
AndroidManifest.xml:168:            android:label="@string/pick_wallpaper"
#1045
#1046
AndroidManifest.xml:40:        android:description="@string/permdesc_install_shortcut" />
#1047
res/layout/rename_folder.xml:27:        android:text="@string/rename_folder_label"
#1048
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:187:            R.string.item_mail,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:284:            R.string.item_mail,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:382:            R.string.item_mail,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:480:            R.string.item_mail,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:571:            R.string.item_mail,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1647:                return R.string.item_mail;
#1049
src/com/fujitsu/mobile_phone/houjin_simplehome/Workspace.java:4019:        return String.format(getContext().getString(R.string.workspace_scroll_format),
#1050
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2792:        	builder.setMessage(R.string.choose_mail_init_message);
#1051
#1052
res/layout/workspace_cling.xml:55:        android:text="@string/workspace_cling_open_all_apps" />
#1053
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:4662:            text.add(getString(R.string.all_apps_home_button_label));
#1054
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2287:        int strId = (isHotseatLayout ? R.string.hotseat_out_of_space : R.string.out_of_space);
#1055
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeUtility.java:98:                        Toast.makeText(context, R.string.activity_disable, Toast.LENGTH_SHORT).show();
#1056
#1057
src/com/fujitsu/mobile_phone/houjin_simplehome/Folder.java:144:            sHintText = res.getString(R.string.folder_hint_text);
res/layout/user_folder.xml:49:        android:hint="@string/folder_hint_text"
#1058
src/com/fujitsu/mobile_phone/houjin_simplehome/MailSelectActivity.java:123://				 * builder.setTitle(R.string.menu_item_add_item); View view =
res/layout/all_apps_cling.xml:141:                android:text="@string/menu_item_add_item"
#1059
#1060
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:212:            R.string.item_camera,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:309:            R.string.item_camera,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:407:            R.string.item_camera,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:503:            R.string.item_camera,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:599:            R.string.item_camera,
#1061
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:6878:                Toast.makeText(Launcher.this,R.string.mail_no_app,Toast.LENGTH_LONG).show();
src/com/fujitsu/mobile_phone/houjin_simplehome/Workspace.java:4301:                        Toast.makeText(getContext(), R.string.mail_no_app,
#1062
AndroidManifest.xml:126:        android:label="@string/application_name"
AndroidManifest.xml:133:        android:label="@string/application_name"
#1063
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2957:            pickIntent.putExtra(Intent.EXTRA_TITLE, getText(R.string.title_select_application));
#1064
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2695:        menu.add(MENU_GROUP_INIT_MENU, MENU_SHOW_ALL_WIDGETS, 0, R.string.menu_show_all_widgets);
#1065
#1066
AndroidManifest.xml:57:        android:label="@string/permlab_write_settings"
#1067
src/com/fujitsu/mobile_phone/houjin_simplehome/InstallShortcutReceiver.java:156:                Toast.makeText(context, context.getString(R.string.completely_out_of_space),
#1068
#1069
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:233:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:330:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:428:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:524:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:620:            R.string.item_phone_group,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1429:            R.string.item_phone,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1452:            R.string.item_phone,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1642:                return R.string.item_phone_group;
#1070
#1071
src/com/fujitsu/mobile_phone/houjin_simplehome/Workspace.java:4292:                        Toast.makeText(getContext(),R.string.mail_uninstall,Toast.LENGTH_LONG).show();
#1072
#1073
#1074
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:940:            builder.setPositiveButton(R.string.cling_dismiss,
res/values-sw720dp/styles.xml:29:        <item name="android:text">@string/cling_dismiss</item>
res/values-sw600dp/styles.xml:28:        <item name="android:text">@string/cling_dismiss</item>
res/values/styles.xml:38:        <item name="android:text">@string/cling_dismiss</item>
#1075
#1076
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2694:        menu.add(MENU_GROUP_INIT_MENU, MENU_SHOW_ALL_APPS, 0, R.string.menu_show_all_apps);
#1077
#1078
res/layout/workspace_cling.xml:38:                android:text="@string/workspace_cling_title" />
#1079
AndroidManifest.xml:58:        android:description="@string/permdesc_write_settings"/>
#1080
#1081
res/layout/communication_view.xml:77:                        android:text="@string/phonebook_title"
#1082
res/layout/communication_view.xml:144:                    android:text="@string/internet_title"
#1083
#1084
src/com/fujitsu/mobile_phone/houjin_simplehome/AppsCustomizePagedView.java:1982:            stringId = R.string.apps_customize_widgets_scroll_format;
#1085
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2703:            menu.add(0, MENU_HELP, 0, R.string.menu_help)
#1086
res/layout/folder_cling.xml:35:                android:text="@string/folder_cling_title" />
#1087
src/com/fujitsu/mobile_phone/houjin_simplehome/Folder.java:436:                        String.format(getContext().getString(R.string.folder_opened),
#1088
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:6889:            builder.setPositiveButton(R.string.activity_resolver_use_once,
src/com/fujitsu/mobile_phone/houjin_simplehome/MailSelectActivity.java:148://            builder.setPositiveButton(R.string.activity_resolver_use_once, new DialogInterface.OnClickListener() {
res/layout/mail_select_dialog.xml:76:                android:text="@string/activity_resolver_use_once"
#1089
res/layout/market_button.xml:24:    android:contentDescription="@string/market"
#1090
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:3244:            int messageId = R.string.uninstall_system_app_text;
#1091
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:254:            R.string.item_tv,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:351:            R.string.item_tv,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:449:            R.string.item_tv,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:545:            R.string.item_tv,
#1092
src/com/fujitsu/mobile_phone/houjin_simplehome/AppsCustomizeTabHost.java:125:        label = getContext().getString(R.string.widgets_tab_label);
#1093
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:6466:                    	telephoneingTxt.setText(R.string.phone_title);
res/layout/communication_view.xml:43:                    android:text="@string/phone_title"
#1094
#1095
res/layout/folder_cling.xml:41:                android:text="@string/folder_cling_create_folder" />
#1096
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:1650:                return R.string.app_name;
AndroidManifest.xml:262:            android:label="@string/app_name"
#1097
#1098
AndroidManifest.xml:52:        android:description="@string/permdesc_read_settings"/>
#1099
res/layout/communication_view.xml:115:                    android:text="@string/mail_title"
#1100
src/com/fujitsu/mobile_phone/houjin_simplehome/AppsCustomizePagedView.java:1974:        int stringId = R.string.default_scroll_format;
src/com/fujitsu/mobile_phone/houjin_simplehome/PagedView.java:2002:        return String.format(getContext().getString(R.string.default_scroll_format),
#1101
src/com/fujitsu/mobile_phone/houjin_simplehome/Workspace.java:4239:                            Toast.makeText(getContext(),R.string.mail_disable,Toast.LENGTH_LONG).show();
#1102
src/com/fujitsu/mobile_phone/houjin_simplehome/DeleteDropTarget.java:183://            setText(isUninstall ? R.string.delete_target_uninstall_label
src/com/fujitsu/mobile_phone/houjin_simplehome/DeleteDropTarget.java:186:        		setText(R.string.delete_target_uninstall_label);
#1103
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2948:        String applicationName = getResources().getString(R.string.group_applications);
#1104
#1105
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:3275:            Toast.makeText(this, R.string.activity_not_found, Toast.LENGTH_SHORT).show();
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:3295:            Toast.makeText(this, R.string.activity_not_found, Toast.LENGTH_SHORT).show();
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:3308:            Toast.makeText(this, R.string.activity_not_found, Toast.LENGTH_SHORT).show();
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:3310:            Toast.makeText(this, R.string.activity_not_found, Toast.LENGTH_SHORT).show();
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListActivity.java:115:            Toast.makeText(this, R.string.activity_not_found, Toast.LENGTH_SHORT).show();
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeUtility.java:128:            Toast.makeText(context, R.string.activity_not_found, Toast.LENGTH_SHORT).show();
#1106
#1107
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:6887:            builder.setTitle(R.string.mail_select_dialog_title);
src/com/fujitsu/mobile_phone/houjin_simplehome/MailSelectActivity.java:146://			builder.setTitle(R.string.mail_select_dialog_title);
#1108
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:218:            R.string.item_data_gallery,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:315:            R.string.item_data_gallery,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:413:            R.string.item_data_gallery,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:509:            R.string.item_data_gallery,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:605:            R.string.item_data_gallery,
#1109
src/com/fujitsu/mobile_phone/houjin_simplehome/InfoDropTarget.java:105:        setText(R.string.info_target_label);
res/layout/drop_target_bar.xml:36:<!-- delete android:text="@string/info_target_label" -->     
#1110
src/com/fujitsu/mobile_phone/houjin_simplehome/Workspace.java:546://                R.string.workspace_description_format, getChildCount()));
#1111
res/layout/all_apps_cling.xml:45:                android:text="@string/all_apps_cling_switch" />
res/layout/all_apps_cling.xml:128:                android:text="@string/all_apps_cling_switch" />
#1112
src/com/fujitsu/mobile_phone/houjin_simplehome/AppsCustomizePagedView.java:1978:            stringId = R.string.apps_customize_apps_scroll_format;
#1113
res/layout/search_bar.xml:68:        android:contentDescription="@string/accessibility_voice_search_button">
#1114
src/com/fujitsu/mobile_phone/houjin_simplehome/AddAdapter.java:73:        mItems.add(new ListItem(res, R.string.group_wallpapers,
#1115
res/layout/search_bar.xml:43:        android:contentDescription="@string/accessibility_search_button">
#1116
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2680://        menu.add(MENU_GROUP_WALLPAPER, MENU_WALLPAPER_SETTINGS, 0, R.string.menu_wallpaper)
#1117
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2994:                getText(R.string.chooser_wallpaper));
#1118
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:6895:                    .setNegativeButton(R.string.activity_resolver_use_always,
src/com/fujitsu/mobile_phone/houjin_simplehome/MailSelectActivity.java:153://                .setNegativeButton(R.string.activity_resolver_use_always, new DialogInterface.OnClickListener() {
res/layout/mail_select_dialog.xml:64:                android:text="@string/activity_resolver_use_always"
#1119
#1120
res/layout/wallpaper_chooser.xml:40:            android:text="@string/wallpaper_instructions"
#1121
src/com/fujitsu/mobile_phone/houjin_simplehome/Launcher.java:2287:        int strId = (isHotseatLayout ? R.string.hotseat_out_of_space : R.string.out_of_space);
#1122
res/layout/all_apps_cling.xml:51:                android:text="@string/all_apps_cling_title" />
res/layout/all_apps_cling.xml:121:                android:text="@string/all_apps_cling_title"
#1123
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:203:            R.string.item_appli,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:300:            R.string.item_appli,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:398:            R.string.item_appli,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:494:            R.string.item_appli,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:590:            R.string.item_appli,
#1124
#1125
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:193:            R.string.item_internet,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:290:            R.string.item_internet,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:388:            R.string.item_internet,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:486:            R.string.item_internet,
src/com/fujitsu/mobile_phone/houjin_simplehome/EasyModeListConstants.java:580:            R.string.item_internet,
#1126
src/com/fujitsu/mobile_phone/houjin_simplehome/FolderIcon.java:151:        icon.setContentDescription(String.format(launcher.getString(R.string.folder_name_format),
src/com/fujitsu/mobile_phone/houjin_simplehome/FolderIcon.java:645:        setContentDescription(String.format(getContext().getString(R.string.folder_name_format),
#1127
#1128
#1129
#1130
#1131
#1132
src/com/android/deskclock/alarms/AlarmNotifications.java:179:                .setContentTitle(context.getString(R.string.alarm_missed_title))
#1133
src/com/android/deskclock/AlarmClockFragment.java:622:            Toast toast = Toast.makeText(context, R.string.missed_alarm_has_been_deleted,
#1134
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:856:            description.setText(R.string.disable_terminal_sending);
#1135
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceReceiver.java:28:        return R.string.receiver;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ReceiverIndividualDiagnosisActivity.java:53:            return R.string.receiver_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ReceiverIndividualDiagnosisActivity.java:66:                    getString(R.string.receiver_self_diagnosis_guidance_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ReceiverIndividualDiagnosisActivity.java:79:            super(R.string.receiver_self_diagnosis_ans_text);
#1136
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:182:            super(R.string.key_self_diagnosis_ans_text);
#1137
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:192:            super(R.string.led_self_red_led_ans_text);
#1138
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceUsbConnector.java:31:        return R.string.usb_connector;
#1139
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:198:            return R.string.lcd_diagnosis_green_text;
#1140
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:224:            return R.string.lcd_diagnosis_blue_text;
#1141
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:121:                            .getString(R.string.gps_self_diagnosis_ans_text_widhout_address,
#1142
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceMicrophone.java:28:        return R.string.microphone;
#1143
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MobileLightIndividualDiagnosisActivity.java:50:            return R.string.light_self_diagnosis_guidance_text;
#1144
res/layout/dialog_password_input.xml:20:        android:text="@string/dialog_password_description"
#1145
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1165:            super(R.string.dialog_send_complete);
#1146
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:57:            return R.string.key_self_diagnosis_guidance_text;
#1147
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:93:            txTop.setText(getActivity().getString(R.string.battery_self_diagnosis_ans_text,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BatteryIndividualDiagnosisActivity.java:66:            txTop.setText(getActivity().getString(R.string.battery_self_diagnosis_ans_text,
#1148
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:126:                    .getString(R.string.luminance_self_diagnosis_text));
#1149
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:110:                    .getString(R.string.geomagnetic_self_diagnosis_select_text));
#1150
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:290:            preference.setTitle(R.string.terminal_info_send);
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:291:            preference.setSummary(R.string.terminal_info_send_summary);
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:300:                case R.string.terminal_info_send: // 端末情報送信
#1151
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1082:            super(R.string.error_no_connect_network);
#1152
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceTouchPanel.java:28:        return R.string.touchpanel;
#1153
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1022:            super(R.string.dialog_cancel_send);
#1154
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:51:            return R.string.vibe_diagnosis_gidance_text;
#1155
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:120:            return R.string.lcd_diagnosis_white_text;
#1156
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:122:                    .getString(R.string.gyroscope_self_diagnosis_true_text));
#1157
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseDialogFragment.java:171:        return R.string.btn_cancel;
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseProgressDialogFragment.java:58:            getString(R.string.btn_cancel),
#1158
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceBattery.java:28:        return R.string.battery;
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceChargeTerminal.java:28:        return R.string.battery_charging;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:93:            txTop.setText(getActivity().getString(R.string.battery_self_diagnosis_ans_text,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BatteryIndividualDiagnosisActivity.java:50:            return R.string.battery_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BatteryIndividualDiagnosisActivity.java:66:            txTop.setText(getActivity().getString(R.string.battery_self_diagnosis_ans_text,
#1159
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:232:                    .getString(R.string.luminance_self_diagnosis_ans_text));
#1160
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:94:                    .getString(R.string.earphone_diagnosis_true_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:155:                    .getString(R.string.earphone_diagnosis_true_text));
#1161
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseResultFragment.java:87:        btn.setText(getString(R.string.btn_end));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:151:                    getString(R.string.btn_end));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:124:                    getString(R.string.btn_end));
res/layout/include_menu_btn_set.xml:14:            android:text="@string/btn_end"
#1162
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:680:            return R.string.not_support_ms;
#1163
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:377:            noBtn.setText(R.string.btn_skip);
#1164
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceWlan.java:31:        return R.string.wlan;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/WlanIndividualDiagnosisActivity.java:51:            return R.string.wlan_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/WlanIndividualDiagnosisActivity.java:70:                    .getString(R.string.wlan_self_diagnosis_ans_text, str));
#1165
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:423:            super(R.string.camera_self_preview_anser_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:519:            super(R.string.camera_self_preview_anser_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:570:            super(R.string.camera_self_preview_anser_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:596:            super(R.string.camera_self_preview_anser_text);
#1166
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:74:            super(R.string.earphone_diagnosis_start_text);
#1167
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:74:                    .getString(R.string.motion_self_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:95:                    .getString(R.string.motion_self_diagnosis_start_text));
#1168
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:291:                    R.string.title_storage, R.string.sub_title_storage, this);
#1169
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:121:                    .getString(R.string.motion_self_diagnosis_false_restart));
#1170
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:117:                    .getString(R.string.charging_usb_self_diagnosis_false_text));
#1171
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:228:            super(R.string.led_self_blue_led_ans_text);
#1172
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:263:                    R.string.title_key_con, R.string.sub_title_key_con, this);
#1173
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:98:            return R.string.save_btn_summary_result;
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:192:            return R.string.save_btn_summary_result;
#1174
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:55:            return R.string.cellular_data_diagnosis_gidance_text;
#1175
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:76:            yesBtn.setText(getActivity().getString(R.string.btn_next));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:65:            yesBtn.setText(getActivity().getString(R.string.btn_next));
#1176
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RomIndividualDiagnosisActivity.java:57:            return R.string.rom_self_diagnosis_guidance_text;
#1177
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceLcd.java:28:        return R.string.lcd;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:59:            return R.string.lcd_diagnosis_start_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:120:            return R.string.lcd_diagnosis_white_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:146:            return R.string.lcd_diagnosis_black_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:172:            return R.string.lcd_diagnosis_red_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:198:            return R.string.lcd_diagnosis_green_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:224:            return R.string.lcd_diagnosis_blue_text;
#1178
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:71:            super(R.string.charging_usb_self_diagnosis_start_text);
#1179
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RomIndividualDiagnosisActivity.java:96:                    .getString(R.string.rom_self_diagnosis_ans_text, str));
#1180
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:69:            super(R.string.usb_connect_diagnosis_start_text);
#1181
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:277:                    R.string.title_wireless, R.string.sub_title_wireless, this);
#1182
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceBt.java:31:        return R.string.bt;
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseResultFragment.java:87:        btn.setText(getString(R.string.btn_end));
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseDialogFragment.java:162:        return R.string.btn_ok;
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseDialogFragment.java:171:        return R.string.btn_cancel;
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:376:            yesBtn.setText(R.string.btn_start);
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:377:            noBtn.setText(R.string.btn_skip);
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:463:            builder.setPositiveButton(getString(R.string.btn_yes),
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:469:                    .setNegativeButton(getString(R.string.btn_no),
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseProgressDialogFragment.java:58:            getString(R.string.btn_cancel),
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:76:            yesBtn.setText(getActivity().getString(R.string.btn_next));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:129:                        .getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:131:                        .getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:137:                        .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:90:            yesBtn.setText(getActivity().getString(R.string.btn_check));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:116:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:117:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:92:            yesBtn.setText(getActivity().getString(R.string.btn_check));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:118:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:119:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:544:            yesBtn.setText(R.string.btn_ok);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:122:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:123:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:151:                    getString(R.string.btn_end));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:87:                    .getString(R.string.btn_check_end));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:112:                    .getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:114:                    .getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:124:                    getString(R.string.btn_end));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:148:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:149:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:92:            yesBtn.setText(getActivity().getString(R.string.btn_check));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:118:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:119:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:68:            yesBtn.setText(R.string.btn_start);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:90:                    getString(R.string.btn_stop));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:95:            yesBtn.setText(getActivity().getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:95:            yesBtn.setText(getActivity().getString(R.string.btn_check));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:121:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:122:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BatteryIndividualDiagnosisActivity.java:68:            yesBtn.setText(getActivity().getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RomIndividualDiagnosisActivity.java:98:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:106:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:107:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RamIndividualDiagnosisActivity.java:98:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BtIndividualDiagnosisActivity.java:50:            return R.string.bt_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BtIndividualDiagnosisActivity.java:68:                    .getString(R.string.bt_self_diagnosis_ans_text, str));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BtIndividualDiagnosisActivity.java:70:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:203:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:204:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:236:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:238:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:167:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:168:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:200:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:202:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:65:            yesBtn.setText(getActivity().getString(R.string.btn_next));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SdIndividualDiagnosisActivity.java:99:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/WlanIndividualDiagnosisActivity.java:72:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:66:            btnSaveSd.setText(fragment.getString(R.string.btn_save_sd));
res/layout/indivisual_diagnosis_frame_two_button.xml:15:        android:text="@string/btn_no" />
res/layout/indivisual_diagnosis_frame_two_button.xml:21:        android:text="@string/btn_yes" />
res/layout/fragment_error.xml:35:            android:text="@string/btn_ok" />
res/layout/indivisual_diagnosis_select.xml:41:                android:text="@string/btn_diagnose" />
res/layout/camera_preview.xml:21:        android:text="@string/btn_take_photograph" />
res/layout/include_menu_btn_set.xml:14:            android:text="@string/btn_end"
res/layout/include_menu_btn_set.xml:29:            android:text="@string/btn_send"
res/layout/include_menu_btn_set.xml:45:            android:text="@string/btn_save_sd"
#1183
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:199:            return R.string.incamera_self_diagnosis_guidance_text;
#1184
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1104:            return R.string.dialog_sending;
#1185
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:105:            txTop.setText(getActivity().getString(R.string.cellular_tel_diagnosis_ring_text));
#1186
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceGps.java:37:        return R.string.gps;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:64:            return R.string.gps_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:121:                            .getString(R.string.gps_self_diagnosis_ans_text_widhout_address,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:125:                            .getString(R.string.gps_self_diagnosis_ans_text, longitude, latitude,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:135:                        .getString(R.string.gps_self_diagnosis_ans_error));
#1187
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:146:            return R.string.lcd_diagnosis_black_text;
#1188
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceMotionSensor.java:28:        return R.string.motion;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:60:            return R.string.motion_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:74:                    .getString(R.string.motion_self_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:95:                    .getString(R.string.motion_self_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:121:                    .getString(R.string.motion_self_diagnosis_false_restart));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:149:                    .getString(R.string.motion_self_diagnosis_true_text));
#1189
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:228:            preference.setSummary(R.string.auto_diagnosis_summary);
#1190
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceKeyCon.java:28:        return R.string.key;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:57:            return R.string.key_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:94:                    .getString(R.string.key_self_diagnosis_up_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:122:                    .getString(R.string.key_self_diagnosis_down_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:153:                    .getString(R.string.key_self_diagnosis_power_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:182:            super(R.string.key_self_diagnosis_ans_text);
#1191
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ReceiverIndividualDiagnosisActivity.java:53:            return R.string.receiver_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ReceiverIndividualDiagnosisActivity.java:66:                    getString(R.string.receiver_self_diagnosis_guidance_text));
#1192
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceVibe.java:28:        return R.string.vibe;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:51:            return R.string.vibe_diagnosis_gidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:63:                    getString(R.string.vibe_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:82:            super(R.string.vibe_diagnosis_ans_text);
#1193
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:34:            R.string.diagnosis_result_no_diagnosis,
#1194
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceMobileLight.java:32:        return R.string.mobile_light;
#1195
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:67:                    getString(R.string.mictophone_self_preview_diagnosis_text));
#1196
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:164:                    .getString(R.string.proximity_self_diagnosis_fumble_false_text));
#1197
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceSd.java:33:        return R.string.sd;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SdIndividualDiagnosisActivity.java:57:            return R.string.sd_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SdIndividualDiagnosisActivity.java:97:                    .getString(R.string.sd_self_diagnosis_ans_text, str));
#1198
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisResultFragment.java:49:        final String format = getString(R.string.data_Format);
#1199
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:82:            super(R.string.vibe_diagnosis_ans_text);
#1200
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:40:            R.string.diagnosis_result_diagnosis_disalbed,
#1201
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:66:            btnSaveSd.setText(fragment.getString(R.string.btn_save_sd));
res/layout/include_menu_btn_set.xml:45:            android:text="@string/btn_save_sd"
#1202
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/TouchPanelIndividualDiagnosisActivity.java:246:            super(R.string.touch_self_ans_text);
#1203
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1217:            super(R.string.please_input_password); // ここでセットした文字列は使用しない.
#1204
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:88:                    getString(R.string.mictophone_self_take_photo_diagnosis_text));
#1205
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:90:            yesBtn.setText(getActivity().getString(R.string.btn_check));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:92:            yesBtn.setText(getActivity().getString(R.string.btn_check));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:87:                    .getString(R.string.btn_check_end));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:92:            yesBtn.setText(getActivity().getString(R.string.btn_check));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:95:            yesBtn.setText(getActivity().getString(R.string.btn_check));
#1206
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SpeakerIndividualDiagnosisActivity.java:53:            return R.string.speaker_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SpeakerIndividualDiagnosisActivity.java:66:                    getString(R.string.speaker_self_diagnosis_guidance_text));
#1207
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:100:                        .getString(R.string.geomagnetic_self_diagnosis_start_text_xyz,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:80:                        .getString(R.string.geomagnetic_self_diagnosis_start_text_xyz,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:100:                        .getString(R.string.geomagnetic_self_diagnosis_start_text_xyz,
#1208
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:60:            return R.string.motion_self_diagnosis_guidance_text;
#1209
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:80:                    .getString(R.string.luminance_self_diagnosis_start_text));
#1210
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:56:            return R.string.geomagnetic_self_diagnosis_guidance_text;
#1211
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:135:                        .getString(R.string.gps_self_diagnosis_ans_error));
#1212
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MobileLightIndividualDiagnosisActivity.java:106:            super(R.string.light_self_diagnosis_light_out_text);
#1213
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:76:            super(R.string.cellular_data_diagnosis_start_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:67:            super(R.string.cellular_data_diagnosis_start_text);
#1214
res/layout/diagnosis_result.xml:34:                android:text="@string/result_title"
#1215
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:92:            return R.string.send_btn_summary_result;
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:123:            return R.string.send_btn_summary;
res/layout/include_menu_btn_set.xml:35:            android:text="@string/send_btn_summary_result"
#1216
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1177:            return R.string.dialog_saving;
#1217
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:39:            R.string.diagnosis_result_no_equipped,
#1218
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SpeakerIndividualDiagnosisActivity.java:79:            super(R.string.speaker_self_diagnosis_ans_text);
#1219
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SdIndividualDiagnosisActivity.java:57:            return R.string.sd_self_diagnosis_guidance_text;
#1220
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:413:            super(R.string.dialog_diagnosis_confirm);
#1221
AndroidManifest.xml:32:        android:label="@string/app_name"
AndroidManifest.xml:37:            android:label="@string/app_name"
AndroidManifest.xml:48:            android:label="@string/app_name"
AndroidManifest.xml:54:            android:label="@string/app_name"
AndroidManifest.xml:60:            android:label="@string/app_name"
AndroidManifest.xml:66:            android:label="@string/app_name"
AndroidManifest.xml:72:            android:label="@string/app_name"
AndroidManifest.xml:78:            android:label="@string/app_name"
AndroidManifest.xml:84:            android:label="@string/app_name"
AndroidManifest.xml:90:            android:label="@string/app_name"
AndroidManifest.xml:96:            android:label="@string/app_name"
AndroidManifest.xml:102:            android:label="@string/app_name"
AndroidManifest.xml:108:            android:label="@string/app_name"
AndroidManifest.xml:114:            android:label="@string/app_name"
AndroidManifest.xml:120:            android:label="@string/app_name"
AndroidManifest.xml:126:            android:label="@string/app_name"
AndroidManifest.xml:132:            android:label="@string/app_name"
AndroidManifest.xml:138:            android:label="@string/app_name"
AndroidManifest.xml:144:            android:label="@string/app_name"
AndroidManifest.xml:150:            android:label="@string/app_name"
AndroidManifest.xml:156:            android:label="@string/app_name"
AndroidManifest.xml:162:            android:label="@string/app_name"
AndroidManifest.xml:168:            android:label="@string/app_name"
AndroidManifest.xml:174:            android:label="@string/app_name"
AndroidManifest.xml:180:            android:label="@string/app_name"
AndroidManifest.xml:186:            android:label="@string/app_name"
AndroidManifest.xml:192:            android:label="@string/app_name"
AndroidManifest.xml:198:            android:label="@string/app_name"
AndroidManifest.xml:204:            android:label="@string/app_name"
AndroidManifest.xml:210:            android:label="@string/app_name"
AndroidManifest.xml:216:            android:label="@string/app_name"
AndroidManifest.xml:222:            android:label="@string/app_name"
#1222
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:74:            txTop.setText(getActivity().getString(R.string.led_self_diagnosis_led_text));
#1223
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:122:                    .getString(R.string.key_self_diagnosis_down_text));
#1224
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceCellularData.java:30:        return R.string.cellular_data;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:76:            super(R.string.cellular_data_diagnosis_start_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:55:            return R.string.cellular_data_diagnosis_gidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:67:            super(R.string.cellular_data_diagnosis_start_text);
#1225
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceCellularPhone.java:30:        return R.string.cellular_tel;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:84:            return R.string.cellular_tel_diagnosis_gidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:105:            txTop.setText(getActivity().getString(R.string.cellular_tel_diagnosis_ring_text));
#1226
res/layout/diagnosis_result.xml:50:                android:text="@string/interrupted"
#1227
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:291:            preference.setSummary(R.string.terminal_info_send_summary);
#1228
res/layout/camera_preview.xml:21:        android:text="@string/btn_take_photograph" />
#1229
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisDialogFragment.java:18:        return R.string.diagnosis_dialog;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RomIndividualDiagnosisActivity.java:69:            super(R.string.diagnosis_dialog);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RamIndividualDiagnosisActivity.java:69:            super(R.string.diagnosis_dialog);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SdIndividualDiagnosisActivity.java:69:            super(R.string.diagnosis_dialog);
res/layout/processing_dialog.xml:20:        android:text="@string/diagnosis_dialog" />
#1230
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:89:                    .getString(R.string.usb_connect_diagnosis_true_text));
#1231
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:789:            super(R.string.attention);
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:933:            super(R.string.attention_big_size);
res/layout/report_input.xml:25:            android:text="@string/attention"
#1232
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1060:            super(R.string.hard_transmission_error_wlan_only_ms);
#1233
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceCamera.java:32:        return R.string.camera;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:423:            super(R.string.camera_self_preview_anser_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:519:            super(R.string.camera_self_preview_anser_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:570:            super(R.string.camera_self_preview_anser_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:596:            super(R.string.camera_self_preview_anser_text);
#1234
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SdIndividualDiagnosisActivity.java:97:                    .getString(R.string.sd_self_diagnosis_ans_text, str));
#1235
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BtIndividualDiagnosisActivity.java:68:                    .getString(R.string.bt_self_diagnosis_ans_text, str));
#1236
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:144:                    getString(R.string.mictophone2_self_diagnosis_guidance_text));
#1237
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MobileLightIndividualDiagnosisActivity.java:88:            super(R.string.light_self_diagnosis_light_text);
#1238
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:59:            return R.string.gyroscope_self_diagnosis_guidance_text;
#1239
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:100:                        .getString(R.string.geomagnetic_self_diagnosis_start_text_xyz,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:75:                    .getString(R.string.geomagnetic_self_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:80:                        .getString(R.string.geomagnetic_self_diagnosis_start_text_xyz,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:100:                        .getString(R.string.geomagnetic_self_diagnosis_start_text_xyz,
#1240
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceRam.java:28:        return R.string.ram;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RamIndividualDiagnosisActivity.java:57:            return R.string.ram_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RamIndividualDiagnosisActivity.java:96:                    .getString(R.string.ram_self_diagnosis_ans_text, str));
#1241
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:94:                    .getString(R.string.key_self_diagnosis_up_text));
#1242
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:109:                    getString(R.string.mictophone_self_photo_diagnosis_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:131:                    getString(R.string.mictophone_self_photo_diagnosis_text));
#1243
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:74:                    .getString(R.string.gyroscope_self_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:95:                    .getString(R.string.gyroscope_self_diagnosis_start_text));
#1244
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:115:                    .getString(R.string.usb_connect_diagnosis_false_text));
#1245
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:64:            return R.string.gps_self_diagnosis_guidance_text;
#1246
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:210:            super(R.string.led_self_green_led_ans_text);
#1247
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:117:                    .getString(R.string.charging_self_diagnosis_false_text));
#1248
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/KeyIndividualDiagnosisActivity.java:153:                    .getString(R.string.key_self_diagnosis_power_text));
#1249
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:91:                    .getString(R.string.charging_usb_self_diagnosis_ans_text));
#1250
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ReceiverIndividualDiagnosisActivity.java:79:            super(R.string.receiver_self_diagnosis_ans_text);
#1251
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:430:            super(R.string.dialog_diagnosis_error);
#1252
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceProximitySensor.java:28:        return R.string.proximity_sensor;
#1253
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:37:            R.string.diagnosis_result_no_response,
#1254
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceRom.java:28:        return R.string.rom;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RomIndividualDiagnosisActivity.java:57:            return R.string.rom_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RomIndividualDiagnosisActivity.java:96:                    .getString(R.string.rom_self_diagnosis_ans_text, str));
#1255
src/com/fujitsu/mobile_phone/diagnosis/utility/ImeiDecorator.java:31:        return getContext().getString(R.string.imei, imei);
#1256
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceUsbTerminal.java:28:        return R.string.usb_terminal;
#1257
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:56:            return R.string.usb_connect_diagnosis_gidance_text;
#1258
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:56:            return R.string.mictophone_self_diagnosis_guidance_text;
#1259
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceChargeTerminal.java:28:        return R.string.battery_charging;
#1260
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:41:            R.string.diagnosis_result_no_target,
#1261
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:231:            preference.setTitle(R.string.individual_diagnosis);
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:232:            preference.setSummary(R.string.individual_diagnosis_summary);
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:255:                case R.string.individual_diagnosis: // 個別診断
#1262
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:149:                    .getString(R.string.motion_self_diagnosis_true_text));
#1263
src/com/fujitsu/mobile_phone/diagnosis/ui/BootDialogActivity.java:39:            super(R.string.boot_attention);
res/layout/dialog_boot.xml:20:        android:text="@string/boot_attention"
#1264
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BatteryIndividualDiagnosisActivity.java:50:            return R.string.battery_self_diagnosis_guidance_text;
#1265
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BtIndividualDiagnosisActivity.java:50:            return R.string.bt_self_diagnosis_guidance_text;
#1266
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:58:            return R.string.charging_usb_self_diagnosis_guidance_text;
#1267
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:284:                    R.string.title_power_source, R.string.sub_title_power_source, this);
#1268
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:232:            preference.setSummary(R.string.individual_diagnosis_summary);
#1269
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:200:                    .getString(R.string.luminance_self_diagnosis_fumble_false_text));
#1270
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisInterruptDialogFragment.java:25:        return R.string.diagnosis_interrupt_dialog;
#1271
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:79:                    .getString(R.string.proximity_self_diagnosis_start_text));
#1272
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:284:                    R.string.title_power_source, R.string.sub_title_power_source, this);
#1273
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceSpeaker.java:28:        return R.string.speaker;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SpeakerIndividualDiagnosisActivity.java:53:            return R.string.speaker_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SpeakerIndividualDiagnosisActivity.java:66:                    getString(R.string.speaker_self_diagnosis_guidance_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SpeakerIndividualDiagnosisActivity.java:79:            super(R.string.speaker_self_diagnosis_ans_text);
#1274
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1207:            super(R.string.dialog_save_error);
#1275
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:38:            R.string.diagnosis_result_device_limited,
#1276
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:111:                    .getString(R.string.proximity_self_diagnosis_text));
#1277
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceLed.java:28:        return R.string.led;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:61:            return R.string.led_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:74:            txTop.setText(getActivity().getString(R.string.led_self_diagnosis_led_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:192:            super(R.string.led_self_red_led_ans_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:210:            super(R.string.led_self_green_led_ans_text);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:228:            super(R.string.led_self_blue_led_ans_text);
#1278
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:90:                    getString(R.string.btn_stop));
#1279
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/TouchPanelIndividualDiagnosisActivity.java:85:            return R.string.touch_self_diagnosis_guidance_text;
#1280
#1281
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:92:            return R.string.send_btn_summary_result;
res/layout/include_menu_btn_set.xml:35:            android:text="@string/send_btn_summary_result"
#1282
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:227:            preference.setTitle(R.string.auto_diagnosis);
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:228:            preference.setSummary(R.string.auto_diagnosis_summary);
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisMainActivity.java:252:                case R.string.auto_diagnosis: // 自動診断
#1283
res/layout/dialog_boot.xml:30:        android:text="@string/check_show_again" />
#1284
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:146:                    .getString(R.string.gyroscope_self_diagnosis_false_restart));
#1285
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:87:                    .getString(R.string.btn_check_end));
#1286
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceGyroscopeSensor.java:28:        return R.string.gyroscope;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:59:            return R.string.gyroscope_self_diagnosis_guidance_text;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:74:                    .getString(R.string.gyroscope_self_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:95:                    .getString(R.string.gyroscope_self_diagnosis_start_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:122:                    .getString(R.string.gyroscope_self_diagnosis_true_text));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:146:                    .getString(R.string.gyroscope_self_diagnosis_false_restart));
#1287
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RamIndividualDiagnosisActivity.java:57:            return R.string.ram_self_diagnosis_guidance_text;
#1288
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceLuminanceSensor.java:28:        return R.string.luminance_sensor;
#1289
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LedIndividualDiagnosisActivity.java:61:            return R.string.led_self_diagnosis_guidance_text;
#1290
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:556:            return R.string.outcamera_self_diagnosis_guidance_text;
#1291
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/VibeIndividualDiagnosisActivity.java:63:                    getString(R.string.vibe_diagnosis_start_text));
#1292
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:121:                            .getString(R.string.gps_self_diagnosis_ans_text_widhout_address,
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:125:                            .getString(R.string.gps_self_diagnosis_ans_text, longitude, latitude,
#1293
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:270:                    R.string.title_sensor, R.string.sub_title_sensor, this);
#1294
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1092:            super(R.string.error_no_connect_wlan);
#1295
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RamIndividualDiagnosisActivity.java:96:                    .getString(R.string.ram_self_diagnosis_ans_text, str));
#1296
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:291:                    R.string.title_storage, R.string.sub_title_storage, this);
#1297
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:463:            builder.setPositiveButton(getString(R.string.btn_yes),
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:129:                        .getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:116:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:118:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:122:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:112:                    .getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:148:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:118:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:121:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:106:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:203:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:236:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:167:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:200:            yesBtn.setText(getActivity().getString(R.string.btn_yes));
res/layout/indivisual_diagnosis_frame_two_button.xml:21:        android:text="@string/btn_yes" />
#1298
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:62:            return R.string.proximity_self_diagnosis_guidance_text;
#1299
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:120:                    .getString(R.string.earphone_diagnosis_false_text));
#1300
#1301
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/WlanIndividualDiagnosisActivity.java:51:            return R.string.wlan_self_diagnosis_guidance_text;
#1302
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:35:            R.string.diagnosis_result_ok,
#1303
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:668:            return R.string.not_transmission_ms;
#1304
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:59:            return R.string.lcd_diagnosis_start_text;
#1305
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceEarphoneJack.java:28:        return R.string.earphone_jack;
#1306
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:71:            super(R.string.charging_self_diagnosis_start_text);
#1307
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/WlanIndividualDiagnosisActivity.java:70:                    .getString(R.string.wlan_self_diagnosis_ans_text, str));
#1308
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:959:            super(R.string.dialog_show_data_size);
#1309
res/layout/diagnosis_result.xml:34:                android:text="@string/result_title"
#1310
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:914:            super(R.string.dialog_confirm_send_mobile);
#1311
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:61:            return R.string.earphone_diagnosis_gidance_text;
#1312
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:196:                    .getString(R.string.proximity_self_diagnosis_ans_text));
#1313
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1049:            super(R.string.hard_transmission_error_ms);
res/layout/hard_transmission_error_ms.xml:15:        android:text="@string/hard_transmission_error_ms" />
#1314
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:263:                    R.string.title_key_con, R.string.sub_title_key_con, this);
#1315
src/com/fujitsu/mobile_phone/diagnosis/ui/DiagnosisResultFragment.java:52:        final String dateTime = getString(R.string.time_data, time);
#1316
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:376:            yesBtn.setText(R.string.btn_start);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MicrophoneIndividualDiagnosisActivity.java:68:            yesBtn.setText(R.string.btn_start);
#1317
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:270:                    R.string.title_sensor, R.string.sub_title_sensor, this);
#1318
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:58:            return R.string.charging_self_diagnosis_guidance_text;
#1319
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1071:            super(R.string.error_send_other);
#1320
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:889:            return R.string.dialog_prepare_send;
#1321
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:168:            super(R.string.earphone_diagnosis_ring_text);
#1322
res/layout/indivisual_diagnosis_select.xml:41:                android:text="@string/btn_diagnose" />
#1323
src/com/fujitsu/mobile_phone/diagnosis/ui/BaseDialogFragment.java:162:        return R.string.btn_ok;
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:137:                        .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CameraIndividualDiagnosisActivity.java:544:            yesBtn.setText(R.string.btn_ok);
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularDataIndividualDiagnosisActivity.java:95:            yesBtn.setText(getActivity().getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BatteryIndividualDiagnosisActivity.java:68:            yesBtn.setText(getActivity().getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RomIndividualDiagnosisActivity.java:98:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/RamIndividualDiagnosisActivity.java:98:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/BtIndividualDiagnosisActivity.java:70:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/SdIndividualDiagnosisActivity.java:99:                    .getString(R.string.btn_ok));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/WlanIndividualDiagnosisActivity.java:72:                    .getString(R.string.btn_ok));
res/layout/fragment_error.xml:35:            android:text="@string/btn_ok" />
#1324
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:91:                    .getString(R.string.charging_self_diagnosis_ans_text));
#1325
src/com/fujitsu/mobile_phone/diagnosis/ui/IndivisualDiagnosisChoiceActivity.java:277:                    R.string.title_wireless, R.string.sub_title_wireless, this);
#1326
src/com/fujitsu/mobile_phone/diagnosis/utility/HeaderViewUtility.java:36:        return context.getString(R.string.serial_number,
#1327
src/com/fujitsu/mobile_phone/diagnosis/ui/device/DeviceGeomagneticSensor.java:28:        return R.string.geomagnetic_sensor;
#1328
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LcdIndividualDiagnosisActivity.java:172:            return R.string.lcd_diagnosis_red_text;
#1329
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:63:            return R.string.luminance_self_diagnosis_guidance_text;
#1330
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:933:            super(R.string.attention_big_size);
#1331
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:81:            return R.string.save_btn_summary;
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:98:            return R.string.save_btn_summary_result;
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:129:            return R.string.save_btn_summary;
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:171:            return R.string.save_btn_summary;
src/com/fujitsu/mobile_phone/diagnosis/ui/MenuButtonDelegation.java:192:            return R.string.save_btn_summary_result;
res/layout/include_menu_btn_set.xml:52:            android:text="@string/save_btn_summary"
#1332
res/layout/include_menu_btn_set.xml:29:            android:text="@string/btn_send"
#1333
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:84:            return R.string.cellular_tel_diagnosis_gidance_text;
#1334
src/com/fujitsu/mobile_phone/diagnosis/ui/DisplayUtility.java:36:            R.string.diagnosis_result_ng,
#1335
src/com/fujitsu/mobile_phone/diagnosis/ui/IndividualDiagnosisActivity.java:469:                    .setNegativeButton(getString(R.string.btn_no),
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GpsIndividualDiagnosisActivity.java:131:                        .getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/UsbConnectorIndividualDiagnosisActivity.java:117:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingIndividualDiagnosisActivity.java:119:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/MotionIndividualDiagnosisActivity.java:123:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GeomagneticIndividualDiagnosisActivity.java:114:                    .getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/GyroscopeIndvidualDiagnosisActivity.java:149:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ChargingUsbIndividualDiagnosisActivity.java:119:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/EarphoneIndividualDiagnosisActivity.java:122:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/CellularTelIndividualDiagnosisActivity.java:107:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:204:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/LuminanceIndividualDiagnosisActivity.java:238:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:168:            noBtn.setText(getActivity().getString(R.string.btn_no));
src/com/fujitsu/mobile_phone/diagnosis/ui/individuall/ProximityIndividualDiagnosisActivity.java:202:            noBtn.setText(getActivity().getString(R.string.btn_no));
res/layout/indivisual_diagnosis_frame_two_button.xml:15:        android:text="@string/btn_no" />
#1336
src/com/fujitsu/mobile_phone/diagnosis/ui/ServiceConnectionActivity.java:1240:            super(R.string.dialog_save_complete);
#1337
AndroidManifest.xml:130:            android:label="@string/call_log_activity_title"
bin/AndroidManifest.xml:130:            android:label="@string/call_log_activity_title"
#1338
src/com/android/dialer/calllog/CallTypeHelper.java:45:        mMissedName = resources.getString(R.string.type_missed);
#1339
#1340
src/com/android/dialer/dialpad/DialpadFragment.java:704:                R.string.dialpad_2_number, R.string.dialpad_3_number, R.string.dialpad_4_number,
#1341
src/com/android/dialer/dialpad/DialpadFragment.java:703:        final int[] numberIds = new int[] {R.string.dialpad_0_number, R.string.dialpad_1_number,
#1342
src/com/android/dialer/CallDetailActivity.java:455:                    Toast.makeText(CallDetailActivity.this, R.string.toast_call_detail_error,
#1343
#1344
src/com/android/dialer/calllog/CallLogAdapter.java:724:        return mContext.getResources().getString(R.string.num_missed_calls, numMissed);
#1345
#1346
src/com/android/dialer/list/DialerPhoneNumberListAdapter.java:145:                text = resources.getString(R.string.search_shortcut_add_to_contacts);
#1347
tests/src/com/android/dialer/PhoneCallDetailsHelperTest.java:100:        assertNameEqualsResource(R.string.payphone);
src/com/android/dialer/calllog/PhoneNumberHelper.java:44:            return mResources.getString(R.string.payphone);
#1348
#1349
src/com/android/dialer/calllog/CallTypeHelper.java:43:        mIncomingName = resources.getString(R.string.type_incoming);
#1350
src/com/android/dialer/PhoneCallDetailsHelper.java:124:                numberText = mResources.getString(R.string.call_log_empty_gecode);
#1351
#1352
#1353
src/com/android/dialer/SpecialCharSequenceMgr.java:333:                .setTitle(R.string.imei)
#1354
AndroidManifest.xml:72:            android:label="@string/launcherDialer"
bin/AndroidManifest.xml:72:            android:label="@string/launcherDialer"
#1355
tests/src/com/android/dialer/PhoneCallDetailsHelperTest.java:95:        assertNameEqualsResource(R.string.private_num);
src/com/android/dialer/calllog/PhoneNumberHelper.java:41:            return mResources.getString(R.string.private_num);
#1356
res/layout/phone_no_favorites.xml:58:            android:text="@string/no_favorites"
#1357
#1358
src/com/android/dialer/calllog/ClearCallLogDialog.java:80:            .setTitle(R.string.clearCallLogConfirmation_title)
src/com/android/dialer/calllog/ClearCallLogDialog.java:82:            .setMessage(R.string.clearCallLogConfirmation)
#1359
res/menu/call_log_options.xml:19:        android:title="@string/recentCalls_deleteAll"
#1360
src/com/android/dialer/calllog/ClearCallLogDialog.java:80:            .setTitle(R.string.clearCallLogConfirmation_title)
#1361
src/com/android/dialer/PhoneCallDetailsHelper.java:149:                        mResources.getString(R.string.recentCalls_addToContact));
res/menu/dialpad_options.xml:19:        android:title="@string/recentCalls_addToContact"
#1362
res/layout/dialpad_fragment.xml:145:                android:contentDescription="@string/description_dial_button"
res/layout/dialpad_fragment.xml:165:                android:contentDescription="@string/description_dial_button"
#1363
res/menu/dialpad_options.xml:24:        android:title="@string/add_2sec_pause"
#1364
src/com/android/dialer/dialpad/DialpadFragment.java:706:                R.string.dialpad_8_number, R.string.dialpad_9_number, R.string.dialpad_star_number,
#1365
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:133:        R.string.voicemail_speed_fastest,
#1366
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:130:        R.string.voicemail_speed_slower,
#1367
src/com/android/dialer/SpecialCharSequenceMgr.java:210:                sc.progressDialog.setMessage(context.getText(R.string.simContacts_emptyLoading));
#1368
#1369
#1370
res/layout/dialtacts_activity.xml:100:                android:contentDescription="@string/action_menu_call_history_description"
res/layout/dialpad_fragment.xml:135:                android:contentDescription="@string/action_menu_call_history_description"
#1371
src/com/android/dialer/calllog/CallLogListItemHelper.java:105:                mResources.getString(R.string.description_call_log_play_button));
#1372
#1373
src/com/android/dialer/calllog/DefaultVoicemailNotifier.java:191:                    R.string.notification_new_voicemail_ticker, names.get(callToNotify.number)));
#1374
src/com/android/dialer/calllog/CallLogFragment.java:341:                message = getString(R.string.recentMissed_empty);
#1375
src/com/android/dialer/dialpad/DialpadFragment.java:704:                R.string.dialpad_2_number, R.string.dialpad_3_number, R.string.dialpad_4_number,
#1376
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:129:        R.string.voicemail_speed_slowest,
#1377
AndroidManifest.xml:149:                  android:label="@string/callDetailTitle"
bin/AndroidManifest.xml:149:                  android:label="@string/callDetailTitle"
#1378
#1379
src/com/android/dialer/calllog/CallDetailHistoryAdapter.java:173:        return mContext.getString(R.string.callDetailsDurationFormat, minutes, seconds);
#1380
res/layout/phone_favorite_tile_view.xml:142:            android:text="@string/favorite_hidden"
res/layout/phone_favorite_tile_view.xml:175:                android:text="@string/favorite_hidden_undo"
res/layout/phone_favorite_regular_row_view.xml:101:            android:text="@string/favorite_hidden"
res/layout/phone_favorite_regular_row_view.xml:141:                android:text="@string/favorite_hidden_undo"
#1381
res/menu/call_details_options.xml:26:        android:title="@string/recentCalls_removeFromRecentList"
#1382
#1383
src/com/android/dialer/calllog/DefaultVoicemailNotifier.java:137:                            R.string.notification_voicemail_callers_list, callers, name);
#1384
res/menu/dialtacts_options.xml:36:        android:title="@string/menu_allContacts"/>
#1385
AndroidManifest.xml:143:            android:label="@string/show_all_contacts_title"
bin/AndroidManifest.xml:143:            android:label="@string/show_all_contacts_title"
#1386
src/com/android/dialer/dialpad/DialpadFragment.java:706:                R.string.dialpad_8_number, R.string.dialpad_9_number, R.string.dialpad_star_number,
#1387
#1388
#1389
tests/src/com/android/dialer/PhoneCallDetailsHelperTest.java:90:        assertNameEqualsResource(R.string.unknown);
src/com/android/dialer/calllog/PhoneNumberHelper.java:38:            return mResources.getString(R.string.unknown);
src/com/android/dialer/calllog/PhoneNumberHelper.java:50:            return mResources.getString(R.string.unknown);
#1390
src/com/android/dialer/dialpad/DialpadFragment.java:705:                R.string.dialpad_5_number, R.string.dialpad_6_number, R.string.dialpad_7_number,
#1391
#1392
res/layout/tile_interactions_teaser_view.xml:51:            android:text="@string/contact_tooltip"
#1393
src/com/android/dialer/dialpad/DialpadFragment.java:704:                R.string.dialpad_2_number, R.string.dialpad_3_number, R.string.dialpad_4_number,
#1394
src/com/android/dialer/CallDetailActivity.java:277:                    getString(R.string.description_add_contact));
src/com/android/dialer/CallDetailActivity.java:509:                    mainActionDescription = getString(R.string.description_add_contact);
src/com/android/dialer/CallDetailActivity.java:533:                    mainActionDescription = getString(R.string.description_add_contact);
#1395
res/menu/call_details_cab.xml:20:        android:title="@string/menu_copy"
#1396
src/com/android/dialer/dialpad/DialpadFragment.java:1262:                            R.string.dialog_phone_call_prohibited_message);
#1397
#1398
src/com/android/dialer/SpecialCharSequenceMgr.java:209:                sc.progressDialog.setTitle(R.string.simContacts_title);
#1399
res/menu/dialpad_options.xml:29:        android:title="@string/add_wait"
#1400
src/com/android/dialer/list/SearchFragment.java:116:            Toast toast = Toast.makeText(getActivity(), R.string.add_contact_not_available,
src/com/android/dialer/DialtactsActivity.java:407:                            R.string.add_contact_not_available,
#1401
#1402
#1403
#1404
AndroidManifest.xml:122:            <intent-filter android:label="@string/recentCallsIconLabel">
bin/AndroidManifest.xml:122:            <intent-filter android:label="@string/recentCallsIconLabel">
#1405
res/layout/dialtacts_activity.xml:116:                 android:contentDescription="@string/action_menu_overflow_description"
res/layout/dialpad_fragment.xml:154:                android:contentDescription="@string/action_menu_overflow_description" />
#1406
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:132:        R.string.voicemail_speed_faster,
#1407
src/com/android/dialer/CallDetailActivity.java:556:                            getString(R.string.menu_callNumber,
src/com/android/dialer/SpecialCharSequenceMgr.java:470:                name = context.getString(R.string.menu_callNumber, name);
#1408
src/com/android/dialer/dialpad/DialpadFragment.java:1109:                                    R.string.dialog_voicemail_not_ready_message);
#1409
#1410
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:60:            R.string.voicemail_status_voicemail_not_available;
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:84:        NO_CONNECTION(0, Action.CALL_VOICEMAIL, R.string.voicemail_status_voicemail_not_available,
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:87:        NO_DATA(1, Action.CALL_VOICEMAIL, R.string.voicemail_status_voicemail_not_available,
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:94:                R.string.voicemail_status_voicemail_not_available),
#1411
src/com/android/dialer/PhoneCallDetailsHelper.java:184:                    R.string.call_log_item_count_and_date, callCount.intValue(), dateText);
#1412
res/menu/dialtacts_options.xml:33:        android:title="@string/menu_newContact"/>
#1413
#1414
#1415
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:352:            mTextController.setPermanentText(getString(R.string.voicemail_playback_error));
#1416
src/com/android/dialer/calllog/CallLogActivity.java:133:        final String missedTitle = getString(R.string.call_log_missed_title);
#1417
#1418
src/com/android/dialer/interactions/PhoneNumberInteraction.java:223:                            ? R.string.sms_disambig_title : R.string.call_disambig_title)
#1419
res/layout/dialtacts_activity.xml:68:                    android:contentDescription="@string/description_start_voice_search"
#1420
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:65:            R.string.voicemail_status_configure_voicemail;
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:97:                R.string.voicemail_status_configure_voicemail),
#1421
src/com/android/dialer/calllog/ClearCallLogDialog.java:57:                        getString(R.string.clearCallLogProgress_title),
#1422
src/com/android/dialer/list/PhoneFavoriteFragment.java:658:        view.setDisplayName(resources.getString(R.string.show_all_contacts_button_text));
#1423
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:131:        R.string.voicemail_speed_normal,
#1424
src/com/android/dialer/dialpad/DialpadFragment.java:1104:                                    R.string.dialog_voicemail_airplane_mode_message);
#1425
#1426
src/com/android/dialer/dialpad/DialpadFragment.java:705:                R.string.dialpad_5_number, R.string.dialpad_6_number, R.string.dialpad_7_number,
#1427
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:62:            R.string.voicemail_status_audio_not_available;
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:85:                R.string.voicemail_status_audio_not_available),
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:88:                R.string.voicemail_status_audio_not_available),
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:91:                R.string.voicemail_status_audio_not_available),
#1428
#1429
#1430
#1431
src/com/android/dialer/CallDetailActivity.java:559:                                    getString(R.string.description_call, nameOrNumber));
src/com/android/dialer/calllog/CallLogListItemHelper.java:96:        return mResources.getString(R.string.description_call, recipient);
src/com/android/dialer/calllog/CallLogListItemHelper.java:105:                mResources.getString(R.string.description_call_log_play_button));
#1432
src/com/android/dialer/dialpad/DialpadFragment.java:1543:                    context.getString(R.string.dialer_useDtmfDialpad),
#1433
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:331:            mTextController.setPermanentText(getString(R.string.voicemail_fetching_timout));
#1434
src/com/android/dialer/calllog/CallTypeHelper.java:46:        mVoicemailName = resources.getString(R.string.type_voicemail);
#1435
src/com/android/dialer/dialpad/DialpadFragment.java:1557:                    context.getString(R.string.dialer_addAnotherCall),
#1436
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:55:            R.string.voicemail_status_action_call_server;
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:62:        CALL_VOICEMAIL(R.string.voicemail_status_action_call_server),
#1437
src/com/android/dialer/CallDetailActivity.java:576:                                getString(R.string.description_send_text_message, nameOrNumber));
#1438
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:56:    private static final int ACTION_MSG_CONFIGURE = R.string.voicemail_status_action_configure;
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:63:        CONFIGURE_VOICEMAIL(R.string.voicemail_status_action_configure);
#1439
src/com/android/dialer/list/DialerPhoneNumberListAdapter.java:141:                text = resources.getString(R.string.search_shortcut_call_number, number);
#1440
res/menu/call_details_options.xml:21:        android:title="@string/recentCalls_trashVoicemail"
#1441
src/com/android/dialer/list/PhoneFavoriteFragment.java:658:        view.setDisplayName(resources.getString(R.string.show_all_contacts_button_text));
AndroidManifest.xml:143:            android:label="@string/show_all_contacts_title"
bin/AndroidManifest.xml:143:            android:label="@string/show_all_contacts_title"
#1442
#1443
#1444
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:325:            mTextController.setPermanentText(getString(R.string.voicemail_fetching_content));
#1445
src/com/android/dialer/calllog/CallLogActivity.java:126:        final String allTitle = getString(R.string.call_log_all_title);
#1446
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:319:            mTextController.setPermanentText(getString(R.string.voicemail_buffering));
#1447
#1448
src/com/android/dialer/SpecialCharSequenceMgr.java:354:                .setTitle(R.string.meid)
#1449
#1450
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:55:            R.string.voicemail_status_action_call_server;
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:56:    private static final int ACTION_MSG_CONFIGURE = R.string.voicemail_status_action_configure;
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:60:            R.string.voicemail_status_voicemail_not_available;
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:62:            R.string.voicemail_status_audio_not_available;
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:63:    private static final int STATUS_MSG_MESSAGE_WAITING = R.string.voicemail_status_messages_waiting;
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:65:            R.string.voicemail_status_configure_voicemail;
tests/src/com/android/dialer/PhoneCallDetailsHelperTest.java:106:        assertNameEqualsResource(R.string.voicemail);
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:129:        R.string.voicemail_speed_slowest,
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:130:        R.string.voicemail_speed_slower,
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:131:        R.string.voicemail_speed_normal,
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:132:        R.string.voicemail_speed_faster,
src/com/android/dialer/voicemail/VoicemailPlaybackPresenter.java:133:        R.string.voicemail_speed_fastest,
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:319:            mTextController.setPermanentText(getString(R.string.voicemail_buffering));
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:325:            mTextController.setPermanentText(getString(R.string.voicemail_fetching_content));
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:331:            mTextController.setPermanentText(getString(R.string.voicemail_fetching_timout));
src/com/android/dialer/voicemail/VoicemailPlaybackFragment.java:352:            mTextController.setPermanentText(getString(R.string.voicemail_playback_error));
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:62:        CALL_VOICEMAIL(R.string.voicemail_status_action_call_server),
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:63:        CONFIGURE_VOICEMAIL(R.string.voicemail_status_action_configure);
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:84:        NO_CONNECTION(0, Action.CALL_VOICEMAIL, R.string.voicemail_status_voicemail_not_available,
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:85:                R.string.voicemail_status_audio_not_available),
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:87:        NO_DATA(1, Action.CALL_VOICEMAIL, R.string.voicemail_status_voicemail_not_available,
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:88:                R.string.voicemail_status_audio_not_available),
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:90:        MESSAGE_WAITING(2, Action.CALL_VOICEMAIL, R.string.voicemail_status_messages_waiting,
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:91:                R.string.voicemail_status_audio_not_available),
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:94:                R.string.voicemail_status_voicemail_not_available),
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:97:                R.string.voicemail_status_configure_voicemail),
src/com/android/dialer/calllog/PhoneNumberHelper.java:47:            return mResources.getString(R.string.voicemail);
#1451
AndroidManifest.xml:59:        android:label="@string/applicationLabel"
bin/AndroidManifest.xml:59:        android:label="@string/applicationLabel"
#1452
src/com/android/dialer/calllog/CallLogFragment.java:344:                message = getString(R.string.recentCalls_empty);
res/layout/call_log_fragment.xml:73:            android:text="@string/recentCalls_empty"
#1453
res/layout/dialpad_fragment.xml:73:                android:contentDescription="@string/description_delete_button"
#1454
src/com/android/dialer/dialpad/DialpadFragment.java:705:                R.string.dialpad_5_number, R.string.dialpad_6_number, R.string.dialpad_7_number,
#1455
src/com/android/dialer/CallDetailActivity.java:502:                            getString(R.string.description_view_contact, nameOrNumber);
res/layout/phone_favorite_tile_view.xml:122:            android:contentDescription="@string/description_view_contact_detail" />
#1456
src/com/android/dialer/DialtactsActivity.java:530:        final String hintText = getString(R.string.dialer_hint_find_contact);
#1457
res/layout/phone_favorite_tile_view.xml:175:                android:text="@string/favorite_hidden_undo"
res/layout/phone_favorite_regular_row_view.xml:141:                android:text="@string/favorite_hidden_undo"
#1458
#1459
tests/src/com/android/dialer/voicemail/VoicemailStatusHelperImplTest.java:63:    private static final int STATUS_MSG_MESSAGE_WAITING = R.string.voicemail_status_messages_waiting;
src/com/android/dialer/voicemail/VoicemailStatusHelperImpl.java:90:        MESSAGE_WAITING(2, Action.CALL_VOICEMAIL, R.string.voicemail_status_messages_waiting,
#1460
src/com/android/dialer/calllog/CallTypeHelper.java:44:        mOutgoingName = resources.getString(R.string.type_outgoing);
#1461
res/menu/call_details_options.xml:31:        android:title="@string/recentCalls_editNumberBeforeCall"
#1462
#1463
#1464
#1465
#1466
#1467
src/com/android/dialer/dialpad/DialpadFragment.java:814:                    getActivity().getString(R.string.dialerDialpadHintText));
#1468
src/com/android/dialer/dialpad/DialpadFragment.java:1550:                    context.getString(R.string.dialer_returnToInCallScreen),
#1469
#1470
#1471
res/layout/dialtacts_activity.xml:108:                android:contentDescription="@string/action_menu_dialpad_button"
#1472
src/com/android/dialer/calllog/DefaultVoicemailNotifier.java:179:                    resources.getString(R.string.notification_action_voicemail_play),
#1473
src/com/android/dialer/interactions/PhoneNumberInteraction.java:223:                            ? R.string.sms_disambig_title : R.string.call_disambig_title)
#1474
res/menu/dialtacts_options.xml:39:        android:title="@string/call_settings"
#1475
src/com/android/dialer/dialpad/DialpadFragment.java:703:        final int[] numberIds = new int[] {R.string.dialpad_0_number, R.string.dialpad_1_number,
#1476
#1477
res/layout/set_primary_checkbox.xml:31:        android:text="@string/make_primary"/>
#1478
res/layout/call_log_list_item_extra.xml:57:                   android:contentDescription="@string/description_dismiss"/>
res/layout/tile_interactions_teaser_view.xml:73:            android:contentDescription="@string/description_dismiss"/>
#1479
src/com/android/providers/downloads/DownloadCertificationActivity.java:345:                .setNegativeButton(R.string.cancel, this)
#1480
res/layout/http_authentication.xml:43:        android:text="@string/password"
#1481
res/layout/http_authentication.xml:23:        android:text="@string/username"
#1482
src/com/android/providers/downloads/DownloadCertificationActivity.java:344:                .setPositiveButton(R.string.action, this)
#1483
#1484
res/xml/account_settings_preferences.xml:105:            android:summary="@string/account_sync_roaming_summary" />
#1485
src/com/android/email/activity/setup/AccountSettings.java:608:        if( header.id == R.string.menu_import_export ) {
src/com/android/email/activity/setup/AccountSettings.java:1009:            mBackupPreferencesHeader.id = R.string.menu_import_export;
src/com/android/email/activity/setup/AccountSettings.java:1010:            mBackupPreferencesHeader.titleRes = R.string.menu_import_export;
src/com/android/email/activity/setup/AccountSettings.java:1053:        adapter.add(R.string.menu_import);
src/com/android/email/activity/setup/AccountSettings.java:1074:                        case R.string.menu_import: {
src/com/android/email/activity/setup/AccountSettings.java:1086:            .setTitle(R.string.menu_import_export)
src/com/android/email/activity/setup/AccountSettings.java:1129:            case R.string.menu_import: {
res/layout-sw600dp-port/account_setup_basics.xml:91:                    android:text="@string/menu_import"
res/layout/account_setup_basics.xml:70:                android:text="@string/menu_import"
res/layout-sw600dp-land/account_setup_basics.xml:82:                android:text="@string/menu_import"
#1486
res/values/fj_arrays.xml:40:        <item>@string/account_setup_options_calendar_window_default</item>
#1487
res/values/fj_arrays.xml:20:        <item>@string/account_setup_options_calendar_window_2weeks</item>
res/values/fj_arrays.xml:42:        <item>@string/account_setup_options_calendar_window_2weeks</item>
#1488
src/com/android/email/service/EmailServiceStub.java:688:                        String title = context.getString(R.string.notification_mail_send_error_title);
#1489
src/com/android/email/EmailBackup.java:563:                        msgId = R.string.dlg_msg_result_backup_allexchange;
#1490
src/com/android/email/EmailBackup.java:615:                    titleId = R.string.dlg_title_result_restore_comp;
#1491
src/com/android/email/EmailBackup.java:543:                    msgId = R.string.dlg_msg_result_backup_comp;
#1492
src/com/android/email/EmailBackup.java:332:                                R.string.prog_dlg_title_backup,
#1493
src/com/android/email/EmailBackup.java:341:                        R.string.dlg_title_confirm_backup,
#1494
emailcommon/src/com/android/emailcommon/utility/SendErrorBroadcastReceiver.java:65:            .setMessage(R.string.error_mail_send_error_message)
#1495
src/com/android/email/EmailBackup.java:641:                        msgId = R.string.dlg_msg_result_restore_no_backup_file;
#1496
src/com/android/email/EmailBackup.java:644:                        msgId = R.string.dlg_msg_result_restore_crc_disagreement;
#1497
src/com/android/email/EmailBackup.java:552:                        msgId = R.string.dlg_msg_result_backup_sd_card_ro;
#1498
src/com/android/email/EmailBackup.java:655:                        msgId = R.string.dlg_msg_result_restore_db_version_error;
#1499
src/com/android/email/activity/setup/AccountSettings.java:1052:        adapter.add(R.string.menu_export);
src/com/android/email/activity/setup/AccountSettings.java:1070:                        case R.string.menu_export: {
src/com/android/email/activity/setup/AccountSettings.java:1124:            case R.string.menu_export: {
#1500
src/com/android/email/EmailBackup.java:546:                    titleId = R.string.dlg_title_result_backup_fail;
src/com/android/email/activity/setup/AccountSettings.java:1126:                builder.setTitle(R.string.dlg_title_result_backup_fail);
#1501
res/values/fj_arrays.xml:23:        <item>@string/account_setup_options_calendar_window_6month</item>
res/values/fj_arrays.xml:45:        <item>@string/account_setup_options_calendar_window_6month</item>
#1502
src/com/android/email/EmailBackup.java:559:                        msgId = R.string.dlg_msg_result_backup_or_restore_fail;
src/com/android/email/EmailBackup.java:651:                        msgId = R.string.dlg_msg_result_backup_or_restore_fail;
src/com/android/email/activity/setup/AccountSettings.java:1120:        builder.setMessage(R.string.dlg_msg_result_backup_or_restore_fail);
#1503
res/values/fj_arrays.xml:22:        <item>@string/account_setup_options_calendar_window_3month</item>
res/values/fj_arrays.xml:44:        <item>@string/account_setup_options_calendar_window_3month</item>
#1504
src/com/android/email/EmailBackup.java:406:                        R.string.dlg_msg_confirm_restore,
#1505
src/com/android/email/EmailBackup.java:616:                    msgId = R.string.dlg_msg_result_restore_comp;
#1506
res/values/fj_arrays.xml:19:        <item>@string/account_setup_options_calendar_window_auto</item>
res/values/fj_arrays.xml:41:        <item>@string/account_setup_options_calendar_window_auto</item>
#1507
src/com/android/email/EmailBackup.java:635:                    titleId = R.string.dlg_title_result_restore_fail;
src/com/android/email/activity/setup/AccountSettings.java:1131:                builder.setTitle(R.string.dlg_title_result_restore_fail);
#1508
src/com/android/email/EmailBackup.java:396:                                R.string.prog_dlg_title_restore,
#1509
src/com/android/email/EmailBackup.java:426:        builder.setNegativeButton(R.string.dlg_btn_confirm_negative, onCancel);
#1510
src/com/android/email/EmailBackup.java:397:                                R.string.prog_dlg_msg_restore);
#1511
src/com/android/email/EmailBackup.java:555:                        msgId = R.string.dlg_msg_result_backup_no_sd;
src/com/android/email/EmailBackup.java:647:                        msgId = R.string.dlg_msg_result_backup_no_sd;
#1512
res/values/fj_arrays.xml:24:        <item>@string/account_setup_options_calendar_window_all</item>
res/values/fj_arrays.xml:46:        <item>@string/account_setup_options_calendar_window_all</item>
#1513
res/xml/account_settings_preferences.xml:104:            android:title="@string/account_sync_roaming_label"
#1514
src/com/android/email/activity/setup/AccountSettings.java:608:        if( header.id == R.string.menu_import_export ) {
src/com/android/email/activity/setup/AccountSettings.java:1009:            mBackupPreferencesHeader.id = R.string.menu_import_export;
src/com/android/email/activity/setup/AccountSettings.java:1010:            mBackupPreferencesHeader.titleRes = R.string.menu_import_export;
src/com/android/email/activity/setup/AccountSettings.java:1086:            .setTitle(R.string.menu_import_export)
#1515
src/com/android/email/EmailBackup.java:638:                        msgId = R.string.dlg_msg_result_restore_no_free_space;
#1516
src/com/android/email/EmailBackup.java:342:                        R.string.dlg_msg_confirm_backup,
#1517
res/values/fj_arrays.xml:21:        <item>@string/account_setup_options_calendar_window_1month</item>
res/values/fj_arrays.xml:43:        <item>@string/account_setup_options_calendar_window_1month</item>
#1518
src/com/android/email/EmailBackup.java:549:                        msgId = R.string.dlg_msg_result_backup_no_free_space;
#1519
src/com/android/email/EmailBackup.java:333:                                R.string.prog_dlg_msg_backup);
#1520
src/com/android/email/EmailBackup.java:658:                        msgId = R.string.dlg_msg_result_restore_fail;
#1521
src/com/android/email/EmailBackup.java:441:        builder.setPositiveButton(R.string.dlg_btn_ok, listener);
src/com/android/email/activity/setup/AccountSettings.java:1118:        builder.setPositiveButton(R.string.dlg_btn_ok, listener);
emailcommon/src/com/android/emailcommon/utility/SendErrorBroadcastReceiver.java:66:            .setPositiveButton(R.string.dlg_btn_ok, new DialogInterface.OnClickListener() {
#1522
src/com/android/email/service/EmailServiceStub.java:689:                        String msg = context.getString(R.string.notification_mail_send_error_message);
#1523
src/com/android/email/EmailBackup.java:566:                        msgId = R.string.dlg_msg_result_backup_fail;
#1524
src/com/android/email/activity/setup/AccountSettingsFragment.java:787:            mSyncCalendarWindow.setTitle(R.string.account_setup_options_calendar_window_label);
res/layout/account_setup_options.xml:85:                android:text="@string/account_setup_options_calendar_window_label"
res/layout-sw600dp/account_setup_options_common.xml:83:                android:text="@string/account_setup_options_calendar_window_label"
#1525
src/com/android/email/EmailBackup.java:542:                    titleId = R.string.dlg_title_result_backup_comp;
#1526
emailcommon/src/com/android/emailcommon/utility/SendErrorBroadcastReceiver.java:64:            .setTitle(R.string.error_mail_send_error_title)
#1527
src/com/android/email/EmailBackup.java:405:                        R.string.dlg_title_confirm_restore,
#1528
src/com/android/email/EmailBackup.java:425:        builder.setNeutralButton(R.string.dlg_btn_confirm_neutral, onOk);
#1529
res/xml/general_preferences.xml:85:        android:title="@string/general_preference_clear_picture_approvals"
#1530
res/xml/general_preferences.xml:86:        android:summary="@string/general_preferences_clear_trusted_senders_summary" />
#1531
src/com/android/exchange/ExchangeService.java:843:                        exchangeService.getString(R.string.notification_security_update_account_title_part2);
#1532
src/com/android/exchange/ExchangeService.java:1027:                        String message = ssm.getString(R.string.notification_mail_send_error_message);
src/com/android/exchange/service/EasOutboxSyncHandler.java:643:            String msg = mContext.getString(R.string.notification_mail_send_error_message);
#1533
#1534
src/com/android/exchange/ExchangeService.java:802:                   if(labelCalendarLimit == null) labelCalendarLimit = exchangeService.getString(R.string.account_setup_options_calendar_window_2weeks);
#1535
#1536
src/com/android/exchange/ExchangeService.java:851:                    message += (exchangeService.getString(R.string.account_setup_options_calendar_window_label) + "=" + labelCalendarLimit);
#1537
src/com/android/exchange/ExchangeService.java:1026:                        String title = ssm.getString(R.string.notification_mail_send_error_title);
src/com/android/exchange/service/EasOutboxSyncHandler.java:642:            String title = mContext.getString(R.string.notification_mail_send_error_title);
#1538
src/com/android/exchange/ExchangeService.java:846:                    message = exchangeService.getString(R.string.account_setup_options_mail_window_label) + "=" + labelMailLimit;
#1539
src/com/android/exchange/ExchangeService.java:811:                   if(labelCalendarLimit == null) labelCalendarLimit = exchangeService.getString(R.string.account_setup_options_calendar_window_6month);
#1540
src/com/android/exchange/ExchangeService.java:808:                   if(labelCalendarLimit == null) labelCalendarLimit = exchangeService.getString(R.string.account_setup_options_calendar_window_3month);
#1541
src/com/android/exchange/ExchangeService.java:805:                   if(labelCalendarLimit == null) labelCalendarLimit = exchangeService.getString(R.string.account_setup_options_calendar_window_1month);
#1542
#1543
src/com/android/exchange/ExchangeService.java:841:                        exchangeService.getString(R.string.notification_security_update_account_title_part1) + " " + 
#1544
src/com/android/externalstorage/ExternalStorageProvider.java:163:                    root.title = getContext().getString(R.string.sd_label);
#1545
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:341:                            mButtonSwitchVerifyMode.setText(R.string.switch_pattern_button);
#1546
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:437:                    getResources().getString(R.string.finger_sensor_message),
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1106:                        .setMessage(getResources().getString(R.string.finger_sensor_message))
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1131:                        .setMessage(getResources().getString(R.string.finger_sensor_message))
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:789:            mDialogBuilder.setMessage(getResources().getString(R.string.finger_sensor_message));
#1547
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:517:            //mLeftButton.setText(android.R.string.cancel);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:738:            mDialogBuilder.setNegativeButton(R.string.cancel, this);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1028:                                                    .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
#1548
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:674:            //mDialogBuilder.setNegativeButton(R.string.Button_No, this);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:768:            mDialogBuilder.setNegativeButton(R.string.Button_No, this);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:781:            mDialogBuilder.setNegativeButton(R.string.Button_No, this);
#1549
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:414:                        toast(getString(R.string.verification_unknown_error_toast));
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:490:                        toast(getString(R.string.verification_unknown_error_toast));
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1309:                            toast(getString(R.string.verification_unknown_error_toast));
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1325:                            toast(getString(R.string.verification_unknown_error_toast));
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1347:                                toast(getString(R.string.verification_unknown_error_toast));
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1461:                                toast(getString(R.string.verification_unknown_error_toast));
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:993:                Toast(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1366:            Toast(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1517:            Toast(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2005:                Toast(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2040:                                Toast(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2170:                        //Toast(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2171:                        showErrorFeedback(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2187:                        //Toast(R.string.verification_unknown_error_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2188:                        showErrorFeedback(R.string.verification_unknown_error_toast);
#1550
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:911:                mBottomText.setText(R.string.register_two_fingers);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1169:                mBottomText.setText(R.string.register_two_fingers);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1326:                    mBottomText.setText(R.string.register_two_fingers);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2492:             mBottomText.setText(R.string.register_two_fingers);
#1551
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:764:            mDialogBuilder.setTitle(R.string.end_check_title);
#1552
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:313:                mRightButton.setText(R.string.fingerprint_finish);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1133:                 mRightButton.setText(R.string.fingerprint_finish);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1705:            mRightButton.setText(R.string.fingerprint_finish);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2510:             mRightButton.setText(R.string.fingerprint_finish);
#1553
AndroidManifest.xml:85:            android:label="@string/app_name_verify"
AndroidManifest.xml:97:            android:label="@string/app_name_verify"
#1554
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:407:                mHeaderTextView.setText(R.string.general_instructions);
res/layout/main_land.xml:44:                android:text="@string/general_instructions"
res/layout/main_land.xml:57:                android:text="@string/general_instructions"
res/layout/main.xml:75:                android:text="@string/general_instructions"
res/layout/main.xml:88:                android:text="@string/general_instructions"
#1555
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:971:            //toast(R.string.swipe_too_skewed);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:972:            showErrorFeedback(R.string.swipe_too_skewed);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2109:                        //Toast(R.string.swipe_too_skewed);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2110:                        showErrorFeedback(R.string.swipe_too_skewed);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2113://                        Toast errorToast3 = Toast.makeText(EnrolActivity.this, R.string.swipe_too_skewed, Toast.LENGTH_SHORT);
#1556
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1393:            dialogBuilder.setPositiveButton(android.R.string.ok,
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:312:                //mRightButton.setText(android.R.string.ok);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:693:            mDialogBuilder.setNegativeButton(getString(android.R.string.ok),
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:725:            mDialogBuilder.setNegativeButton(getString(android.R.string.ok),
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:737:            mDialogBuilder.setPositiveButton(R.string.ok, this);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:754:            mDialogBuilder.setNegativeButton(getString(android.R.string.ok),
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:855:            mDialogBuilder.setPositiveButton(android.R.string.ok,
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1018:                                                    .setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1132:                 //mRightButton.setText(android.R.string.ok);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1704:            //mRightButton.setText(android.R.string.ok);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1962:                        mRightButton.setText(android.R.string.ok);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2509:             //mRightButton.setText(android.R.string.ok);
#1557
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:735:            mDialogBuilder.setTitle(R.string.enroll_only_title);
#1558
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1391:            dialogBuilder.setMessage(R.string.not_found_template);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:853:            mDialogBuilder.setMessage(R.string.not_found_template);
#1559
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1098:                mSwipePrompt.setText(R.string.please_swipe_again);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1569:            mSwipePrompt.setText(R.string.please_swipe_again);
#1560
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:765:            mDialogBuilder.setMessage(R.string.end_check_text);
#1561
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:355:                            mButtonSwitchVerifyMode.setText(R.string.switch_password_button);
#1562
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:401:                        R.string.lockpattern_too_many_failed_confirmation_attempts_footer,
#1563
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:909:                mBottomText.setText(R.string.delete_help);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1167:                mBottomText.setText(R.string.delete_help);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2490:             mBottomText.setText(R.string.delete_help);
#1564
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:396:                mHeaderTextView.setText(R.string.lockpattern_too_many_failed_confirmation_attempts_header);
#1565
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1123:                   mSwipePrompt.setText(R.string.successful_enroll);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1957:                    mSwipePrompt.setText(R.string.successful_enroll);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2059:                                mSwipePrompt.setText(R.string.successful_enroll);
#1566
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:752:            mDialogBuilder.setMessage(R.string.must_two_more_fingers);
#1567
res/layout/helpsimple.xml:153:            android:text="@string/helpsimple_button"
res/layout/helpsimple.xml:171:            android:text="@string/helpsimple_button"
#1568
res/layout/help.xml:179:                android:text="@string/help_bottom_two"
res/layout/help.xml:195:                android:text="@string/help_bottom_two"
res/layout/help.xml:202:                android:text="@string/help_bottom_two"
#1569
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1390:            dialogBuilder.setTitle(R.string.app_dbadmin_really_delete_title);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:852:            mDialogBuilder.setTitle(R.string.app_dbadmin_really_delete_title);
#1570
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:777:            mDialogBuilder.setTitle(R.string.app_dbadmin_really_delete_finger_title);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:778:            mDialogBuilder.setMessage(R.string.app_dbadmin_really_delete_finger);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:819:            mDialogBuilder.setTitle(R.string.app_dbadmin_really_delete_finger_title);
#1571
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:821:            mDialogBuilder.setMessage(getResources().getString(R.string.battery_charging_error));
#1572
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:237:                mSwipePrompt.setText(R.string.enroll_another);
#1573
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:241:                mSwipePrompt.setText(R.string.select_finger);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1110:                    mSwipePrompt.setText(R.string.select_finger);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1116:                    mSwipePrompt.setText(R.string.select_finger);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1325:                    mSwipePrompt.setText(R.string.select_finger);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2501:             mSwipePrompt.setText(R.string.select_finger);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2523:             mSwipePrompt.setText(R.string.select_finger);
#1574
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:351:                            mButtonSwitchVerifyMode.setText(R.string.switch_security_code_button);
#1575
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:571:                        Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:591:                        Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:597:                            Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:643:        Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1288:                Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1297:                Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1317:                Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1760:            Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1819:                        Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1823:                Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1836:        Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2253:                    Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2285:               Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2288:               Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2403:                        Toast(R.string.lockfinger_enrollment_canceled_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2549:         //Toast(R.string.lockfinger_enrollment_canceled_toast);
#1576
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:602:                            Toast(R.string.lockfinger_enrollment_succeeded_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2049:                                //Toast(R.string.lockfinger_enrollment_succeeded_toast);
#1577
res/layout/help.xml:47:            android:text="@string/help_top"
res/layout/help.xml:67:            android:text="@string/help_top"
res/layout/help.xml:102:            android:text="@string/help_top"
#1578
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:557:            mSwipePrompt.setText(R.string.app_dbadmin_del_finger_title);
#1579
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:735:            mDialogBuilder.setTitle(R.string.enroll_only_title);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:736:            mDialogBuilder.setMessage(R.string.enroll_only);
#1580
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:737:            	//                toast(R.string.verification_timeout_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:738:                toast(getResources().getString(R.string.verification_timeout_toast));
#1581
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:673:            mDialogBuilder.setPositiveButton(R.string.alert_help_title, this);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:691:            mDialogBuilder.setTitle(R.string.alert_help_title);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:723:            mDialogBuilder.setTitle(R.string.alert_help_title);
#1582
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2372:        dialog.setTitle(R.string.app_name_enrol);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2430:        dialog.setTitle(R.string.app_name_enrol);
AndroidManifest.xml:29:        android:label="@string/app_name"
AndroidManifest.xml:35:        android:label="@string/app_name"
AndroidManifest.xml:72:            android:label="@string/app_name_enrol"
AndroidManifest.xml:85:            android:label="@string/app_name_verify"
AndroidManifest.xml:97:            android:label="@string/app_name_verify"
#1583
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:523:        //mHelpButton.setText(R.string.enrolactivity_help);
res/menu/menu.xml:11:        android:title="@string/enrolactivity_help">
#1584
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2372:        dialog.setTitle(R.string.app_name_enrol);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2430:        dialog.setTitle(R.string.app_name_enrol);
AndroidManifest.xml:72:            android:label="@string/app_name_enrol"
#1585
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:943:            //toast(R.string.swipe_too_slow);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:944:            showErrorFeedback(R.string.swipe_too_slow);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2097:                        //Toast(R.string.swipe_too_slow);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2098:                        showErrorFeedback(R.string.swipe_too_slow);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2101://                        Toast errorToast2 = Toast.makeText(EnrolActivity.this, R.string.swipe_too_slow, Toast.LENGTH_SHORT);
#1586
res/layout/help.xml:240:                android:text="@string/help_bottom_three"
res/layout/help.xml:256:                android:text="@string/help_bottom_three"
res/layout/help.xml:263:                android:text="@string/help_bottom_three"
#1587
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1078:                    iResource = R.string.please_swipe_any;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1080:                    iResource = R.string.please_swipe_any_get;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1549:                iResource = R.string.please_swipe_any;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1551:                iResource = R.string.please_swipe_any_get;
#1588
res/layout/helpsimple.xml:110:            android:text="@string/helpsimple_bottom"
res/layout/helpsimple.xml:126:            android:text="@string/helpsimple_bottom"
res/layout/helpsimple.xml:139:            android:text="@string/helpsimple_bottom"
#1589
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:957:            //toast(R.string.swipe_too_far_left);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:958:            showErrorFeedback(R.string.swipe_too_far_left);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:964:            //toast(R.string.swipe_too_far_left);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:965:            showErrorFeedback(R.string.swipe_too_far_left);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2132:                        //Toast(R.string.swipe_too_far_left);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2133:                        showErrorFeedback(R.string.swipe_too_far_left);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2136://                        Toast errorToast5 = Toast.makeText(EnrolActivity.this, R.string.swipe_too_far_left, Toast.LENGTH_SHORT);
#1590
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2216:                        Toast(R.string.checkhelp);
#1591
res/layout/helpsimple.xml:32:            android:text="@string/helpsimple_top"
res/layout/helpsimple.xml:46:            android:text="@string/helpsimple_top"
res/layout/helpsimple.xml:57:            android:text="@string/helpsimple_top"
#1592
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:767:            mDialogBuilder.setPositiveButton(R.string.Button_Yes, this);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:780:            mDialogBuilder.setPositiveButton(R.string.Button_Yes, this);
#1593
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:1000:                    mUserPrompt.setText(R.string.prompt_battery_unplug);
#1594
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:692:            mDialogBuilder.setMessage(R.string.help_button_content);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:724:            mDialogBuilder.setMessage(R.string.help_button_content);
#1595
res/layout/help.xml:127:                android:text="@string/help_bottom_dot"
res/layout/help.xml:171:                android:text="@string/help_bottom_dot"
res/layout/help.xml:186:                android:text="@string/help_bottom_dot"
res/layout/help.xml:232:                android:text="@string/help_bottom_dot"
res/layout/help.xml:247:                android:text="@string/help_bottom_dot"
#1596
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:926:            //toast(R.string.finger_not_match_toast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:927:            showErrorFeedback(R.string.finger_not_match_toast);
#1597
res/layout/main_land.xml:162:                    android:text="@string/switch_verify_mode_button_label" />
res/layout/main_land.xml:172:                    android:text="@string/switch_verify_mode_button_label"/>
res/layout/main.xml:196:            android:text="@string/switch_verify_mode_button_label" />
res/layout/main.xml:206:            android:text="@string/switch_verify_mode_button_label"/>
#1598
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:777:            mDialogBuilder.setTitle(R.string.app_dbadmin_really_delete_finger_title);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:819:            mDialogBuilder.setTitle(R.string.app_dbadmin_really_delete_finger_title);
#1599
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:960:                    mRightButton.setText(R.string.back);
res/layout/help.xml:274:            android:text="@string/back"
res/layout/help.xml:298:            android:text="@string/back"
#1600
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:308:        mUserPrompt.setText(R.string.prompt_user_swipe);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:411:                mUserPrompt.setText(R.string.prompt_user_swipe);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:893:                    mUserPrompt.setText(R.string.prompt_user_swipe);
#1601
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:936:            //toast(R.string.swipe_too_fast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:937:            showErrorFeedback(R.string.swipe_too_fast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2085:                        //Toast(R.string.swipe_too_fast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2086:                        showErrorFeedback(R.string.swipe_too_fast);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2089://                        Toast errorToast1 = Toast.makeText(EnrolActivity.this, R.string.swipe_too_fast, Toast.LENGTH_SHORT);
#1602
res/layout/help.xml:136:                android:text="@string/help_bottom_one"
res/layout/help.xml:143:                android:text="@string/help_bottom_one"
#1603
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:979:            //toast(R.string.swipe_too_reverse);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:980:            showErrorFeedback(R.string.swipe_too_reverse);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2145:                        //Toast(R.string.swipe_too_reverse);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2146:                        showErrorFeedback(R.string.swipe_too_reverse);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2148://                        Toast.makeText(EnrolActivity.this, R.string.swipe_too_reverse, Toast.LENGTH_SHORT).show();
#1604
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1080:                    iResource = R.string.please_swipe_any_get;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1551:                iResource = R.string.please_swipe_any_get;
#1605
res/layout/helpsimple.xml:19:            android:text="@string/helpsimple_title"
#1606
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:950:            //toast(R.string.swipe_too_short);
src/com/fujitsu/mobile_phone/FingerprintUnlock/VerifyActivity.java:951:            showErrorFeedback(R.string.swipe_too_short);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2121:                        //Toast(R.string.swipe_too_short);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2122:                        showErrorFeedback(R.string.swipe_too_short);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:2124://                        Toast errorToast4 = Toast.makeText(EnrolActivity.this, R.string.swipe_too_short, Toast.LENGTH_SHORT);
#1607
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1078:                    iResource = R.string.please_swipe_any;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1080:                    iResource = R.string.please_swipe_any_get;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1082:                    iResource = R.string.please_swipe;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1098:                mSwipePrompt.setText(R.string.please_swipe_again);
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1549:                iResource = R.string.please_swipe_any;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1551:                iResource = R.string.please_swipe_any_get;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1553:                iResource = R.string.please_swipe;
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:1569:            mSwipePrompt.setText(R.string.please_swipe_again);
#1608
src/com/fujitsu/mobile_phone/FingerprintUnlock/EnrolActivity.java:378:            Toast(R.string.timeout);
#1609
res/layout/screen_startdownloadscreencontrol.xml:54:   		    android:text="@string/caption_retry" />
#1610
src/com/fujitsu/mobile_phone/versionup/notification/UpdateSuccessNotification.java:40:		String title = context.getString(R.string.notification_updatecomplete);
src/com/fujitsu/mobile_phone/versionup/notification/UpdateSuccessNotification.java:49:		noticeBuilder.setContentTitle(context.getString(R.string.notification_updatecomplete));
#1611
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:94:				showtext = this.getString(R.string.caption_commonerrormessage_verify_error);
#1612
res/layout/screen_startupscreencontrol.xml:7:		android:title="@string/caption_startupactivity_title"
#1613
src/com/fujitsu/mobile_phone/versionup/notification/UpdateFailureNotification.java:40:		String title = context.getString(R.string.notification_updatefailed);
src/com/fujitsu/mobile_phone/versionup/notification/UpdateFailureNotification.java:50:		noticeBuilder.setContentTitle(context.getString(R.string.notification_updatefailed));
#1614
res/layout/screen_verifyscreencontrol.xml:18:	    android:text="@string/caption_verifying" >
#1615
src/com/fujitsu/mobile_phone/versionup/screen/DownloadScreen.java:65:		showtext = showtext + mcontext.getString(R.string.caption_downloading_2);
#1616
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:73:				showtext = this.getString(R.string.caption_commonerrormessage_session_failed);
#1617
src/com/fujitsu/mobile_phone/versionup/screen/DownloadScreen.java:67:		mTextPercentView.setText(mcontext.getString(R.string.caption_persent_text));
res/layout/screen_verifyscreencontrol.xml:31:		android:text="@string/caption_persent_text"
res/layout/notification_progress.xml:46:		        android:text="@string/caption_persent_text" />
res/layout/screen_downloadscreencontrol.xml:31:		android:text="@string/caption_persent_text"
res/layout/screen_filecheckscreencontrol.xml:31:		android:text="@string/caption_persent_text"
#1618
src/com/fujitsu/mobile_phone/versionup/screen/DownloadScreen.java:63:		String showtext = mcontext.getString(R.string.caption_downloading_1);
res/layout/screen_downloadscreencontrol.xml:18:	    android:text="@string/caption_downloading_1" >
#1619
res/layout/screen_startupscreencontrol.xml:11:	<PreferenceCategory android:title="@string/caption_startupactivity_setting">
#1620
res/layout/screen_startupscreencontrol.xml:13:            android:title="@string/caption_startupactivity_autoupdate"
res/layout/screen_startupscreencontrol.xml:17:            android:title="@string/caption_startupactivity_autoupdatetime"
#1621
src/com/fujitsu/mobile_phone/versionup/screencontrol/AutoUpdateSettingTimeDialog.java:126:		setTitle(R.string.caption_autoupdatesettingtime);
#1622
src/com/fujitsu/mobile_phone/versionup/screencontrol/ExternalInstallScreenControl.java:121:				text3 = this.getString(R.string.caption_externalinstall_microsd);
res/layout/screen_externalinstallscreencontrol.xml:21:		        android:text="@string/caption_externalinstall_microsd" />
#1623
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:79:				showtext = this.getString(R.string.caption_commonerrormessage_server_error);
#1624
res/layout/screen_stopdownlaodscreencontrol.xml:29:	    android:text="@string/caption_downlaodstop_yes" >
#1625
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:166:			button = getString(R.string.caption_startdownload_ok);
#1626
src/com/fujitsu/mobile_phone/versionup/notification/DownloadingNotification.java:42:		String title = context.getString(R.string.notification_download);
src/com/fujitsu/mobile_phone/versionup/notification/DownloadingNotification.java:52:			noticeBuilder.setContentTitle(context.getString(R.string.notification_download));
#1627
res/layout/screen_startinstallscreencontrol.xml:42:			    android:text="@string/caption_installstart_later"
#1628
src/com/fujitsu/mobile_phone/versionup/screen/CountDownInstallScreen.java:45:		mText2 = context.getString(R.string.caption_installstart_countdown_2); // カウントダウン以降の文言.
#1629
src/com/fujitsu/mobile_phone/versionup/notification/ValidatingNotification.java:42:		String title = context.getString(R.string.notification_verify);
src/com/fujitsu/mobile_phone/versionup/notification/ValidatingNotification.java:52:			noticeBuilder.setContentTitle(context.getString(R.string.notification_verify));
#1630
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:82:				showtext = this.getString(R.string.caption_commonerrormessage_wifi);
#1631
src/com/fujitsu/mobile_phone/versionup/screencontrol/ServerCheckScreenControl.java:136:		String text = this.getString(R.string.caption_serverchecking);
res/layout/screen_servercheckscreencontrol.xml:21:		    android:text="@string/caption_serverchecking" />
#1632
res/layout/screen_filecheckscreencontrol.xml:18:	    android:text="@string/caption_filechecking" >
#1633
res/layout/screen_externalinstallscreencontrol.xml:35:			    android:text="@string/caption_externalinstall_yes" >
#1634
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:103:				showtext = this.getString(R.string.caption_commonerrormessage_verifyerror_sd);
#1635
#1636
src/com/fujitsu/mobile_phone/versionup/notification/UpdateAvailableNotification.java:37:		String title = context.getString(R.string.notification_installstart);
src/com/fujitsu/mobile_phone/versionup/notification/UpdateAvailableNotification.java:46:		noticeBuilder.setContentTitle(context.getString(R.string.notification_installstart));
#1637
res/layout/screen_externalinstallscreencontrol.xml:41:			    android:text="@string/caption_externalinstall_no" >
#1638
src/com/fujitsu/mobile_phone/versionup/screencontrol/StopDownlaodScreenControl.java:137:		String text = this.getString(R.string.caption_downlaodstop);
res/layout/screen_stopdownlaodscreencontrol.xml:22:	    	    android:text="@string/caption_downlaodstop" />
res/layout/screen_stopdownlaodscreencontrol.xml:29:	    android:text="@string/caption_downlaodstop_yes" >
res/layout/screen_stopdownlaodscreencontrol.xml:36:	    android:text="@string/caption_downlaodstop_no" >
#1639
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:121:				showtext = this.getString(R.string.caption_roamingarea);
#1640
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:70:				showtext = this.getString(R.string.caption_commonerrormessage_session_connect_error);
#1641
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:115:				showtext = this.getString(R.string.caption_commonerrormessage_updatefile_error);
#1642
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:190:					text = text + this.getString(R.string.caption_restartdownload_bearer_2);
#1643
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:188:					text = this.getString(R.string.caption_restartdownload_bearer_1);
#1644
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:191:					text = text + this.getString(R.string.caption_restartdownload_bearer_3);
#1645
res/layout/screen_startupscreencontrol.xml:17:            android:title="@string/caption_startupactivity_autoupdatetime"
#1646
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:76:				showtext = this.getString(R.string.caption_commonerrormessage_session_timeout);
#1647
src/com/fujitsu/mobile_phone/versionup/screen/CountDownInstallScreen.java:47:		mTextSecond = context.getString(R.string.caption_installstart_second); // 秒表示(文言).
#1648
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:178:				text = text + this.getString(R.string.caption_startdownload_nobearer_2);
#1649
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:196:					text = text + this.getString(R.string.caption_startdownload_bearer_3);
#1650
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:61:		String showtext = this.getString(R.string.caption_commonerrormessage_out);
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:67:				showtext = this.getString(R.string.caption_commonerrormessage_out);
#1651
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:176:				text = this.getString(R.string.caption_startdownload_nobearer_1);
#1652
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:195:					text = text + this.getString(R.string.caption_startdownload_bearer_2);
#1653
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:193:					text = this.getString(R.string.caption_startdownload_bearer_1);
res/layout/screen_startdownloadscreencontrol.xml:13:	    android:text="@string/caption_startdownload_bearer_1" >
#1654
res/layout/screen_startupscreencontrol.xml:8:		android:summary="@string/caption_startupactivity_summary">
#1655
res/layout/screen_downloadconnectionscreencontrol.xml:22:		    android:text="@string/caption_downloadconnecting" />
#1656
src/com/fujitsu/mobile_phone/versionup/screencontrol/ExternalInstallScreenControl.java:110:		String text1 = this.getString(R.string.caption_externalinstall1);
#1657
src/com/fujitsu/mobile_phone/versionup/screen/CountDownInstallScreen.java:46:		mTextMinute = context.getString(R.string.caption_installstart_minute); // 分表示(文言).
#1658
src/com/fujitsu/mobile_phone/versionup/screencontrol/ExternalInstallScreenControl.java:111:		String text2 = this.getString(R.string.caption_externalinstall2);
#1659
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:179:				text = text + this.getString(R.string.caption_startdownload_nobearer_3);
#1660
src/com/fujitsu/mobile_phone/versionup/screencontrol/FileCheckScreenControl.java:175:				msg = getString(R.string.caption_installstart);
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartInstallScreenControl.java:178:				String text = this.getString(R.string.caption_installstart);
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartInstallScreenControl.java:186:				String text = this.getString(R.string.caption_installstart);
src/com/fujitsu/mobile_phone/versionup/screen/CountDownInstallScreen.java:44:		mText1 = context.getString(R.string.caption_installstart_countdown_1); // 英語用文言.
src/com/fujitsu/mobile_phone/versionup/screen/CountDownInstallScreen.java:45:		mText2 = context.getString(R.string.caption_installstart_countdown_2); // カウントダウン以降の文言.
src/com/fujitsu/mobile_phone/versionup/screen/CountDownInstallScreen.java:46:		mTextMinute = context.getString(R.string.caption_installstart_minute); // 分表示(文言).
src/com/fujitsu/mobile_phone/versionup/screen/CountDownInstallScreen.java:47:		mTextSecond = context.getString(R.string.caption_installstart_second); // 秒表示(文言).
res/layout/screen_startinstallscreencontrol.xml:24:		    android:text="@string/caption_installstart" />
res/layout/screen_startinstallscreencontrol.xml:36:			    android:text="@string/caption_installstart_now"
res/layout/screen_startinstallscreencontrol.xml:42:			    android:text="@string/caption_installstart_later"
#1661
src/com/fujitsu/mobile_phone/versionup/notification/NeedUpdateNotification.java:40:		String title = context.getString(R.string.notification_title);
src/com/fujitsu/mobile_phone/versionup/notification/NeedUpdateNotification.java:50:		noticeBuilder.setContentTitle(context.getString(R.string.notification_title));
#1662
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:85:			if (!Buttontext.equals(getString(R.string.caption_ok))) { // ボタンが「OK」の場合.
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:184:				button = getString(R.string.caption_ok);
res/layout/screen_startdownloadscreencontrol.xml:32:	    android:text="@string/caption_ok" />
res/layout/screen_noticescreencontrol.xml:35:			    android:text="@string/caption_ok"
res/layout/screen_updateresultscreencontrol.xml:34:		    android:text="@string/caption_ok"
res/layout/screen_lowbatteryerrorscreencontrol.xml:35:			    android:text="@string/caption_ok"
res/layout/screen_autoupdatesettingguidescreencontrol.xml:35:			    android:text="@string/caption_ok"
#1663
res/layout/screen_externalfilecopyscreencontrol.xml:22:		    android:text="@string/caption_externalfilecopying" />
#1664
#1665
res/layout/screen_lowbatteryerrorscreencontrol.xml:23:		        android:text="@string/caption_commonerrormessage_battery" />
#1666
src/com/fujitsu/mobile_phone/versionup/notification/CommonNotification.java:38:			notificationManager.notify(R.string.app_name, notification);
src/com/fujitsu/mobile_phone/versionup/notification/CommonNotification.java:62:			notificationManager.notify(R.string.app_name, notification);
src/com/fujitsu/mobile_phone/versionup/notification/CommonNotification.java:77:		notificationManager.cancel(R.string.app_name);
res/layout/screen_startupscreencontrol.xml:4:	android:title="@string/app_name">
AndroidManifest.xml:31:        android:label="@string/app_name" android:allowClearUserData="false">
AndroidManifest.xml:34:            android:label="@string/app_name"
#1667
res/layout/screen_startinstallscreencontrol.xml:36:			    android:text="@string/caption_installstart_now"
#1668
src/com/fujitsu/mobile_phone/versionup/screencontrol/AutoUpdateSettingTimeDialog.java:130:		setButton(BUTTON_POSITIVE, themeContext.getText(R.string.caption_set), this);
#1669
src/com/fujitsu/mobile_phone/versionup/screencontrol/UpdateResultScreenControl.java:64:				String text = getString(R.string.caption_commonerrormessage_completed);
res/layout/screen_noticescreencontrol.xml:23:	    	    android:text="@string/caption_commonerrormessage_completed" />
res/layout/screen_updateresultscreencontrol.xml:23:	    	    android:text="@string/caption_commonerrormessage_completed" />
#1670
res/layout/screen_stopdownlaodscreencontrol.xml:36:	    android:text="@string/caption_downlaodstop_no" >
#1671
src/com/fujitsu/mobile_phone/versionup/screencontrol/UpdateResultScreenControl.java:69:				String text = getString(R.string.caption_commonerrormessage_updatefailed);
#1672
src/com/fujitsu/mobile_phone/versionup/screencontrol/AutoUpdateSettingGuideScreenControl.java:86:			text = this.getString(R.string.caption_commonmessage_guide);
res/layout/screen_autoupdatesettingguidescreencontrol.xml:23:		        android:text="@string/caption_commonmessage_guide" />
#1673
#1674
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:205:            msg = getString(R.string.caption_description_geterror);
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:241:                msg = context.getString(R.string.caption_description_geterror);
res/layout/screen_startdownloadscreencontrol.xml:25:		    android:text="@string/caption_description_geterror" />
#1675
src/com/fujitsu/mobile_phone/versionup/screencontrol/AutoUpdateSettingTimeDialog.java:129:		setButton(BUTTON_NEGATIVE, themeContext.getText(R.string.caption_cancel), this);
res/layout/screen_stopdownlaodscreencontrol.xml:54:  			    android:text="@string/caption_cancel"
res/layout/screen_startdownloadscreencontrol.xml:43:   			android:text="@string/caption_cancel" />
res/layout/screen_servercheckscreencontrol.xml:37:		    android:text="@string/caption_cancel" />
res/layout/screen_externalfilecopyscreencontrol.xml:48:   	    	android:text="@string/caption_cancel" />
res/layout/screen_downloadscreencontrol.xml:51:		    android:text="@string/caption_cancel" />
res/layout/screen_downloadconnectionscreencontrol.xml:47:   	    	android:text="@string/caption_cancel" />
#1676
#1677
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:170:				text = this.getString(R.string.caption_restartdownload_nobearer_1);
#1678
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:173:				text = text + this.getString(R.string.caption_restartdownload_nobearer_3);
#1679
src/com/fujitsu/mobile_phone/versionup/screencontrol/StartDownloadScreenControl.java:172:				text = text + this.getString(R.string.caption_restartdownload_nobearer_2);
#1680
src/com/fujitsu/mobile_phone/versionup/screencontrol/ExternalInstallScreenControl.java:124:				text3 = this.getString(R.string.caption_externalinstall_memory);
#1681
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:85:				showtext = this.getString(R.string.caption_commonerrormessage_writefile_error);
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:106:				showtext = this.getString(R.string.caption_commonerrormessage_writefile_error);
#1682
src/com/fujitsu/mobile_phone/versionup/screencontrol/NoticeScreenControl.java:118:				showtext = this.getString(R.string.caption_noneedupdate);
#1683
src/com/fujitsu/mobile_phone/versionup/screencontrol/AutoUpdateSettingGuideScreenControl.java:80:			text = this.getString(R.string.caption_commonmessage_confirm);
#1684
src/com/android/incallui/CallCardFragment.java:629:            callStateLabel = context.getString(R.string.card_title_incoming_call);
#1685
src/com/android/incallui/InCallActivity.java:1072:                errorMessageResId = R.string.incall_error_supp_service_switch;
#1686
res/xml/keyboard_layouts.xml:15:            android:label="@string/keyboard_layout_japanese_label"
#1687
#1688
AndroidManifest.xml:8:            android:label="@string/app_label"
#1689
AndroidManifest.xml:12:                android:label="@string/keyboard_layouts_label">
#1690
src/com/android/keyguard/KeyguardHostView.java:849:            msgResId = R.string.STR_DVLK_008_007;
#1691
src/com/android/keyguard/KeyguardPINView.java:166:            mForgotPatternButton.setText(R.string.STR_DVLK_007_015);
#1692
#1693
#1694
src/com/android/keyguard/KeyguardPasswordView.java:195:            mForgotPatternButton.setText(R.string.STR_DVLK_011_001);
#1695
src/com/android/keyguard/KeyguardAccountView.java:184:                messageId = R.string.kg_login_too_many_attempts_pin;
#1696
#1697
src/com/android/keyguard/KeyguardAccountView.java:189:                messageId = R.string.kg_login_too_many_attempts_password;
#1698
res/layout-sw600dp-port/keyguard_finger_unlock_view.xml:15:    android:contentDescription="@string/keyguard_accessibility_finger_unlock"
res/layout/keyguard_finger_unlock_view.xml:17:    android:contentDescription="@string/keyguard_accessibility_finger_unlock"
res/layout/keyguard_finger_unlock_view.xml:31:    android:contentDescription="@string/keyguard_accessibility_finger_unlock"
res/layout-sw600dp-land/keyguard_finger_unlock_view.xml:15:    android:contentDescription="@string/keyguard_accessibility_finger_unlock"
#1699
src/com/android/keyguard/KeyguardAccountView.java:192:                messageId = R.string.kg_login_too_many_attempts_other;
#1700
src/com/android/keyguard/KeyguardHostView.java:791:            messageId = R.string.STR_DVLK_008_001;
#1701
src/com/android/keyguard/KeyguardHostView.java:843:            msgResId = R.string.STR_DVLK_008_003;
#1702
src/com/android/keyguard/KeyguardHostView.java:797:            messageId = R.string.STR_DVLK_008_005;
#1703
src/com/android/keyguard/KeyguardFingerView.java:718://                    mUserPrompt.setText(R.string.keyguard_finger_please_swipe);
src/com/android/keyguard/KeyguardFingerView.java:719://                    mUserPromptBg.setText(R.string.keyguard_finger_please_swipe);
src/com/android/keyguard/KeyguardFingerView.java:728:                                mUserPrompt.setText(R.string.keyguard_finger_please_swipe);
src/com/android/keyguard/KeyguardFingerView.java:729:                                mUserPromptBg.setText(R.string.keyguard_finger_please_swipe);
src/com/android/keyguard/KeyguardFingerView.java:1182:                                mUserPrompt.setText(R.string.keyguard_finger_please_swipe);
src/com/android/keyguard/KeyguardFingerView.java:1183:                                mUserPromptBg.setText(R.string.keyguard_finger_please_swipe);
#1704
res/layout-sw600dp-port/keyguard_finger_unlock_view.xml:52:                android:text="@string/keyguard_finger_style_caution_message"
res/layout-sw600dp-land/keyguard_finger_unlock_view.xml:57:                    android:text="@string/keyguard_finger_style_caution_message"
#1705
src/com/android/keyguard/KeyguardHostView.java:806:            messageId = R.string.lockscreen_too_many_failed_fingers_dialog_message;
#1706
#1707
src/com/android/keyguard/KeyguardFingerView.java:131:                    mToggleLockButton.setText(R.string.toggle_pin_button);
#1708
src/com/android/keyguard/KeyguardFingerView.java:904:                        toastMessage(mContext.getString(R.string.keyguard_finger_not_match_at_charging), TOAST_DISPLAY_TIME_FOR_CHARGING);
src/com/android/keyguard/KeyguardFingerView.java:1005:                        toastMessage(mContext.getString(R.string.keyguard_finger_not_match_at_charging), TOAST_DISPLAY_TIME_FOR_CHARGING);
#1709
#1710
#1711
src/com/android/keyguard/KeyguardFingerView.java:859://                toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_fast));
src/com/android/keyguard/KeyguardFingerView.java:864:                        toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_fast));
src/com/android/keyguard/KeyguardFingerView.java:870:                    //toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_fast_for_lockscreen));
#1712
src/com/android/keyguard/KeyguardFingerView.java:928://                toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_skewed));
src/com/android/keyguard/KeyguardFingerView.java:933:                        toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_skewed));
src/com/android/keyguard/KeyguardFingerView.java:939:                    //toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_skewed_for_lockscreen));
#1713
src/com/android/keyguard/KeyguardFingerView.java:486:                mUserPrompt.setText(R.string.keyguard_finger_swipe_ready);
src/com/android/keyguard/KeyguardFingerView.java:487:                mUserPromptBg.setText(R.string.keyguard_finger_swipe_ready);
src/com/android/keyguard/KeyguardFingerView.java:1238:                            mUserPrompt.setText(R.string.keyguard_finger_swipe_ready);
src/com/android/keyguard/KeyguardFingerView.java:1239:                            mUserPromptBg.setText(R.string.keyguard_finger_swipe_ready);
#1714
src/com/android/keyguard/KeyguardFingerView.java:128:                    mToggleLockButton.setText(R.string.toggle_pattern_button);
res/layout/keyguard_emergency_carrier_area.xml:77:            android:text="@string/toggle_pattern_button"
res/layout-sw600dp/keyguard_emergency_carrier_area.xml:46:            android:text="@string/toggle_pattern_button"
#1715
src/com/android/keyguard/KeyguardPINView.java:91:                mToggleLockButton.setText(R.string.toggle_fingerprint_button);
src/com/android/keyguard/KeyguardPatternView.java:156:                mToggleLockButton.setText(R.string.toggle_fingerprint_button);
src/com/android/keyguard/KeyguardPasswordView.java:135:                mToggleLockButton.setText(R.string.toggle_fingerprint_button);
#1716
src/com/android/keyguard/KeyguardFingerView.java:1045://                    mErrorPrompt.setText(mContext.getString(R.string.keyguard_finger_template_error));
src/com/android/keyguard/KeyguardFingerView.java:1048://                    mErrorPromptBg.setText(mContext.getString(R.string.keyguard_finger_template_error));
src/com/android/keyguard/KeyguardFingerView.java:1053:                    mUserPrompt.setText(mContext.getString(R.string.keyguard_finger_template_error));
src/com/android/keyguard/KeyguardFingerView.java:1056:                    mUserPromptBg.setText(mContext.getString(R.string.keyguard_finger_template_error));
#1717
src/com/android/keyguard/KeyguardFingerView.java:904:                        toastMessage(mContext.getString(R.string.keyguard_finger_not_match_at_charging), TOAST_DISPLAY_TIME_FOR_CHARGING);
src/com/android/keyguard/KeyguardFingerView.java:1001://                toastMessage(mContext.getString(R.string.keyguard_finger_not_match));
src/com/android/keyguard/KeyguardFingerView.java:1005:                        toastMessage(mContext.getString(R.string.keyguard_finger_not_match_at_charging), TOAST_DISPLAY_TIME_FOR_CHARGING);
src/com/android/keyguard/KeyguardFingerView.java:1012:                            toastMessage(mContext.getString(R.string.keyguard_finger_not_match));
src/com/android/keyguard/KeyguardFingerView.java:1021:                    //toastMessage(mContext.getString(R.string.keyguard_finger_not_match_for_lockscreen));
#1718
src/com/android/keyguard/KeyguardFingerView.java:970:                        toastMessage(mContext.getString(R.string.keyguard_finger_swipe_reverse));
src/com/android/keyguard/KeyguardFingerView.java:976:                    //toastMessage(mContext.getString(R.string.keyguard_finger_swipe_reverse_for_lockscreen));
#1719
src/com/android/keyguard/KeyguardFingerView.java:135:                    mToggleLockButton.setText(R.string.toggle_password_button);
#1720
src/com/android/keyguard/KeyguardFingerView.java:609:                   mUserPrompt.setText(R.string.keyguard_unlock_guide);
src/com/android/keyguard/KeyguardFingerView.java:624://                    mErrorPrompt.setText(R.string.keyguard_unlock_guide);
src/com/android/keyguard/KeyguardFingerView.java:788://                                mErrorPrompt.setText(R.string.keyguard_unlock_guide);
src/com/android/keyguard/KeyguardFingerView.java:800:                                mUserPrompt.setText(R.string.keyguard_unlock_guide);
src/com/android/keyguard/KeyguardFingerView.java:1170://                            mErrorPrompt.setText(R.string.keyguard_unlock_guide);
src/com/android/keyguard/KeyguardFingerView.java:1194:                                    mUserPrompt.setText(R.string.keyguard_unlock_guide);
res/layout/keyguard_selector_view.xml:75:                android:text="@string/keyguard_unlock_guide"
#1721
src/com/android/keyguard/KeyguardFingerView.java:900://                toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_short));
src/com/android/keyguard/KeyguardFingerView.java:911:                            toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_short));
src/com/android/keyguard/KeyguardFingerView.java:920:                    //toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_short_for_lockscreen));
#1722
src/com/android/keyguard/KeyguardFingerView.java:877://                toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_slow));
src/com/android/keyguard/KeyguardFingerView.java:882:                        toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_slow));
src/com/android/keyguard/KeyguardFingerView.java:888:                    //toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_slow_for_lockscreen));
#1723
src/com/android/keyguard/KeyguardHostView.java:861:            message = mContext.getString(R.string.lockscreen_failed_fingers_almost_glogin,
#1724
src/com/android/keyguard/KeyguardFingerView.java:852:                toastMessage(mContext.getString(R.string.keyguard_finger_ui_timeout));
#1725
src/com/android/keyguard/KeyguardFingerView.java:947://                toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_far_left));
src/com/android/keyguard/KeyguardFingerView.java:952:                        toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_far_left));
src/com/android/keyguard/KeyguardFingerView.java:958:                    //toastMessage(mContext.getString(R.string.keyguard_finger_swipe_too_far_left_for_lockscreen));
#1726
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:596:                showDialog(getString(R.string.checksum_equal), LED_WHITE);
#1727
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:774:                showDialog(service.getString(R.string.kitting_skip),
#1728
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:626:                showDialog(getString(R.string.copy_err), LED_RED);
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:786:                showDialog(service.getString(R.string.copy_err),
#1729
src/com/fujitsu/mobile_phone/kitting/KittingResultShowActivity.java:82:        resultDialog.setTitle(R.string.dialog_title);
#1730
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:703:            showDialog(getString(R.string.massage_send_err), LED_RED);
#1731
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:504:            showDialog(getString(R.string.unexpected_err), LED_RED);
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:643:            showDialog(getString(R.string.unexpected_err), LED_RED);
#1732
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:802:                showDialog(service.getString(R.string.kitting_fail),
#1733
src/com/fujitsu/mobile_phone/kitting/KittingResultShowActivity.java:92:        resultDialog.setPositiveButton(getString(R.string.dialog_ok_button),
#1734
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:639:            showDialog(getString(R.string.file_open_err), LED_RED);
#1735
#1736
src/com/fujitsu/mobile_phone/kitting/KittingResultShowActivity.java:74:        nm.cancel(R.string.app_name);
src/com/fujitsu/mobile_phone/kitting/KittingResultShowActivity.java:75:        nm.notify(R.string.app_name, ledControl);
src/com/fujitsu/mobile_phone/kitting/KittingResultShowActivity.java:121:        nm.cancel(R.string.app_name);
AndroidManifest.xml:33:        android:label="@string/app_name"
AndroidManifest.xml:39:            android:label="@string/app_name"
AndroidManifest.xml:46:            android:label="@string/app_name"
#1737
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:780:                showDialog(service.getString(R.string.low_battery),
#1738
#1739
src/com/fujitsu/mobile_phone/kitting/KittingAgentService.java:796:                showDialog(service.getString(R.string.kitting_success),
#1740
res/layout/drop_target_bar.xml:60:            android:text="@string/create_folder_label"
#1741
src/com/android/mms/ui/MessagingPreferenceActivity.java:391:        builder.setMessage(R.string.confirm_change_limit_body);
src/com/android/mms/ui/MessagingPreferenceActivity.java:433:        builder.setMessage(R.string.confirm_change_limit_body);
src/com/android/mms/ui/MessagingPreferenceActivity.java:469:        builder.setMessage(R.string.confirm_change_limit_body);
#1742
AndroidManifest.xml:391:	    android:description="@string/app_description_remote"
#1743
src/com/android/mms/transaction/SmsRejectedReceiver.java:89:                titleId = R.string.sms_rejected_title;
#1744
src/com/android/mms/transaction/SmsRejectedReceiver.java:86:                titleId = R.string.sms_full_title;
#1745
src/com/android/mms/ui/MessageUtils.java:357:        details.append(res.getString(R.string.text_message));
#1746
src/com/android/mms/ui/MessagingPreferenceActivity.java:350:                    R.string.pref_title_sms_delete).show();
src/com/android/mms/ui/MessagingPreferenceActivity.java:388:        builder.setTitle(R.string.pref_title_sms_delete);
src/com/android/mms/ui/MessagingPreferenceActivity.java:430:        builder.setTitle(R.string.pref_title_sms_delete);
res/xml/preferences.xml:58:                      android:title="@string/pref_title_sms_delete" />
#1747
res/xml/preferences.xml:25:        android:summary="@string/pref_summary_sms_disabled"
#1748
src/com/android/mms/ui/ManageSimMessages.java:341:                setTitle(getString(R.string.sim_manage_messages_title));
src/com/android/mms/ui/ManageSimMessages.java:348:                setTitle(getString(R.string.sim_manage_messages_title));
AndroidManifest.xml:246:                  android:label="@string/sim_manage_messages_title">
#1749
src/com/android/mms/transaction/SmsRejectedReceiver.java:87:                bodyId = R.string.sms_full_body;
#1750
res/xml/preferences.xml:65:  <PreferenceCategory android:title="@string/pref_sms_settings_title"
#1751
res/xml/security_settings_fingerpassword.xml:49:            android:title="@string/application_lock_title"
res/xml/security_settings_fingerpin.xml:63:            android:title="@string/application_lock_title"
res/xml/security_settings_fingerpattern.xml:66:            android:title="@string/application_lock_title"
#1752
res/xml/security_settings_fingerpassword.xml:50:            android:summary="@string/application_lock_summary"
res/xml/security_settings_fingerpin.xml:64:            android:summary="@string/application_lock_summary"
res/xml/security_settings_fingerpattern.xml:67:            android:summary="@string/application_lock_summary"
#1753
src/com/android/settings/bluetooth/DeviceProfilesSettings.java:439:            message = context.getString(R.string.bluetooth_disable_dunprofile_message,
#1754
src/com/android/settings/bluetooth/FjDunProfile.java:124:                return R.string.bluetooth_summary_connected_to_dun;
#1755
#1756
#1757
src/com/android/settings/bluetooth/BluetoothNameDialogFragment.java:153:                                                R.string.emoji_error, Toast.LENGTH_LONG).show();
src/com/android/settings/bluetooth/BluetoothNameDialogFragment.java:200:                                R.string.emoji_error, Toast.LENGTH_LONG).show();
src/com/android/settings/bluetooth/DeviceProfilesSettings.java:379:                        R.string.emoji_error, Toast.LENGTH_LONG).show();
#1758
src/com/android/settings/bluetooth/BluetoothIntentReceiver.java:206:            Toast.makeText(context, context.getString(R.string.bluetooth_toast_title), Toast.LENGTH_LONG).show();
#1759
src/com/android/settings/bluetooth/DeviceProfilesSettings.java:438:            title = context.getString(R.string.bluetooth_disable_dunprofile_title);
#1760
src/com/android/settings/bluetooth/FjDunProfile.java:121:                return R.string.bluetooth_summary_use_for_dun;
#1761
src/com/android/settings/ProgressCategory.java:64:        scanning.setText(mProgress ? R.string.progress_scanning : R.string.progress_tap_to_pair);
#1762
src/com/android/settings/bluetooth/FjDunProfile.java:112:        return R.string.bluetooth_profile_fj_dun;
#1763
#1764
#1765
src/com/android/settings/Utils.java:456:                        res.getString(R.string.battery_info_status_charging_holder);
#1766
#1767
#1768
res/layout/preference_dialog_brightness.xml:81:                    android:text="@string/auto_brightness_offset_bright"
#1769
res/layout/preference_dialog_brightness.xml:66:                    android:text="@string/auto_brightness_offset_dark"
#1770
res/layout/preference_dialog_brightness.xml:43:                android:text="@string/outdoor_view_description"
#1771
res/layout/preference_dialog_brightness.xml:43:                android:text="@string/outdoor_view_description"
res/layout/preference_dialog_brightness.xml:110:                android:text="@string/outdoor_view"
res/layout/preference_dialog_brightness.xml:117:            android:text="@string/outdoor_view_summary"
#1772
res/layout/preference_dialog_brightness.xml:117:            android:text="@string/outdoor_view_summary"
#1773
src/com/fujitsu/mobile_phone/kitting/KittingApplicationHistory.java:66:                this.getActivity(), getResources().getString(R.string.get_history_error));
src/com/fujitsu/mobile_phone/kitting/KittingManagementStatus.java:96:                this.getActivity(), getResources().getString(R.string.get_history_error));
#1774
res/layout/kitting_start.xml:35:        android:text="@string/kitting_start_button"
#1775
src/com/fujitsu/mobile_phone/kitting/KittingManagementStatus.java:90:                    getResources().getString(R.string.application_history_summary));
#1776
src/com/fujitsu/mobile_phone/kitting/KittingMovingFragment.java:77:            .setPositiveButton(getString(R.string.kitting_start_dialog_ok),
#1777
src/com/fujitsu/mobile_phone/kitting/KittingApplicationHistory.java:209:        sb.append(getResources().getString(R.string.execute_result_separater));
#1778
res/xml/kitting_management_status.xml:25:        android:title="@string/application_date"
#1779
res/xml/kitting_management_status.xml:31:        android:title="@string/applicable_state"
#1780
#1781
res/layout/kitting_start.xml:26:        android:text="@string/kitting_start_info"
#1782
src/com/fujitsu/mobile_phone/kitting/KittingMovingFragment.java:68:            .setMessage(getString(R.string.kitting_start_execute))
#1783
src/com/fujitsu/mobile_phone/kitting/KittingApplicationHistory.java:202:        String result = getResources().getString(R.string.execute_result_failure);
#1784
src/com/fujitsu/mobile_phone/kitting/KittingManagementStatus.java:90:                    getResources().getString(R.string.application_history_summary));
res/xml/kitting_management_status.xml:36:        android:title="@string/application_history"
#1785
res/xml/device_info_settings.xml:47:                android:title="@string/kitting_settings" 
AndroidManifest.xml:691:                android:label="@string/kitting_settings"
#1786
res/xml/device_info_status.xml:80:        android:title="@string/management_state" 
AndroidManifest.xml:709:                android:label="@string/management_state"
#1787
src/com/fujitsu/mobile_phone/kitting/KittingManagementStatus.java:84:                    stateStr = getResources().getString(R.string.application_state_success);
#1788
src/com/fujitsu/mobile_phone/kitting/KittingMovingFragment.java:70:            .setNegativeButton(getString(R.string.kitting_start_dialog_cancel),
#1789
src/com/fujitsu/mobile_phone/kitting/KittingManagementStatus.java:70:                String stateStr = getResources().getString(R.string.application_state_failure);
#1790
src/com/fujitsu/mobile_phone/kitting/KittingApplicationHistory.java:204:            result = getResources().getString(R.string.execute_result_success);
#1791
res/xml/kitting_management_status.xml:19:        android:title="@string/profile_rev"
#1792
src/com/fujitsu/mobile_phone/kitting/KittingApplicationHistory.java:175:            title.setText(getResources().getString(R.string.application_content));
#1793
src/com/android/settings/MasterClearConfirm.java:78:            dialog.setMessage(getActivity().getText(R.string.master_clear_message));
#1794
res/layout/master_clear.xml:136:            android:text="@string/master_clear_unecrypt_button_text"
#1795
#1796
#1797
#1798
res/xml/sound_settings.xml:54:            android:title="@string/STR_MICROPHONE_LP_TITLE" 
#1799
res/layout/microphone_statusbar.xml:31:              android:text="@string/sb_contenttext">
#1800
res/layout/usb_earphone_statusbar.xml:40:              android:text="@string/sb_usbdev_contenttext">
#1801
src/com/android/settings/UsbEarPhoneInputOptions.java:147:        builder.setNegativeButton(getString(R.string.dlg_cancel_ear),
#1802
src/com/android/settings/MicroPhoneInputOptions.java:134:        String[] listItems = {getString(R.string.rb_item1),getString(R.string.rb_item2)};
#1803
src/com/android/settings/UsbEarPhoneInputOptions.java:83:        String[] listItems = {getString(R.string.usb_rb_item1),getString(R.string.usb_rb_item2)};
#1804
res/layout/microphone_statusbar.xml:40:              android:text="@string/sb_dev_contenttext">
#1805
src/com/android/settings/UsbEarPhoneInputOptions.java:83:        String[] listItems = {getString(R.string.usb_rb_item1),getString(R.string.usb_rb_item2)};
#1806
res/layout/usb_earphone_dialog_title.xml:24:              android:text="@string/usb_dlg_title">
#1807
res/layout/usb_earphone_statusbar.xml:31:              android:text="@string/sb_usbcontenttext">
#1808
src/com/android/settings/MicroPhoneInputOptions.java:134:        String[] listItems = {getString(R.string.rb_item1),getString(R.string.rb_item2)};
#1809
res/layout/microphone_dialglayout.xml:26:              android:text="@string/note_below_checkbox"
#1810
res/layout/microphone_dialog_title.xml:23:              android:text="@string/dlg_title">
#1811
res/layout/usb_earphone_statusbar.xml:21:              android:text="@string/sb_usbearphone_plugin">
#1812
src/com/android/settings/EarPhoneBCReceiver.java:326:                    //.setTicker(context.getString(R.string.sb_title))
src/com/android/settings/EarPhoneBCReceiver.java:327:                    .setContentTitle(context.getString(R.string.sb_title))
res/layout/microphone_statusbar.xml:26:              android:text="@string/sb_title">
#1813
res/xml/sound_settings.xml:52:            android:key="@string/STR_MICROPHONE_LP_KEY" 
#1814
res/layout/microphone_statusbar.xml:21:              android:text="@string/sb_earphone_plugin">
#1815
res/layout/usb_earphone_statusbar.xml:26:              android:text="@string/sb_usbtitle">
#1816
res/layout/microphone_dialglayout.xml:20:              android:layout_height="wrap_content" android:text="@string/ck_status">
#1817
#1818
#1819
#1820
#1821
#1822
#1823
#1824
#1825
src/com/android/settings/SecuritySettings.java:1064:                mSdEncryption.setSummary(R.string.sd_not_mounted_summary);
#1826
res/layout/sd_crypt_keeper_settings.xml:82:                android:text="@string/sd_encrypt_keeper_desc"
#1827
#1828
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:629:                .setTitle(R.string.memory_dcim_title)
#1829
src/com/android/settings/EcryptfsCryptKeeper.java:298:            ((TextView) findViewById(R.id.title)).setText(R.string.ecryptfs_keeper_sd_encrypt_failed_title);
#1830
src/com/android/settings/deviceinfo/MiscFilesHandler.java:139:                .setTitle(R.string.dlg_confirm_del_misc_files_title)
#1831
res/layout/sd_crypt_keeper_settings.xml:62:                android:text="@string/sd_crypt_sd_unavailable_text"
#1832
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:94:        setTitle(context.getText(R.string.usb_memory));
#1833
src/com/android/settings/EcryptfsCryptKeeper.java:299:            ((TextView) findViewById(R.id.status)).setText(R.string.ecryptfs_keeper_sd_encrypt_failed_summary);
#1834
#1835
src/com/android/settings/StorageFormatAlertDialogActivity.java:45:                .setTitle(R.string.dlg_error_format_title)
#1836
res/xml/usb_settings.xml:38:        android:title="@string/usb_ums_title"
#1837
#1838
res/layout/sd_crypt_keeper_confirm.xml:44:        android:text="@string/sd_encrypt_keeper_button_text"
res/layout/sd_crypt_keeper_settings.xml:94:        android:text="@string/sd_encrypt_keeper_button_text"
#1839
#1840
src/com/android/settings/MediaFormat.java:170:                setTitle(R.string.sd_media_format_title);
src/com/android/settings/MediaFormat.java:202:                setTitle(R.string.sd_media_format_title);
#1841
#1842
res/xml/usb_settings.xml:39:        android:summary="@string/usb_ums_summary"
#1843
src/com/android/settings/EcryptfsCryptKeeper.java:301:            ((TextView) findViewById(R.id.title)).setText(R.string.ecryptfs_keeper_sd_unencrypt_failed_title);
#1844
src/com/android/settings/SdCryptKeeperSettings.java:325:            titleResourceId = R.string.sd_unencrypt_keeper_confirm_title;
#1845
#1846
#1847
src/com/android/settings/deviceinfo/Memory.java:533:                    .setMessage(R.string.dlg_error_usb_unmount_text)
#1848
#1849
src/com/android/settings/SecuritySettings.java:1048:                mSdEncryption.setTitle(R.string.sd_unencrypted_title);
src/com/android/settings/SecuritySettings.java:1058:                mSdEncryption.setTitle(R.string.sd_unencrypted_title);
src/com/android/settings/SecuritySettings.java:1063:                mSdEncryption.setTitle(R.string.sd_unencrypted_title);
res/xml/security_settings_sd_encryption.xml:17:        android:title="@string/sd_unencrypted_title"
AndroidManifest.xml:1770:                android:label="@string/sd_unencrypted_title"
#1850
#1851
#1852
#1853
#1854
src/com/android/settings/StorageAlertDialogActivity.java:261:                    .setMessage(R.string.dlg_success_unmount_text)
#1855
src/com/android/settings/StorageAlertDialogActivity.java:289:                    .setTitle(R.string.dlg_sd_cannot_unmount_for_mtp_ptp_title)
#1856
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:116:        mUsbMountTogglePreference.setSummary(R.string.usb_eject_summary);
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:172:            mUsbMountTogglePreference.setSummary(R.string.usb_eject_summary);
#1857
res/layout/sd_crypt_keeper_settings.xml:73:                android:text="@string/sd_crypt_encrypted_sd_inserted_text"
#1858
src/com/android/settings/StorageAlertDialogActivity.java:290:                    .setMessage(R.string.dlg_sd_cannot_unmount_for_mtp_ptp_text)
#1859
src/com/android/settings/EcryptfsCryptKeeper.java:430:                .setTitle(R.string.ecryptfs_keeper_sd_error_unmount_dialog_title)
#1860
#1861
src/com/android/settings/StorageFormatAlertDialogActivity.java:46:                .setMessage(R.string.dlg_error_format_text)
#1862
src/com/android/settings/deviceinfo/Memory.java:526:                    .setMessage(R.string.dlg_confirm_usb_unmount_text)
#1863
#1864
#1865
#1866
src/com/android/settings/EcryptfsCryptKeeper.java:275:            ((TextView) findViewById(R.id.title)).setText(R.string.ecryptfs_keeper_sd_unencrypt_succeeded_title);
#1867
src/com/android/settings/deviceinfo/Memory.java:775:                mSdSecureSettings.setSummary(R.string.sd_secure_settings_summary);
#1868
src/com/android/settings/EcryptfsCryptKeeper.java:190:            mTitleView.setText(R.string.ecryptfs_keeper_sd_encrypt_setup_title);
res/layout/ecryptfs_crypt_keeper_progress.xml:30:        android:text="@string/ecryptfs_keeper_sd_encrypt_setup_title"
#1869
src/com/android/settings/MasterClear.java:215:                        .setTitle(getResources().getString(R.string.dlg_sd_encrypted_title))
#1870
src/com/android/settings/deviceinfo/Memory.java:640:            sLastClickedMountToggle.setTitle(R.string.usb_ejecting_title);
#1871
src/com/android/settings/MediaFormat.java:206:                initiateText.setText(R.string.sd_media_format_desc);
#1872
res/layout/installed_app_details.xml:169:                    android:text="@string/sdcard_size_label"
#1873
#1874
#1875
src/com/android/settings/StorageAlertDialogActivity.java:240:                    .setTitle(R.string.dlg_sd_cannot_unmount_title)
src/com/android/settings/EcryptfsCryptKeeper.java:447:                .setTitle(R.string.dlg_sd_cannot_unmount_title)
#1876
#1877
src/com/android/settings/EcryptfsCryptKeeper.java:192:            mTitleView.setText(R.string.ecryptfs_keeper_sd_unencrypt_setup_title);
#1878
#1879
#1880
#1881
#1882
res/layout/sd_crypt_keeper_confirm.xml:34:            android:text="@string/sd_encrypt_keeper_final_desc"
#1883
src/com/android/settings/EcryptfsCryptKeeper.java:276:            ((TextView) findViewById(R.id.status)).setText(R.string.ecryptfs_keeper_sd_unencrypt_succeeded_summary);
#1884
src/com/android/settings/deviceinfo/Memory.java:634:        Toast.makeText(getActivity(), R.string.unmount_usb_inform_text, Toast.LENGTH_SHORT).show();
#1885
#1886
#1887
#1888
src/com/android/settings/EcryptfsCryptKeeper.java:431:                .setMessage(R.string.ecryptfs_keeper_sd_error_unmount_dialog_summary)
#1889
#1890
src/com/android/settings/deviceinfo/Memory.java:509:                    .setTitle(R.string.dlg_confirm_usb_unmount_title)
#1891
#1892
src/com/android/settings/deviceinfo/Memory.java:640:            sLastClickedMountToggle.setTitle(R.string.usb_ejecting_title);
src/com/android/settings/deviceinfo/Memory.java:641:            sLastClickedMountToggle.setSummary(R.string.usb_ejecting_summary);
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:115:        mUsbMountTogglePreference.setTitle(R.string.usb_eject);
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:116:        mUsbMountTogglePreference.setSummary(R.string.usb_eject_summary);
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:171:            mUsbMountTogglePreference.setTitle(R.string.usb_eject);
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:172:            mUsbMountTogglePreference.setSummary(R.string.usb_eject_summary);
#1893
src/com/android/settings/MediaFormat.java:203:                mInitiateButton.setText(R.string.sd_media_format_button_text);
#1894
#1895
src/com/android/settings/SdCryptKeeperSettings.java:202:            mInitiateButton.setText(R.string.sd_unencrypt_keeper_button_text);
src/com/android/settings/SdCryptKeeperConfirm.java:95:            mFinalButton.setText(R.string.sd_unencrypt_keeper_button_text);
#1896
src/com/android/settings/EcryptfsCryptKeeper.java:272:            ((TextView) findViewById(R.id.title)).setText(R.string.ecryptfs_keeper_sd_encrypt_succeeded_title);
#1897
#1898
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:182:            mUsbMountTogglePreference.setSummary(R.string.usb_mount_summary);
#1899
src/com/android/settings/EcryptfsCryptKeeper.java:413:                .setTitle(R.string.ecryptfs_keeper_sd_low_space_dialog_title)
#1900
#1901
#1902
src/com/android/settings/EcryptfsCryptKeeper.java:368:            status = getText(R.string.ecryptfs_keeper_sd_encrypt_setup_description);
#1903
#1904
#1905
src/com/android/settings/applications/InstalledAppDetails.java:513:            mExternalDataPrefix.setText(R.string.builtin_storage_data_size_label);
#1906
#1907
#1908
src/com/android/settings/SecuritySettings.java:1054:                mSdEncryption.setSummary(R.string.sd_encrypted_summary);
#1909
src/com/android/settings/SdCryptKeeperSettings.java:200:            mSdStateUnmatchWarning.setText(R.string.sd_crypt_unencrypted_sd_inserted_text);
#1910
src/com/android/settings/StorageAlertDialogActivity.java:196:                    .setTitle(R.string.dlg_notification_panel_confirm_unmount_title)
#1911
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:181:            mUsbMountTogglePreference.setTitle(R.string.usb_mount);
src/com/android/settings/deviceinfo/UsbStoragePreferenceCategory.java:182:            mUsbMountTogglePreference.setSummary(R.string.usb_mount_summary);
#1912
src/com/android/settings/MediaFormat.java:173:                initiateText.setText(R.string.sd_media_format_final_desc);
#1913
#1914
#1915
src/com/android/settings/deviceinfo/Memory.java:641:            sLastClickedMountToggle.setSummary(R.string.usb_ejecting_summary);
#1916
#1917
#1918
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:287:            mFormatPreference.setSummary(R.string.external_sd_format_summary);
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:446:            mFormatPreference.setSummary(R.string.external_sd_format_summary);
#1919
src/com/android/settings/SecuritySettings.java:1059:                mSdEncryption.setSummary(R.string.sd_unencrypted_summary);
res/xml/security_settings_sd_encryption.xml:18:        android:summary="@string/sd_unencrypted_summary"
#1920
src/com/android/settings/StorageAlertDialogActivity.java:241:                    .setMessage(R.string.dlg_sd_cannot_unmount_text)
src/com/android/settings/EcryptfsCryptKeeper.java:448:                .setMessage(R.string.dlg_sd_cannot_unmount_text)
#1921
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:286:            mFormatPreference.setTitle(R.string.external_sd_format);
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:287:            mFormatPreference.setSummary(R.string.external_sd_format_summary);
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:446:            mFormatPreference.setSummary(R.string.external_sd_format_summary);
#1922
#1923
src/com/android/settings/MasterClear.java:216:                        .setMessage(getResources().getString(R.string.dlg_sd_fj_encrypted_summary))
#1924
src/com/android/settings/EcryptfsCryptKeeper.java:371:            status = getText(R.string.ecryptfs_keeper_sd_unencrypt_setup_description);
#1925
#1926
#1927
src/com/android/settings/deviceinfo/Memory.java:531:                    .setTitle(R.string.dlg_error_usb_unmount_title)
#1928
src/com/android/settings/SecuritySettings.java:1053:                mSdEncryption.setTitle(R.string.sd_encrypted_title);
src/com/android/settings/MasterClear.java:227:                                preference.setTitle(R.string.sd_encrypted_title);
#1929
#1930
#1931
src/com/android/settings/EcryptfsCryptKeeper.java:414:                .setMessage(getString(R.string.ecryptfs_keeper_sd_low_space_dialog_summary, mLowMemorySize))
#1932
src/com/android/settings/SdCryptKeeperConfirm.java:94:            mFinalDescription.setText(R.string.sd_unencrypt_keeper_final_desc);
#1933
#1934
src/com/android/settings/SdCryptKeeperSettings.java:201:            mDescription.setText(R.string.sd_unencrypt_keeper_desc);
#1935
src/com/android/settings/SdCryptKeeperSettings.java:322:        int titleResourceId = R.string.sd_encrypt_keeper_confirm_title;
#1936
src/com/android/settings/EcryptfsCryptKeeper.java:273:            ((TextView) findViewById(R.id.status)).setText(R.string.ecryptfs_keeper_sd_encrypt_succeeded_summary);
#1937
#1938
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:418:                    mResources.getString(R.string.limit_sd_summary));
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:421:                mFormatPreference.setSummary(mResources.getString(R.string.limit_sd_summary));
src/com/android/settings/deviceinfo/Memory.java:766:                mSdSecureSettings.setSummary(R.string.limit_sd_summary);
#1939
src/com/android/settings/EcryptfsCryptKeeper.java:302:            ((TextView) findViewById(R.id.status)).setText(R.string.ecryptfs_keeper_sd_unencrypt_failed_summary);
#1940
#1941
src/com/android/settings/deviceinfo/Memory.java:775:                mSdSecureSettings.setSummary(R.string.sd_secure_settings_summary);
#1942
#1943
#1944
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:286:            mFormatPreference.setTitle(R.string.external_sd_format);
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:287:            mFormatPreference.setSummary(R.string.external_sd_format_summary);
src/com/android/settings/deviceinfo/StorageVolumePreferenceCategory.java:446:            mFormatPreference.setSummary(R.string.external_sd_format_summary);
#1945
src/com/android/settings/SecuritySettings.java:1049:                mSdEncryption.setSummary(R.string.sd_not_used_summary);
#1946
src/com/android/settings/wifi/WifiConfigController.java:1038:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_password_wep);
src/com/android/settings/wifi/WifiConfigController.java:1046:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_password_wep_hex);
#1947
src/com/android/settings/wifi/WifiConfigController.java:1050:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_ssid_and_password_wep_hex);
#1948
res/xml/accessibility_settings.xml:76:             android:summary="@string/glove_touch_settings_summary"
#1949
res/layout/tetheralert_dialog.xml:33:	        android:text="@string/tetheralert_text_line1"
#1950
res/xml/display_settings.xml:74:            android:summary="@string/notification_pulse_summary"
#1951
res/layout/tetheralert_dialog.xml:45:	        android:text="@string/tetheralert_text_line2"
#1952
src/com/android/settings/ConfirmLockGeneric.java:142:                    alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified_with_path_swip);
#1953
src/com/android/settings/ChooseLockSettingsHelper.java:232:            intent.putExtra(FOOTER_RIGHT_BUTTON, R.string.confirm_password_right_button);
#1954
res/xml/sound_settings.xml:63:        android:summary="@string/voip_clear_summary"
#1955
src/com/android/settings/nfc/NfcEnabler.java:238:                    mCheckbox.setSummary(R.string.nfc_charging_summary);
src/com/android/settings/nfc/NfcEnabler.java:240:                    mAndroidBeam.setSummary(R.string.nfc_charging_summary);
src/com/android/settings/nfc/NfcEnabler.java:290:                    mCheckbox.setSummary(R.string.nfc_charging_summary);
src/com/android/settings/nfc/NfcEnabler.java:292:                    mAndroidBeam.setSummary(R.string.nfc_charging_summary);
#1956
src/com/android/settings/wifi/WifiConfigController.java:710:                mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wep_hex));
src/com/android/settings/wifi/WifiConfigController.java:1148:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wep_hex));
#1957
src/com/android/settings/ConfirmLockGeneric.java:142:                    alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified_with_path_swip);
src/com/android/settings/ConfirmLockGeneric.java:144:                    alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified_with_path);
src/com/android/settings/ConfirmLockGeneric.java:147:                alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified_with_path);
#1958
res/values/fj_microphone_arrays.xml:20:        <item>@string/device_mic_item</item>
res/values-ja/fj_microphone_arrays.xml:20:        <item>@string/device_mic_item</item>
#1959
res/xml/sound_settings.xml:51:            android:summary="@string/STR_MICROPHONE_LP_SUMMARY" 
#1960
src/com/android/settings/wifi/WifiConfigController.java:1034:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_ssid);
src/com/android/settings/wifi/WifiConfigController.java:1042:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_ssid_and_password_wep);
src/com/android/settings/wifi/WifiConfigController.java:1050:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_ssid_and_password_wep_hex);
#1961
src/com/android/settings/wifi/WifiConfigController.java:1058:            String btnStr = mConfigUi.getContext().getString(R.string.wifi_setup_warning_ok);
#1962
src/com/android/settings/TetherAlertShowDialog.java:85:	        .setTitle(R.string.tether_tile_alert)
src/com/android/settings/TetherAlertShowDialog.java:175:        .setTitle(R.string.tether_tile_alert)
#1963
res/layout/alertviewer.xml:31:            android:text="@string/chkbox_dun_alert" />
#1964
src/com/android/settings/wifi/WifiConfigController.java:710:                mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wep_hex));
src/com/android/settings/wifi/WifiConfigController.java:713:                mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wep));
src/com/android/settings/wifi/WifiConfigController.java:1148:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wep_hex));
src/com/android/settings/wifi/WifiConfigController.java:1154:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wep));
#1965
src/com/android/settings/wifi/WifiConfigController.java:730:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wpa_hex));
src/com/android/settings/wifi/WifiConfigController.java:1166:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wpa_hex));
#1966
src/com/android/settings/wifi/WifiConfigController.java:1042:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_ssid_and_password_wep);
src/com/android/settings/wifi/WifiConfigController.java:1050:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_ssid_and_password_wep_hex);
#1967
res/xml/sound_settings.xml:62:        android:title="@string/voip_clear_title"
#1968
src/com/android/settings/CryptKeeperSettings.java:112:                    .setMessage(R.string.crypt_keeper_dialog_need_password_message_1)
#1969
res/layout/wifi_dialog.xml:174:                    android:text="@string/wifi_input_password_hex" />
res/layout/wifi_dialog.xml:216:                    android:text="@string/wifi_input_password_hex" />
res/layout-sw600dp/wifi_dialog.xml:179:                    android:text="@string/wifi_input_password_hex" />
res/layout-sw600dp/wifi_dialog.xml:234:                    android:text="@string/wifi_input_password_hex" />
#1970
src/com/android/settings/ConfirmLockGeneric.java:137:                alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified);
src/com/android/settings/ConfirmLockGeneric.java:142:                    alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified_with_path_swip);
src/com/android/settings/ConfirmLockGeneric.java:144:                    alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified_with_path);
src/com/android/settings/ConfirmLockGeneric.java:147:                alertDialogBuilder.setMessage(R.string.security_authentication_password_unspecified_with_path);
#1971
src/com/android/settings/wifi/WifiConfigController.java:730:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wpa_hex));
src/com/android/settings/wifi/WifiConfigController.java:733:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wpa));
src/com/android/settings/wifi/WifiConfigController.java:1166:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wpa_hex));
src/com/android/settings/wifi/WifiConfigController.java:1172:                    mPasswordHint.setText(mConfigUi.getContext().getString(R.string.credentials_password_wpa));
#1972
res/layout/tetheralert_dialog.xml:56:	        android:text="@string/tetheralert_linktext"
#1973
res/xml/accessibility_settings.xml:75:             android:title="@string/glove_touch_settings_title" 
#1974
src/com/android/settings/wifi/WifiConfigController.java:1046:                text = mConfigUi.getContext().getString(R.string.wifi_setup_warning_password_wep_hex);
#1975
res/xml/security_settings_fingerpassword.xml:36:            android:title="@string/STR_DVLK_001_006"
#1976
res/xml/security_settings_fingerpassword.xml:37:            android:summary="@string/STR_DVLK_001_007"/>
#1977
res/xml/security_settings_fingerpin.xml:50:            android:title="@string/STR_DVLK_001_004"
#1978
res/xml/security_settings_fingerpin.xml:51:            android:summary="@string/STR_DVLK_001_005"/>
#1979
#1980
res/xml/security_settings_fingerpicker.xml:84:            android:title="@string/unlock_set_unlock_finger_title"
res/layout/confirm_lock_password.xml:99:            android:text="@string/unlock_set_unlock_finger_title"
res/layout/confirm_lock_password.xml:114:            android:text="@string/unlock_set_unlock_finger_title"
res/layout/confirm_lock_password.xml:145:                android:text="@string/unlock_set_unlock_finger_title"
res/layout/confirm_lock_pattern.xml:64:            android:text="@string/unlock_set_unlock_finger_title"
res/layout/confirm_lock_pattern.xml:98:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-land/confirm_lock_password.xml:94:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-land/confirm_lock_password.xml:109:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-land/confirm_lock_password.xml:140:                android:text="@string/unlock_set_unlock_finger_title"
res/layout-land/confirm_lock_password.xml:226:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-land/confirm_lock_pattern.xml:52:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-land/confirm_lock_pattern.xml:127:                    android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp-land/confirm_lock_password.xml:86:                android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp-land/confirm_lock_password.xml:112:                android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp-land/confirm_lock_password.xml:125:                android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp-land/confirm_lock_pattern.xml:78:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp-land/confirm_lock_pattern.xml:116:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp/confirm_lock_password.xml:89:        android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp/confirm_lock_password.xml:115:                android:text="@string/unlock_set_unlock_finger_title"/>
res/layout-sw600dp/confirm_lock_password.xml:127:                android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp/confirm_lock_pattern.xml:81:            android:text="@string/unlock_set_unlock_finger_title"
res/layout-sw600dp/confirm_lock_pattern.xml:101:            android:text="@string/unlock_set_unlock_finger_title"
#1981
src/com/android/settings/SecuritySettings.java:285:                        summaryId = R.string.current_method_finger_security_code;
#1982
src/com/android/settings/SelectFingerBackup.java:237:            mNone = res.getString(R.string.select_finger_backup_none);
res/layout/select_finger_backup.xml:20:        android:text="@string/select_finger_backup_title"
res/layout/select_finger_backup.xml:27:        android:text="@string/select_finger_backup"
AndroidManifest.xml:1180:            android:label="@string/select_finger_backup_title">
#1983
#1984
src/com/android/settings/SelectFingerBackup.java:369:                        .setMessage(res.getString(R.string.finger_setup_complete))
#1985
src/com/android/settings/SecuritySettings.java:277:                        summaryId = R.string.current_method_finger_pattern;
#1986
src/com/android/settings/SelectFingerBackup.java:322:                        .setTitle(res.getString(R.string.select_finger_only_title))
#1987
src/com/android/settings/SelectFingerBackup.java:337:                        .setNegativeButton(res.getString(R.string.accessibility_tutorial_back),
#1988
src/com/android/settings/SelectFingerBackup.java:397:                    mDialog.setTitle(res.getString(R.string.finger_security_code_title));
#1989
res/xml/security_settings_fingerpin.xml:43:            android:summary="@string/current_security_authentication_securitycode"
#1990
src/com/android/settings/SelectFingerBackup.java:399:                    mDialog.setTitle(res.getString(R.string.finger_password_title));
#1991
src/com/android/settings/SecuritySettings.java:955:                .setTitle(getResources().getString(R.string.unlock_method_title))
res/xml/security_settings_finger.xml:26:            android:title="@string/unlock_method_title"
#1992
res/layout/select_finger_backup.xml:20:        android:text="@string/select_finger_backup_title"
AndroidManifest.xml:1180:            android:label="@string/select_finger_backup_title">
#1993
#1994
src/com/android/settings/SelectFingerBackup.java:395:                    mDialog.setTitle(res.getString(R.string.finger_pattern_title));
#1995
res/xml/device_info_settings.xml:38:                android:summary="@string/software_update_summary">
#1996
src/com/android/settings/ChooseLockGeneric.java:264:                getActivity().setTitle(R.string.security_authentication_label);
res/xml/security_settings_fingerpassword.xml:28:            android:title="@string/security_authentication_label"
res/xml/security_settings_fingerpin.xml:42:            android:title="@string/security_authentication_label"
res/xml/security_settings_fingerpattern.xml:42:            android:title="@string/security_authentication_label"
#1997
src/com/android/settings/ChooseLockGeneric.java:302:                    .setMessage(getResources().getString(R.string.finger_sensor_message))
src/com/android/settings/SecuritySettings.java:887:                        .setMessage(getResources().getString(R.string.finger_sensor_message))
#1998
res/xml/security_settings_lockscreen.xml:32:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_biometric_weak.xml:31:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_password.xml:32:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_pin.xml:32:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_finger.xml:33:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_pattern.xml:33:            android:title="@string/change_fingerprint_title"
res/xml/security_settings_pattern.xml:44:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_chooser.xml:31:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_fingerpassword.xml:43:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_fingerpin.xml:57:            android:title="@string/change_fingerprint_title"/>
res/xml/security_settings_fingerpattern.xml:56:            android:title="@string/change_fingerprint_title"/>
#1999
#2000
res/xml/device_info_settings.xml:37:                android:title="@string/software_update"
res/xml/device_info_settings.xml:38:                android:summary="@string/software_update_summary">
#2001
src/com/android/settings/SelectFingerBackup.java:401:                    mDialog.setTitle(res.getString(R.string.finger_only_title));
#2002
src/com/android/settings/SecuritySettings.java:295:                        summaryId = R.string.current_method_finger_password;
#2003
res/xml/security_settings_fingerpassword.xml:29:            android:summary="@string/current_security_authentication_password"
#2004
res/xml/security_settings_fingerpattern.xml:43:            android:summary="@string/current_security_authentication_pattern"
#2005
src/com/android/settings/ConfirmLockGeneric.java:134:            alertDialogBuilder.setTitle(R.string.security_authentication_title);
res/xml/security_settings_fingerpassword.xml:24:        android:title="@string/security_authentication_title">
res/xml/security_settings_fingerpin.xml:38:        android:title="@string/security_authentication_title">
res/xml/security_settings_fingerpattern.xml:38:        android:title="@string/security_authentication_title">
#2006
src/com/android/settings/SecuritySettings.java:277:                        summaryId = R.string.current_method_finger_pattern;
src/com/android/settings/SecuritySettings.java:285:                        summaryId = R.string.current_method_finger_security_code;
src/com/android/settings/SecuritySettings.java:295:                        summaryId = R.string.current_method_finger_password;
res/xml/security_settings_finger.xml:27:            android:summary="@string/current_method_finger"
#2007
src/com/android/settings/SecuritySettings.java:258://                    pref.setSummary(R.string.current_security_authentication_none);
src/com/android/settings/SecuritySettings.java:260://                    pref.setSummary(R.string.current_security_authentication_none_swipe);
src/com/android/settings/SecuritySettings.java:262://                    pref.setSummary(R.string.current_security_authentication_none_swipe);
#2008
#2009
#2010
#2011
#2012
#2013
#2014
#2015
#2016
#2017
#2018
#2019
#2020
src/com/android/settings/ChooseLockFinger.java:144://            mStartEnrollmentWizard.setTitle(R.string.lockfinger_change_finger_unlock_title);
#2021
#2022
src/com/android/settings/SecuritySettings.java:956:                .setMessage(getResources().getString(R.string.finger_method_dialog))
#2023
#2024
#2025
#2026
#2027
src/com/android/settings/SelectFingerBackup.java:237:            mNone = res.getString(R.string.select_finger_backup_none);
#2028
#2029
#2030
#2031
#2032
#2033
#2034
#2035
#2036
src/com/android/settings/SelectFingerBackup.java:323:                        .setMessage(res.getString(R.string.select_finger_only_message))
src/com/android/settings/SelectFingerBackup.java:358:                    mDialog.setMessage(res.getString(R.string.select_finger_only_message_k));
src/com/android/settings/SelectFingerBackup.java:360:                    mDialog.setMessage(res.getString(R.string.select_finger_only_message_s));
#2037
src/com/android/settings/IccLockSettings.java:496:            String displayMsg = s + mRes.getString(R.string.sim_pin_attempts) + attempts;
#2038
src/com/android/settings/IccLockSettings.java:431:                Toast.makeText(this, mRes.getString(R.string.sim_pin_disabled),
#2039
src/com/android/settings/tts/TtsEnginePreference.java:206:        builder.setPositiveButton(android.R.string.ok, positiveOnClickListener);
src/com/android/settings/tts/TextToSpeechSettings.java:473:        builder.setPositiveButton(android.R.string.ok, null);
src/com/android/settings/SettingsSafetyLegalActivity.java:93:                    .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/inputmethod/InputMethodAndSubtypeEnabler.java:171:                            .setPositiveButton(android.R.string.ok,
src/com/android/settings/inputmethod/InputMethodPreference.java:272:                .setPositiveButton(android.R.string.ok,
src/com/android/settings/inputmethod/SpellCheckersSettings.java:127:                .setPositiveButton(android.R.string.ok,
src/com/android/settings/Settings.java:831:                    .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/deviceinfo/Memory.java:735:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/ApnEditor.java:807:                    .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/RingerVolumePreference.java:115:        setPositiveButtonText(android.R.string.ok);
src/com/android/settings/SdCryptKeeperSettings.java:160:                    .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/TrustedCredentialsSettings.java:380:        builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/users/RestrictedProfileSettings.java:208:                .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/users/UserSettings.java:445:                    .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/users/UserSettings.java:460:                    .setPositiveButton(android.R.string.ok,
src/com/android/settings/users/UserSettings.java:491:                    .setPositiveButton(android.R.string.ok,
src/com/android/settings/vpn2/VpnSettings.java:585:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/Utils.java:638:        builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/CryptKeeperSettings.java:114:                    .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/ChooseLockPattern.java:225:            Ok(android.R.string.ok, true);
src/com/android/settings/EcryptfsCryptKeeper.java:261:        button.setText(android.R.string.ok);
src/com/android/settings/EcryptfsCryptKeeper.java:287:        button.setText(android.R.string.ok);
src/com/android/settings/ConfirmLockGeneric.java:152:            alertDialogBuilder.setPositiveButton(android.R.string.ok, null);
src/com/android/settings/accounts/AccountSyncSettings.java:147:                .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/accounts/AccountSyncSettings.java:154:                .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/accessibility/AccessibilitySettings.java:643:                        .setPositiveButton(android.R.string.ok,
src/com/android/settings/accessibility/ToggleAccessibilityServicePreferenceFragment.java:168:                    .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/accessibility/ToggleAccessibilityServicePreferenceFragment.java:185:                    .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/WirelessSettings.java:241:                            .setPositiveButton(com.android.internal.R.string.ok,
src/com/android/settings/BandMode.java:179:            .setPositiveButton(android.R.string.ok, null).show();
src/com/android/settings/CredentialStorage.java:305:                    .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/CredentialStorage.java:375:                    .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/CredentialStorage.java:489:                    .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/PrivacySettings.java:160:                .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/bluetooth/DockService.java:551:        ab.setPositiveButton(getString(android.R.string.ok), mClickListener);
src/com/android/settings/bluetooth/Utils.java:62:                    .setPositiveButton(android.R.string.ok, disconnectListener)
src/com/android/settings/bluetooth/Utils.java:70:            CharSequence okText = context.getText(android.R.string.ok);
src/com/android/settings/bluetooth/Utils.java:99:                .setPositiveButton(android.R.string.ok, null)
src/com/android/settings/bluetooth/BluetoothPairingDialog.java:184:        p.mPositiveButtonText = getString(android.R.string.ok);
src/com/android/settings/NotificationAccessSettings.java:110:                    .setPositiveButton(android.R.string.ok,
src/com/android/settings/SoundSettings.java:663:        ab.setPositiveButton(android.R.string.ok, null);
src/com/android/settings/DevelopmentSettings.java:1205:                        .setPositiveButton(android.R.string.ok, this)
src/com/android/settings/DataUsageSummary.java:1776:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/DataUsageSummary.java:1993:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/DataUsageSummary.java:2034:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/DataUsageSummary.java:2074:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/DataUsageSummary.java:2110:            builder.setPositiveButton(android.R.string.ok, null);
src/com/android/settings/DataUsageSummary.java:2137:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/DataUsageSummary.java:2184:            builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
src/com/android/settings/TetherAlertShowDialog.java:88:	        .setPositiveButton(android.R.string.ok, mListener)
src/com/android/settings/TetherAlertShowDialog.java:109:	        .setPositiveButton(android.R.string.ok, mListener)
src/com/android/settings/TetherAlertShowDialog.java:178:        .setPositiveButton(R.string.ok, mListener)
src/com/android/settings/print/PrintServiceSettingsFragment.java:198:                .setPositiveButton(android.R.string.ok, this)
#2040
src/com/android/settings/IccLockSettings.java:404:                    id = R.string.sim_enable_disable_lock_not_supported;
#2041
src/com/android/settings/IccLockSettings.java:428:                Toast.makeText(this, mRes.getString(R.string.sim_pin_enabled),
#2042
src/com/android/settings/IccLockSettings.java:414:                         displayRetryCounter(mRes.getString(R.string.sim_pin_disable_failed));
#2043
src/com/android/settings/IccLockSettings.java:406:                    id = R.string.sim_pin_change_failed_enable_sim_lock;
#2044
src/com/android/settings/IccLockSettings.java:412:                         displayRetryCounter(mRes.getString(R.string.sim_pin_enable_failed));
#2045
#2046
#2047
src/com/android/soundrecorder/SoundRecorder.java:989:                message = res.getString(R.string.error_app_unsupported);
#2048
#2049
#2050
src/com/android/systemui/power/PowerUI.java:418:            b.setMessage(R.string.otg_restriction);
src/com/android/systemui/power/PowerUI.java:420:            b.setMessage(R.string.otg_restriction_novelty);
#2051
res/layout/lowbattery.xml:26:    android:text="@string/STR_LOWB_001_001"
#2052
src/com/android/systemui/power/LowBattery.java:248:            tv.setText(R.string.STR_HEAT_Shotdown_004);
#2053
src/com/android/systemui/power/PowerUI.java:420:            b.setMessage(R.string.otg_restriction_novelty);
#2054
#2055
res/layout/status_bar_recent_panel.xml:88:                android:text="@string/apps_alldelete"
res/layout-land/status_bar_recent_panel.xml:86:                android:text="@string/apps_alldelete"
#2056
src/com/android/systemui/power/PowerUI.java:630:        b.setMessage(R.string.shutdown_for_high_temperature);
#2057
src/com/android/phone/NetworkSetting.java:613:                    dialog.setMessage(getResources().getString(R.string.deactivate_networks_progress));
#2058
src/com/android/phone/NetworkSetting.java:981:        builder.setTitle(getResources().getString(R.string.STR_MBNW_002_004));
#2059
src/com/android/phone/NetworkSetting.java:982:        builder.setMessage(getResources().getString(R.string.STR_MBNW_002_005));
#2060
#2061
src/com/android/phone/MobileNetworkSettings.java:928:                        R.string.preferred_network_mode_gsm_only_summary);
src/com/android/phone/msim/MSimMobileNetworkSubSettings.java:450:                        R.string.preferred_network_mode_gsm_only_summary);
#2062
#2063
res/layout/sim_ndp.xml:70:                android:text="@string/sim_ndp_dismiss_text"
#2064
src/com/android/phone/NetworkSetting.java:684:            status = getResources().getString(R.string.not_allowed);
#2065
src/com/android/phone/NetworkSetting.java:827:                        carrier.setSummary(R.string.network_list_summary_forbidden);
#2066
src/com/android/phone/NetworkSetting.java:686:            status = getResources().getString(R.string.connect_later);
#2067
src/com/android/phone/CallMemoList.java:263:            menu.add(0, CONTEXT_ITEM_ID_CALL, 0, getResources().getString(R.string.recentCalls_callNumber, dispDialNumber))
src/com/android/phone/VoiceMemoList.java:184:                    getResources().getString(R.string.recentCalls_callNumber,
#2068
src/com/android/phone/NotificationMgr.java:1032:                R.string.notification_network_selection_changed_title);
#2069
src/com/android/phone/NotificationMgr.java:1034:                R.string.notification_network_selection_changed_text, networkSelectionOld, networkSelectionNew);
#2070
src/com/android/phone/NetworkSetting.java:825:                        carrier.setSummary(R.string.network_list_summary_available);
#2071
src/com/android/phone/NetworkSetting.java:606:                    dialog.setMessage(getResources().getString(R.string.network_select_ng_msg));
#2072
#2073
#2074
src/com/android/phone/NetworkSetting.java:413:        String status = getResources().getString(R.string.network_query_cancel);
#2075
#2076
src/com/fujitsu/TemperatureDialog/TemperatureDialog.java:137:        alertDialogBuilder.setMessage(getString(R.string.camera_temperature_start_limit));
#2077
src/com/fujitsu/TemperatureDialog/TemperatureShutdownDialog.java:50:        alertDialogBuilder.setMessage(R.string.high_temperature);
#2078
src/com/fujitsu/TemperatureDialog/TemperatureDialog.java:138:        alertDialogBuilder.setPositiveButton(R.string.dialod_button,
#2079
src/com/fujitsu/TemperatureDialog/TemperatureDialog.java:136:        alertDialogBuilder.setTitle(getString(R.string.camera_temperature_title));
#2080
AndroidManifest.xml:21:                 android:label="@string/app_name">
AndroidManifest.xml:23:                  android:label="@string/app_name"
AndroidManifest.xml:35:                  android:label="@string/app_name"
#2081
src/com/android/mail/browse/MessageAttachmentBar.java:282:                    Utility.showToast(mContext, R.string.message_view_display_attachment_toast);
#2082
res/layout/actionbar_set_wallpaper.xml:33:        android:text="@string/wallpaper_instructions" />
#2083
src/com/android/wallpapercropper/WallpaperCropActivity.java:133:                            getString(R.string.wallpaper_load_fail),
#2084
AndroidManifest.xml:10:            android:label="@string/crop_wallpaper"
#2085
res/layout/startupwizard_welcome.xml:140:                android:text="@string/blank"
#2086
res/layout/startupwizard_welcome.xml:69:                android:text="@string/welcome_o"
#2087
#2088
res/layout/startupwizard_welcome.xml:78:                android:text="@string/welcome_m"
#2089
res/layout/startupwizard_welcome.xml:33:                android:text="@string/welcome_w"
#2090
res/layout/startupwizard_welcome.xml:96:                android:text="@string/welcome_exclamation"
#2091
res/layout/startupwizard_welcome.xml:60:                android:text="@string/welcome_c"
#2092
res/layout/startupwizard_welcome.xml:121:            android:text="@string/thanks"
#2093
src/com/fujitsu/mobile_phone/WelcomeHome/WelcomeHomeActivity.java:133:                                    R.string.data_state_check_msg);
#2094
res/layout/startupwizard_welcome.xml:51:                android:text="@string/welcome_l"
#2095
src/com/fujitsu/mobile_phone/WelcomeHome/WelcomeHomeActivity.java:132:                            showProgressDialog(R.string.data_state_check_title,
#2096
AndroidManifest.xml:27:        android:label="@string/app_main_name"
AndroidManifest.xml:31:                  android:label="@string/app_main_name"
#2097
res/layout/startupwizard_welcome.xml:33:                android:text="@string/welcome_w"
res/layout/startupwizard_welcome.xml:42:                android:text="@string/welcome_e"
res/layout/startupwizard_welcome.xml:51:                android:text="@string/welcome_l"
res/layout/startupwizard_welcome.xml:60:                android:text="@string/welcome_c"
res/layout/startupwizard_welcome.xml:69:                android:text="@string/welcome_o"
res/layout/startupwizard_welcome.xml:78:                android:text="@string/welcome_m"
res/layout/startupwizard_welcome.xml:87:                android:text="@string/welcome_e"
res/layout/startupwizard_welcome.xml:96:                android:text="@string/welcome_exclamation"
#2098
res/layout/startupwizard_welcome.xml:42:                android:text="@string/welcome_e"
res/layout/startupwizard_welcome.xml:87:                android:text="@string/welcome_e"
res/layout/startupwizard_welcome.xml:96:                android:text="@string/welcome_exclamation"
#2099
src/com/android/contacts/common/util/AccountSelectionUtil.java:176:            case R.string.import_from_sim: {
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:135:            adapter.add(R.string.import_from_sim);
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:161:                    case R.string.import_from_sim:
#2100
#2101
src/com/android/contacts/common/util/ContactDisplayUtils.java:153:                return R.string.sms_fax_home;
#2102
#2103
src/com/android/contacts/common/util/AccountFilterUtil.java:81:                    headerTextView.setText(R.string.listCustomView);
src/com/android/contacts/common/util/AccountFilterUtil.java:97:                    headerTextView.setText(R.string.listCustomView);
#2104
src/com/android/contacts/common/vcard/CancelActivity.java:102:                    .setTitle(R.string.cancel_vcard_import_or_export_failed)
#2105
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:140:                mContext.getString(R.string.vcard_import_request_rejected_message)).sendToTarget();
#2106
src/com/android/contacts/common/vcard/ImportVCardActivity.java:375:                        getString(R.string.fail_reason_low_memory_during_import)));
#2107
src/com/android/contacts/common/util/ContactDisplayUtils.java:169:                return R.string.sms_other_fax;
#2108
src/com/android/contacts/common/ContactStatusUtil.java:34:                return resources.getString(R.string.status_available);
#2109
#2110
src/com/android/contacts/common/dialog/ClearFrequentsDialog.java:68:            .setTitle(R.string.clearFrequentsConfirmation_title)
src/com/android/contacts/common/dialog/ClearFrequentsDialog.java:69:            .setMessage(R.string.clearFrequentsConfirmation)
#2111
src/com/android/contacts/common/model/account/BaseAccountType.java:622:                case Im.PROTOCOL_YAHOO: return R.string.chat_yahoo;
#2112
src/com/android/contacts/common/util/ContactDisplayUtils.java:124:                return R.string.call_work_pager;
#2113
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:343:                    return context.getText(R.string.display_all_contacts);
#2114
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:69:        CharSequence expected = getContext().getResources().getText(R.string.sms_home);
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:92:        assertEquals(R.string.sms_home, ContactDisplayUtils.getSmsLabelResourceId(Phone.TYPE_HOME));
src/com/android/contacts/common/util/ContactDisplayUtils.java:145:                return R.string.sms_home;
#2115
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:786:                    R.string.display_warn_remove_ungrouped, title);
#2116
src/com/android/contacts/common/vcard/ExportProcessor.java:252:            return resources.getString(R.string.composer_not_initialized);
#2117
src/com/android/contacts/common/model/account/GoogleAccountType.java:154:                    R.string.eventLabelsGroup, 150, true));
src/com/android/contacts/common/model/account/GoogleAccountType.java:172:        kind.fieldList.add(new EditField(Event.DATA, R.string.eventLabelsGroup, FLAGS_EVENT));
src/com/android/contacts/common/model/account/BaseAccountType.java:1381:                    Event.CONTENT_ITEM_TYPE, Event.TYPE, R.string.eventLabelsGroup, Weight.EVENT,
src/com/android/contacts/common/model/account/BaseAccountType.java:1384:            kind.fieldList.add(new EditField(Event.DATA, R.string.eventLabelsGroup, FLAGS_EVENT));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:307:        DataKind kind = addKind(new DataKind(Event.CONTENT_ITEM_TYPE, R.string.eventLabelsGroup,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:321:        kind.fieldList.add(new EditField(Event.DATA, R.string.eventLabelsGroup, FLAGS_EVENT));
#2118
src/com/android/contacts/common/vcard/SelectAccountActivity.java:59:        final int resId = R.string.import_from_sdcard;
src/com/android/contacts/common/vcard/SelectAccountActivity.java:102:            case R.string.import_from_sdcard: {
src/com/android/contacts/common/vcard/ImportVCardActivity.java:906:            case R.string.import_from_sdcard: {
src/com/android/contacts/common/util/AccountSelectionUtil.java:186:            case R.string.import_from_sdcard: {
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:140:            adapter.add(R.string.import_from_sdcard);
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:163:                    case R.string.import_from_sdcard: {
#2119
src/com/android/contacts/common/model/account/BaseAccountType.java:165:        kind.fieldList.add(new EditField(StructuredName.GIVEN_NAME, R.string.name_given,
src/com/android/contacts/common/model/account/BaseAccountType.java:200:            kind.fieldList.add(new EditField(StructuredName.GIVEN_NAME, R.string.name_given,
src/com/android/contacts/common/model/account/BaseAccountType.java:207:            kind.fieldList.add(new EditField(StructuredName.GIVEN_NAME, R.string.name_given,
src/com/android/contacts/common/model/account/BaseAccountType.java:921:            ks.fieldList.add(new EditField(StructuredName.GIVEN_NAME, R.string.name_given,
src/com/android/contacts/common/model/account/BaseAccountType.java:951:                kd.fieldList.add(new EditField(StructuredName.GIVEN_NAME, R.string.name_given,
src/com/android/contacts/common/model/account/BaseAccountType.java:958:                kd.fieldList.add(new EditField(StructuredName.GIVEN_NAME, R.string.name_given,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:95:                R.string.name_given, FLAGS_PERSON_NAME));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:125:                    R.string.name_given, FLAGS_PERSON_NAME));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:128:                    R.string.name_given, FLAGS_PERSON_NAME));
#2120
src/com/android/contacts/common/util/ContactDisplayUtils.java:110:                return R.string.call_isdn;
#2121
src/com/android/contacts/common/util/ContactDisplayUtils.java:151:                return R.string.sms_fax_work;
#2122
src/com/android/contacts/common/model/account/BaseAccountType.java:170:                R.string.name_phonetic_family, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:231:                R.string.name_phonetic_family, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:926:                    R.string.name_phonetic_family, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:981:                    R.string.name_phonetic_family, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:100:                R.string.name_phonetic_family, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:151:                R.string.name_phonetic_family, FLAGS_PHONETIC));
#2123
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:74:        expected = getContext().getResources().getText(R.string.sms_mobile);
src/com/android/contacts/common/util/ContactDisplayUtils.java:147:                return R.string.sms_mobile;
#2124
src/com/android/contacts/common/util/ContactDisplayUtils.java:179:                return R.string.sms_work_pager;
#2125
src/com/android/contacts/common/vcard/ImportVCardActivity.java:785:                .setTitle(R.string.select_vcard_title)
src/com/android/contacts/common/vcard/ImportVCardActivity.java:806:                        .setTitle(R.string.select_vcard_title)
#2126
src/com/android/contacts/common/ClipboardUtils.java:48:            String toastText = context.getString(R.string.toast_text_copied);
#2127
src/com/android/contacts/common/vcard/ImportVCardActivity.java:289:                        showFailureNotification(R.string.fail_reason_not_supported);
src/com/android/contacts/common/vcard/ImportVCardActivity.java:352:                            showFailureNotification(R.string.fail_reason_not_supported);
src/com/android/contacts/common/vcard/NfcImportVCardActivity.java:163:            //setStatus(getString(R.string.fail_reason_not_supported));
#2128
src/com/android/contacts/common/vcard/ImportVCardActivity.java:792:                getString(R.string.import_one_vcard_string);
#2129
src/com/android/contacts/common/vcard/CancelActivity.java:89:                message = getString(R.string.cancel_import_confirmation_message, mDisplayName);
#2130
#2131
src/com/android/contacts/common/util/ContactDisplayUtils.java:106:                return R.string.call_car;
#2132
#2133
src/com/android/contacts/common/util/DataStatus.java:121:                    R.string.contact_status_update_attribution_with_date,
src/com/android/contacts/common/util/DataStatus.java:125:                    R.string.contact_status_update_attribution,
#2134
src/com/android/contacts/common/vcard/ImportVCardActivity.java:951:                    final String title = getString(R.string.caching_vcard_title);
#2135
src/com/android/contacts/common/vcard/ExportVCardActivity.java:241:                        .setTitle(R.string.exporting_contact_failed_title)
src/com/android/contacts/common/vcard/ExportVCardActivity.java:250:                        .setTitle(R.string.exporting_contact_failed_title)
#2136
src/com/android/contacts/common/vcard/ExportProcessor.java:175:                        mService.getString(R.string.fail_reason_no_exportable_contact);
#2137
src/com/android/contacts/common/model/account/FallbackAccountType.java:32:        this.titleRes = R.string.account_phone;
src/com/android/contacts/common/model/account/BaseAccountType.java:121:        this.titleRes = R.string.account_phone;
#2138
src/com/android/contacts/common/util/AccountFilterUtil.java:100:                    headerTextView.setText(R.string.listSingleContact);
#2139
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:116:        final String description = mContext.getString(R.string.importing_vcard_finished_title,
#2140
src/com/android/contacts/common/vcard/VCardService.java:557:        mErrorReason = getString(R.string.fail_reason_too_many_vcard);
src/com/android/contacts/common/vcard/ExportVCardActivity.java:238:            case R.string.fail_reason_too_many_vcard: {
src/com/android/contacts/common/vcard/ExportVCardActivity.java:243:                                getString(R.string.fail_reason_too_many_vcard)))
#2141
src/com/android/contacts/common/util/ContactDisplayUtils.java:122:                return R.string.call_work_mobile;
#2142
src/com/android/contacts/common/vcard/ImportVCardActivity.java:916:                    String message = getString(R.string.searching_vcard_message);
#2143
src/com/android/contacts/common/model/account/BaseAccountType.java:330:                new EditField(StructuredPostal.FORMATTED_ADDRESS, R.string.postal_address,
src/com/android/contacts/common/model/account/BaseAccountType.java:1153:                        new EditField(StructuredPostal.FORMATTED_ADDRESS, R.string.postal_address,
#2144
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:145:        final String description = mContext.getString(R.string.importing_vcard_canceled_title,
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:175:                mContext.getString(R.string.importing_vcard_canceled_title, request.displayName) :
#2145
src/com/android/contacts/common/model/account/BaseAccountType.java:1130:                            R.string.postal_postcode, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/BaseAccountType.java:1146:                            R.string.postal_postcode, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:230:                    R.string.postal_postcode, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:245:                    R.string.postal_postcode, FLAGS_POSTAL));
#2146
src/com/android/contacts/common/model/account/BaseAccountType.java:437:                R.string.groupsLabel, 999, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:1354:                    R.string.groupsLabel, Weight.GROUP_MEMBERSHIP, null, null);
#2147
src/com/android/contacts/common/model/account/BaseAccountType.java:242:                    R.string.nicknameLabelsGroup, 115, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:244:        kind.actionHeader = new SimpleInflater(R.string.nicknameLabelsGroup);
src/com/android/contacts/common/model/account/BaseAccountType.java:250:        kind.fieldList.add(new EditField(Nickname.NAME, R.string.nicknameLabelsGroup,
src/com/android/contacts/common/model/account/BaseAccountType.java:1001:                    Nickname.CONTENT_ITEM_TYPE, null, R.string.nicknameLabelsGroup, Weight.NICKNAME,
src/com/android/contacts/common/model/account/BaseAccountType.java:1002:                    new SimpleInflater(R.string.nicknameLabelsGroup),
src/com/android/contacts/common/model/account/BaseAccountType.java:1005:            kind.fieldList.add(new EditField(Nickname.NAME, R.string.nicknameLabelsGroup,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:165:        kind.fieldList.add(new EditField(Nickname.NAME, R.string.nicknameLabelsGroup,
#2148
src/com/android/contacts/common/model/account/BaseAccountType.java:371:                    R.string.organizationLabelsGroup, 5, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:1230:                    Organization.CONTENT_ITEM_TYPE, null, R.string.organizationLabelsGroup,
#2149
src/com/android/contacts/common/util/ContactDisplayUtils.java:159:                return R.string.sms_callback;
#2150
src/com/android/contacts/common/util/ContactDisplayUtils.java:128:                return R.string.call_mms;
#2151
src/com/android/contacts/common/list/ContactListFilterView.java:112:                bindView(0, R.string.list_filter_single);
#2152
#2153
src/com/android/contacts/common/model/account/BaseAccountType.java:174:                R.string.name_phonetic_given, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:235:                R.string.name_phonetic_given, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:930:                    R.string.name_phonetic_given, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:985:                    R.string.name_phonetic_given, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:102:                R.string.name_phonetic_given, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:153:                R.string.name_phonetic_given, FLAGS_PHONETIC));
#2154
src/com/android/contacts/common/model/account/AccountType.java:265:                ? context.getText(R.string.view_updates_from_group)
#2155
src/com/android/contacts/common/model/account/BaseAccountType.java:1134:                            R.string.postal_city,FLAGS_POSTAL));
src/com/android/contacts/common/model/account/BaseAccountType.java:1142:                            R.string.postal_city,FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:234:                    R.string.postal_city,FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:241:                    R.string.postal_city,FLAGS_POSTAL));
#2156
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:72:            message = mContext.getString(R.string.vcard_import_will_start_message, displayName);
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:76:                    R.string.vcard_import_will_start_message_with_default_name);
#2157
src/com/android/contacts/common/vcard/ExportVCardActivity.java:231:                        .setMessage(getString(R.string.confirm_export_message, mTargetFileName))
src/com/android/contacts/common/vcard/ExportVCardActivity.java:275:                    getString(R.string.confirm_export_message, mTargetFileName));
#2158
src/com/android/contacts/common/util/ContactDisplayUtils.java:183:                return R.string.sms_mms;
#2159
src/com/android/contacts/common/model/account/BaseAccountType.java:1136:                            R.string.postal_street, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/BaseAccountType.java:1140:                            R.string.postal_street, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:236:                    R.string.postal_street, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:239:                    R.string.postal_street, FLAGS_POSTAL));
#2160
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:769:        menu.add(R.string.menu_sync_remove).setOnMenuItemClickListener(
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:787:            builder.setTitle(R.string.menu_sync_remove);
#2161
#2162
src/com/android/contacts/common/ContactStatusUtil.java:39:                return resources.getString(R.string.status_busy);
#2163
src/com/android/contacts/common/util/AccountSelectionUtil.java:167:            .setTitle(R.string.dialog_new_contact_account)
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:252:                    R.string.dialog_new_contact_account,
#2164
src/com/android/contacts/common/model/account/GoogleAccountType.java:112:        kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/BaseAccountType.java:296:        DataKind kind = addKind(new DataKind(Email.CONTENT_ITEM_TYPE, R.string.emailLabelsGroup,
src/com/android/contacts/common/model/account/BaseAccountType.java:310:        kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/BaseAccountType.java:567:            if (type == null) return R.string.email;
src/com/android/contacts/common/model/account/BaseAccountType.java:569:                case Email.TYPE_HOME: return R.string.email_home;
src/com/android/contacts/common/model/account/BaseAccountType.java:570:                case Email.TYPE_WORK: return R.string.email_work;
src/com/android/contacts/common/model/account/BaseAccountType.java:571:                case Email.TYPE_OTHER: return R.string.email_other;
src/com/android/contacts/common/model/account/BaseAccountType.java:572:                case Email.TYPE_MOBILE: return R.string.email_mobile;
src/com/android/contacts/common/model/account/BaseAccountType.java:573:                default: return R.string.email_custom;
src/com/android/contacts/common/model/account/BaseAccountType.java:1086:                    Email.CONTENT_ITEM_TYPE, Email.TYPE, R.string.emailLabelsGroup, Weight.EMAIL,
src/com/android/contacts/common/model/account/BaseAccountType.java:1088:            kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:208:        kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
#2165
src/com/android/contacts/common/model/account/BaseAccountType.java:394:        DataKind kind = addKind(new DataKind(Note.CONTENT_ITEM_TYPE, R.string.label_notes, 110,
src/com/android/contacts/common/model/account/BaseAccountType.java:397:        kind.actionHeader = new SimpleInflater(R.string.label_notes);
src/com/android/contacts/common/model/account/BaseAccountType.java:400:        kind.fieldList.add(new EditField(Note.NOTE, R.string.label_notes, FLAGS_NOTE));
src/com/android/contacts/common/model/account/BaseAccountType.java:1280:                    Note.CONTENT_ITEM_TYPE, null, R.string.label_notes, Weight.NOTE,
src/com/android/contacts/common/model/account/BaseAccountType.java:1281:                    new SimpleInflater(R.string.label_notes), new SimpleInflater(Note.NOTE));
src/com/android/contacts/common/model/account/BaseAccountType.java:1283:            kind.fieldList.add(new EditField(Note.NOTE, R.string.label_notes, FLAGS_NOTE));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:301:        kind.fieldList.add(new EditField(Note.NOTE, R.string.label_notes, FLAGS_NOTE));
#2166
src/com/android/contacts/common/model/account/BaseAccountType.java:161:        kind.fieldList.add(new EditField(StructuredName.FAMILY_NAME, R.string.name_family,
src/com/android/contacts/common/model/account/BaseAccountType.java:196:            kind.fieldList.add(new EditField(StructuredName.FAMILY_NAME, R.string.name_family,
src/com/android/contacts/common/model/account/BaseAccountType.java:211:            kind.fieldList.add(new EditField(StructuredName.FAMILY_NAME, R.string.name_family,
src/com/android/contacts/common/model/account/BaseAccountType.java:917:            ks.fieldList.add(new EditField(StructuredName.FAMILY_NAME, R.string.name_family,
src/com/android/contacts/common/model/account/BaseAccountType.java:947:                kd.fieldList.add(new EditField(StructuredName.FAMILY_NAME, R.string.name_family,
src/com/android/contacts/common/model/account/BaseAccountType.java:962:                kd.fieldList.add(new EditField(StructuredName.FAMILY_NAME, R.string.name_family,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:91:                R.string.name_family, FLAGS_PERSON_NAME));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:121:                    R.string.name_family, FLAGS_PERSON_NAME));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:132:                    R.string.name_family, FLAGS_PERSON_NAME));
#2167
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:865:                    context, null, context.getText(R.string.savingDisplayGroups));
#2168
#2169
src/com/android/contacts/common/model/account/BaseAccountType.java:163:        kind.fieldList.add(new EditField(StructuredName.MIDDLE_NAME, R.string.name_middle,
src/com/android/contacts/common/model/account/BaseAccountType.java:198:            kind.fieldList.add(new EditField(StructuredName.MIDDLE_NAME, R.string.name_middle,
src/com/android/contacts/common/model/account/BaseAccountType.java:209:            kind.fieldList.add(new EditField(StructuredName.MIDDLE_NAME, R.string.name_middle,
src/com/android/contacts/common/model/account/BaseAccountType.java:919:            ks.fieldList.add(new EditField(StructuredName.MIDDLE_NAME, R.string.name_middle,
src/com/android/contacts/common/model/account/BaseAccountType.java:949:                kd.fieldList.add(new EditField(StructuredName.MIDDLE_NAME, R.string.name_middle,
src/com/android/contacts/common/model/account/BaseAccountType.java:960:                kd.fieldList.add(new EditField(StructuredName.MIDDLE_NAME, R.string.name_middle,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:93:                R.string.name_middle, FLAGS_PERSON_NAME));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:123:                    R.string.name_middle, FLAGS_PERSON_NAME).setOptional(true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:130:                    R.string.name_middle, FLAGS_PERSON_NAME).setOptional(true));
#2170
src/com/android/contacts/common/vcard/ExportProcessor.java:263:                mService.getString(R.string.exporting_contact_list_title);
#2171
#2172
src/com/android/contacts/common/list/ContactListFilterView.java:104:                bindView(R.drawable.ic_menu_settings_holo_light, R.string.list_filter_customize);
#2173
src/com/android/contacts/common/vcard/ImportVCardActivity.java:952:                    final String message = getString(R.string.caching_vcard_message);
#2174
src/com/android/contacts/common/util/ContactDisplayUtils.java:175:                return R.string.sms_tty_tdd;
#2175
src/com/android/contacts/common/vcard/CancelActivity.java:104:                    .setMessage(getString(R.string.fail_reason_unknown))
src/com/android/contacts/common/vcard/ImportVCardActivity.java:976:                    message = getString(R.string.fail_reason_unknown);
src/com/android/contacts/common/vcard/ExportVCardActivity.java:86:                    mErrorReason = getString(R.string.fail_reason_unknown);
src/com/android/contacts/common/vcard/ExportVCardActivity.java:92:                        mErrorReason = getString(R.string.fail_reason_unknown);
src/com/android/contacts/common/vcard/ExportVCardActivity.java:189:            mErrorReason = getString(R.string.fail_reason_unknown);
src/com/android/contacts/common/vcard/ExportVCardActivity.java:196:            mErrorReason = getString(R.string.fail_reason_unknown);
src/com/android/contacts/common/vcard/ExportVCardActivity.java:220:            mErrorReason = getString(R.string.fail_reason_unknown);
src/com/android/contacts/common/vcard/ExportVCardActivity.java:253:                                        getString(R.string.fail_reason_unknown)))
#2176
src/com/android/contacts/common/vcard/ExportProcessor.java:166:                        mService.getString(R.string.fail_reason_could_not_initialize_exporter,
#2177
src/com/android/contacts/common/util/ContactDisplayUtils.java:104:                return R.string.call_callback;
#2178
src/com/android/contacts/common/model/account/BaseAccountType.java:627:                case Im.PROTOCOL_JABBER: return R.string.chat_jabber;
#2179
src/com/android/contacts/common/model/account/BaseAccountType.java:170:                R.string.name_phonetic_family, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:172:                R.string.name_phonetic_middle, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:174:                R.string.name_phonetic_given, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:222:                R.string.name_phonetic, -1, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:229:                R.string.name_phonetic, FLAGS_PHONETIC).setShortForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:231:                R.string.name_phonetic_family, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:233:                R.string.name_phonetic_middle, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:235:                R.string.name_phonetic_given, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:926:                    R.string.name_phonetic_family, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:928:                    R.string.name_phonetic_middle, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:930:                    R.string.name_phonetic_given, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:971:                    R.string.name_phonetic, Weight.NONE,
src/com/android/contacts/common/model/account/BaseAccountType.java:979:                    R.string.name_phonetic, FLAGS_PHONETIC).setShortForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:981:                    R.string.name_phonetic_family, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:983:                    R.string.name_phonetic_middle, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:985:                    R.string.name_phonetic_given, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:100:                R.string.name_phonetic_family, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:102:                R.string.name_phonetic_given, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:143:                R.string.name_phonetic, -1, true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:151:                R.string.name_phonetic_family, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:153:                R.string.name_phonetic_given, FLAGS_PHONETIC));
#2180
src/com/android/contacts/common/model/account/BaseAccountType.java:597:                case StructuredPostal.TYPE_HOME: return R.string.map_home;
#2181
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:79:        assertEquals(R.string.call_other, ContactDisplayUtils.getPhoneLabelResourceId(null));
src/com/android/contacts/common/util/ContactDisplayUtils.java:87:        if (type == null) return R.string.call_other;
src/com/android/contacts/common/util/ContactDisplayUtils.java:102:                return R.string.call_other;
src/com/android/contacts/common/util/ContactDisplayUtils.java:114:                return R.string.call_other_fax;
#2182
tests/src/com/android/contacts/common/model/account/AccountTypeTest.java:52:        final int internalResId = com.android.contacts.common.R.string.contactsList;
src/com/android/contacts/common/list/DirectoryListLoader.java:181:                    getContext().getString(R.string.contactsList),
src/com/android/contacts/common/list/ContactEntryListAdapter.java:134:        partition.setDirectoryType(getContext().getString(R.string.contactsList));
src/com/android/contacts/common/list/ContactListFilterView.java:89:            mAccountType.setText(R.string.contactsList);
#2183
src/com/android/contacts/common/util/ContactDisplayUtils.java:114:                return R.string.call_other_fax;
#2184
src/com/android/contacts/common/util/ContactDisplayUtils.java:130:                return R.string.call_custom;
#2185
#2186
src/com/android/contacts/common/dialog/ClearFrequentsDialog.java:68:            .setTitle(R.string.clearFrequentsConfirmation_title)
#2187
src/com/android/contacts/common/model/account/BaseAccountType.java:1132:                            R.string.postal_region, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/BaseAccountType.java:1144:                            R.string.postal_region, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:232:                    R.string.postal_region, FLAGS_POSTAL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:243:                    R.string.postal_region, FLAGS_POSTAL));
#2188
src/com/android/contacts/common/vcard/ExportProcessor.java:250:            return resources.getString(R.string.composer_has_no_exportable_contact);
#2189
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:226:            builder.setContentText(context.getString(R.string.percentage,
#2190
src/com/android/contacts/common/vcard/ImportVCardActivity.java:933:                final String message = getString(R.string.import_failure_no_vcard_file);
#2191
#2192
src/com/android/contacts/common/model/account/BaseAccountType.java:317:                R.string.postalLabelsGroup, 25, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:1120:                    R.string.postalLabelsGroup, Weight.STRUCTURED_POSTAL,
#2193
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:144:                adapter.add(R.string.export_to_sdcard);
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:167:                    case R.string.export_to_sdcard: {
#2194
src/com/android/contacts/common/model/account/BaseAccountType.java:570:                case Email.TYPE_WORK: return R.string.email_work;
#2195
tests/src/com/android/contacts/common/RawContactModifierTests.java:94:                        R.string.nameLabelsGroup, -1, true);
src/com/android/contacts/common/model/account/BaseAccountType.java:151:                R.string.nameLabelsGroup, -1, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:152:        kind.actionHeader = new SimpleInflater(R.string.nameLabelsGroup);
src/com/android/contacts/common/model/account/BaseAccountType.java:181:                R.string.nameLabelsGroup, -1, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:182:        kind.actionHeader = new SimpleInflater(R.string.nameLabelsGroup);
src/com/android/contacts/common/model/account/BaseAccountType.java:223:        kind.actionHeader = new SimpleInflater(R.string.nameLabelsGroup);
src/com/android/contacts/common/model/account/BaseAccountType.java:901:                    StructuredName.CONTENT_ITEM_TYPE, null, R.string.nameLabelsGroup, Weight.NONE,
src/com/android/contacts/common/model/account/BaseAccountType.java:902:                    new SimpleInflater(R.string.nameLabelsGroup),
src/com/android/contacts/common/model/account/BaseAccountType.java:935:                    R.string.nameLabelsGroup, Weight.NONE,
src/com/android/contacts/common/model/account/BaseAccountType.java:936:                    new SimpleInflater(R.string.nameLabelsGroup),
src/com/android/contacts/common/model/account/BaseAccountType.java:972:                    new SimpleInflater(R.string.nameLabelsGroup),
src/com/android/contacts/common/model/account/ExchangeAccountType.java:81:                R.string.nameLabelsGroup, -1, true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:82:        kind.actionHeader = new SimpleInflater(R.string.nameLabelsGroup);
src/com/android/contacts/common/model/account/ExchangeAccountType.java:110:                R.string.nameLabelsGroup, -1, true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:144:        kind.actionHeader = new SimpleInflater(R.string.nameLabelsGroup);
#2196
src/com/android/contacts/common/dialog/ClearFrequentsDialog.java:49:                        getFragmentManager(), getString(R.string.clearFrequentsProgress_title),
#2197
src/com/android/contacts/common/util/ContactDisplayUtils.java:155:                return R.string.sms_pager;
#2198
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:105:        final String description = mContext.getString(R.string.importing_vcard_description,
#2199
src/com/android/contacts/common/model/account/BaseAccountType.java:172:                R.string.name_phonetic_middle, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:233:                R.string.name_phonetic_middle, FLAGS_PHONETIC).setLongForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:928:                    R.string.name_phonetic_middle, FLAGS_PHONETIC));
src/com/android/contacts/common/model/account/BaseAccountType.java:983:                    R.string.name_phonetic_middle, FLAGS_PHONETIC).setLongForm(true));
#2200
src/com/android/contacts/common/model/account/BaseAccountType.java:159:        kind.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
src/com/android/contacts/common/model/account/BaseAccountType.java:194:            kind.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
src/com/android/contacts/common/model/account/BaseAccountType.java:205:            kind.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
src/com/android/contacts/common/model/account/BaseAccountType.java:915:            ks.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
src/com/android/contacts/common/model/account/BaseAccountType.java:945:                kd.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
src/com/android/contacts/common/model/account/BaseAccountType.java:956:                kd.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:88:        kind.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:117:        kind.fieldList.add(new EditField(StructuredName.PREFIX, R.string.name_prefix,
#2201
src/com/android/contacts/common/list/ContactEntryListAdapter.java:345:                        getContext().getString(R.string.user_profile_contacts_list_header));
#2202
src/com/android/contacts/common/vcard/ExportVCardActivity.java:230:                        .setTitle(R.string.confirm_export_title)
#2203
src/com/android/contacts/common/util/ContactDisplayUtils.java:173:                return R.string.sms_telex;
#2204
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:807:        menu.setHeaderTitle(R.string.dialog_sync_add);
#2205
src/com/android/contacts/common/vcard/ImportVCardActivity.java:963:                String message = (getString(R.string.scanning_sdcard_failed_message,
#2206
src/com/android/contacts/common/list/DirectoryListLoader.java:186:                    getContext().getString(R.string.local_invisible_directory),
#2207
src/com/android/contacts/common/util/ContactDisplayUtils.java:149:                return R.string.sms_work;
src/com/android/contacts/common/util/ContactDisplayUtils.java:177:                return R.string.sms_work_mobile;
src/com/android/contacts/common/util/ContactDisplayUtils.java:179:                return R.string.sms_work_pager;
#2208
src/com/android/contacts/common/list/ContactListFilterView.java:100:                bindView(R.drawable.ic_menu_star_holo_light, R.string.list_filter_all_starred);
#2209
src/com/android/contacts/common/util/ContactDisplayUtils.java:185:                return R.string.sms_custom;
#2210
src/com/android/contacts/common/vcard/ImportVCardActivity.java:356:                            showFailureNotification(R.string.fail_reason_io_error);
src/com/android/contacts/common/vcard/ImportVCardActivity.java:379:                        getString(R.string.fail_reason_io_error)));
src/com/android/contacts/common/vcard/ImportVCardActivity.java:964:                        getString(R.string.fail_reason_io_error)));
#2211
src/com/android/contacts/common/model/account/BaseAccountType.java:600:                default: return R.string.map_custom;
#2212
src/com/android/contacts/common/model/account/BaseAccountType.java:409:                R.string.websiteLabelsGroup, 120, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:410:        kind.actionHeader = new SimpleInflater(R.string.websiteLabelsGroup);
src/com/android/contacts/common/model/account/BaseAccountType.java:416:        kind.fieldList.add(new EditField(Website.URL, R.string.websiteLabelsGroup, FLAGS_WEBSITE));
src/com/android/contacts/common/model/account/BaseAccountType.java:1303:                    Website.CONTENT_ITEM_TYPE, null, R.string.websiteLabelsGroup, Weight.WEBSITE,
src/com/android/contacts/common/model/account/BaseAccountType.java:1304:                    new SimpleInflater(R.string.websiteLabelsGroup),
src/com/android/contacts/common/model/account/BaseAccountType.java:1307:            kind.fieldList.add(new EditField(Website.URL, R.string.websiteLabelsGroup,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:333:        kind.fieldList.add(new EditField(Website.URL, R.string.websiteLabelsGroup, FLAGS_WEBSITE));
#2213
src/com/android/contacts/common/model/account/GoogleAccountType.java:119:                R.string.relationLabelsGroup, 160, true));
src/com/android/contacts/common/model/account/GoogleAccountType.java:146:        kind.fieldList.add(new EditField(Relation.DATA, R.string.relationLabelsGroup,
src/com/android/contacts/common/model/account/BaseAccountType.java:1432:                    R.string.relationLabelsGroup, Weight.RELATIONSHIP,
src/com/android/contacts/common/model/account/BaseAccountType.java:1435:            kind.fieldList.add(new EditField(Relation.DATA, R.string.relationLabelsGroup,
#2214
src/com/android/contacts/common/util/ContactDisplayUtils.java:171:                return R.string.sms_radio;
#2215
#2216
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:194:                        ? R.string.dialog_import_export
#2217
src/com/android/contacts/common/util/ContactDisplayUtils.java:100:                return R.string.call_pager;
#2218
src/com/android/contacts/common/model/account/BaseAccountType.java:621:                case Im.PROTOCOL_MSN: return R.string.chat_msn;
#2219
src/com/android/contacts/common/model/account/BaseAccountType.java:626:                case Im.PROTOCOL_ICQ: return R.string.chat_icq;
#2220
#2221
#2222
#2223
src/com/android/contacts/common/model/account/BaseAccountType.java:379:        kind.fieldList.add(new EditField(Organization.TITLE, R.string.ghostData_title,
src/com/android/contacts/common/model/account/BaseAccountType.java:1237:            kind.fieldList.add(new EditField(Organization.TITLE, R.string.ghostData_title,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:278:        kind.fieldList.add(new EditField(Organization.TITLE, R.string.ghostData_title,
#2224
src/com/android/contacts/common/list/ContactListAdapter.java:108:        mUnknownNameText = context.getText(R.string.missing_name);
src/com/android/contacts/common/list/ContactTileAdapter.java:256:        contact.name = (name != null) ? name : mResources.getString(R.string.missing_name);
src/com/android/contacts/common/list/ShortcutIntentBuilder.java:281:                    R.string.missing_name));
#2225
src/com/android/contacts/common/list/ContactListItemView.java:833:                        R.string.description_quick_contact_for, mNameTextView.getText()));
src/com/android/contacts/common/list/ContactListItemView.java:1223:                    R.string.description_quick_contact_for, mNameTextView.getText()));
#2226
#2227
src/com/android/contacts/common/util/ContactDisplayUtils.java:177:                return R.string.sms_work_mobile;
#2228
#2229
src/com/android/contacts/common/vcard/ImportVCardActivity.java:1045:                        getString(R.string.vcard_import_failed), Toast.LENGTH_LONG).show();
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:279:                .setContentTitle(context.getString(R.string.vcard_import_failed))
#2230
src/com/android/contacts/common/list/ContactTileAdapter.java:433:                        R.string.favoritesFrequentCalled : R.string.favoritesFrequentContacted);
#2231
src/com/android/contacts/common/util/ContactDisplayUtils.java:167:                return R.string.sms_main;
#2232
src/com/android/contacts/common/list/ContactEntryListAdapter.java:93:        setDefaultFilterHeaderText(R.string.local_search_label);
#2233
src/com/android/contacts/common/vcard/NfcImportVCardActivity.java:133:                getString(R.string.nfc_vcard_file_name), detector.getEstimatedType(),
#2234
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:194:                        ? R.string.dialog_import_export
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:195:                        : R.string.dialog_import)
#2235
src/com/android/contacts/common/vcard/ExportVCardActivity.java:242:                        .setMessage(getString(R.string.exporting_contact_failed_message,
src/com/android/contacts/common/vcard/ExportVCardActivity.java:251:                        .setMessage(getString(R.string.exporting_contact_failed_message,
#2236
src/com/android/contacts/common/model/account/BaseAccountType.java:625:                case Im.PROTOCOL_GOOGLE_TALK: return R.string.chat_gtalk;
#2237
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:76:                    R.string.vcard_import_will_start_message_with_default_name);
#2238
res/layout/contact_tile_phone_starred.xml:74:            android:contentDescription="@string/description_view_contact_detail" />
#2239
src/com/android/contacts/common/vcard/ExportProcessor.java:131:                    mService.getString(R.string.fail_reason_could_not_open_file,
#2240
#2241
#2242
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:207:                    Toast.makeText(getActivity(), R.string.share_error, Toast.LENGTH_SHORT).show();
#2243
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:88:        assertEquals(R.string.sms_other, ContactDisplayUtils.getSmsLabelResourceId(null));
src/com/android/contacts/common/util/ContactDisplayUtils.java:142:        if (type == null) return R.string.sms_other;
src/com/android/contacts/common/util/ContactDisplayUtils.java:157:                return R.string.sms_other;
src/com/android/contacts/common/util/ContactDisplayUtils.java:169:                return R.string.sms_other_fax;
#2244
#2245
src/com/android/contacts/common/util/ContactDisplayUtils.java:165:                return R.string.sms_isdn;
#2246
src/com/android/contacts/common/model/account/BaseAccountType.java:423:                    R.string.label_sip_address, 130, true));
src/com/android/contacts/common/model/account/BaseAccountType.java:426:        kind.actionHeader = new SimpleInflater(R.string.label_sip_address);
src/com/android/contacts/common/model/account/BaseAccountType.java:430:                                         R.string.label_sip_address, FLAGS_SIP_ADDRESS));
src/com/android/contacts/common/model/account/BaseAccountType.java:1328:                    SipAddress.CONTENT_ITEM_TYPE, null, R.string.label_sip_address,
src/com/android/contacts/common/model/account/BaseAccountType.java:1330:                    new SimpleInflater(R.string.label_sip_address),
src/com/android/contacts/common/model/account/BaseAccountType.java:1334:                    R.string.label_sip_address, FLAGS_SIP_ADDRESS));
#2247
src/com/android/contacts/common/util/ContactDisplayUtils.java:163:                return R.string.sms_company_main;
#2248
src/com/android/contacts/common/model/account/BaseAccountType.java:339:        DataKind kind = addKind(new DataKind(Im.CONTENT_ITEM_TYPE, R.string.imLabelsGroup, 20,
src/com/android/contacts/common/model/account/BaseAccountType.java:364:        kind.fieldList.add(new EditField(Im.DATA, R.string.imLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/BaseAccountType.java:1190:                    Im.CONTENT_ITEM_TYPE, Im.PROTOCOL, R.string.imLabelsGroup, Weight.IM,
src/com/android/contacts/common/model/account/BaseAccountType.java:1193:            kind.fieldList.add(new EditField(Im.DATA, R.string.imLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:264:        kind.fieldList.add(new EditField(Im.DATA, R.string.imLabelsGroup, FLAGS_EMAIL));
#2249
src/com/android/contacts/common/util/ContactDisplayUtils.java:161:                return R.string.sms_car;
#2250
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:101:                mContext.getString(R.string.progress_notifier_message,
#2251
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:57:        CharSequence expected = getContext().getResources().getText(R.string.call_home);
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:83:        assertEquals(R.string.call_home, ContactDisplayUtils.getPhoneLabelResourceId(
src/com/android/contacts/common/util/ContactDisplayUtils.java:90:                return R.string.call_home;
#2252
src/com/android/contacts/common/util/DataStatus.java:121:                    R.string.contact_status_update_attribution_with_date,
#2253
src/com/android/contacts/common/vcard/ImportVCardActivity.java:794:                getString(R.string.import_multiple_vcard_string);
#2254
src/com/android/contacts/common/vcard/ExportProcessor.java:274:        final String description = mService.getString(R.string.exporting_vcard_canceled_title,
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:176:                mContext.getString(R.string.exporting_vcard_canceled_title, request.displayName);
#2255
src/com/android/contacts/common/model/account/BaseAccountType.java:572:                case Email.TYPE_MOBILE: return R.string.email_mobile;
#2256
src/com/android/contacts/common/util/ContactDisplayUtils.java:112:                return R.string.call_main;
#2257
#2258
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:149:                adapter.add(R.string.share_visible_contacts);
src/com/android/contacts/common/interactions/ImportExportDialogFragment.java:175:                    case R.string.share_visible_contacts: {
#2259
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:156:        final String message = mContext.getString(R.string.vcard_export_will_start_message,
#2260
#2261
src/com/android/contacts/common/model/account/BaseAccountType.java:1128:                            R.string.postal_country, FLAGS_POSTAL).setOptional(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:1148:                            R.string.postal_country, FLAGS_POSTAL).setOptional(true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:228:                    R.string.postal_country, FLAGS_POSTAL).setOptional(true));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:247:                    R.string.postal_country, FLAGS_POSTAL).setOptional(true));
#2262
#2263
src/com/android/contacts/common/util/ContactDisplayUtils.java:98:                return R.string.call_fax_home;
#2264
src/com/android/contacts/common/model/account/BaseAccountType.java:598:                case StructuredPostal.TYPE_WORK: return R.string.map_work;
#2265
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:618:                text1.setText(R.string.display_more_groups);
#2266
src/com/android/contacts/common/util/ContactDisplayUtils.java:108:                return R.string.call_company_main;
#2267
src/com/android/contacts/common/util/ContactDisplayUtils.java:118:                return R.string.call_telex;
#2268
src/com/android/contacts/common/vcard/ExportProcessor.java:261:                mService.getString(R.string.exporting_contact_list_message, displayName);
#2269
src/com/android/contacts/common/vcard/VCardService.java:520:                mErrorReason = getString(R.string.fail_reason_too_long_filename,
#2270
src/com/android/contacts/common/model/account/BaseAccountType.java:623:                case Im.PROTOCOL_SKYPE: return R.string.chat_skype;
#2271
src/com/android/contacts/common/model/account/BaseAccountType.java:618:            if (type == null) return R.string.chat;
src/com/android/contacts/common/model/account/BaseAccountType.java:620:                case Im.PROTOCOL_AIM: return R.string.chat_aim;
src/com/android/contacts/common/model/account/BaseAccountType.java:621:                case Im.PROTOCOL_MSN: return R.string.chat_msn;
src/com/android/contacts/common/model/account/BaseAccountType.java:622:                case Im.PROTOCOL_YAHOO: return R.string.chat_yahoo;
src/com/android/contacts/common/model/account/BaseAccountType.java:623:                case Im.PROTOCOL_SKYPE: return R.string.chat_skype;
src/com/android/contacts/common/model/account/BaseAccountType.java:624:                case Im.PROTOCOL_QQ: return R.string.chat_qq;
src/com/android/contacts/common/model/account/BaseAccountType.java:625:                case Im.PROTOCOL_GOOGLE_TALK: return R.string.chat_gtalk;
src/com/android/contacts/common/model/account/BaseAccountType.java:626:                case Im.PROTOCOL_ICQ: return R.string.chat_icq;
src/com/android/contacts/common/model/account/BaseAccountType.java:627:                case Im.PROTOCOL_JABBER: return R.string.chat_jabber;
src/com/android/contacts/common/model/account/BaseAccountType.java:628:                case Im.PROTOCOL_NETMEETING: return R.string.chat;
src/com/android/contacts/common/model/account/BaseAccountType.java:629:                default: return R.string.chat;
#2272
src/com/android/contacts/common/model/account/GoogleAccountType.java:112:        kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/BaseAccountType.java:296:        DataKind kind = addKind(new DataKind(Email.CONTENT_ITEM_TYPE, R.string.emailLabelsGroup,
src/com/android/contacts/common/model/account/BaseAccountType.java:310:        kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/BaseAccountType.java:1086:                    Email.CONTENT_ITEM_TYPE, Email.TYPE, R.string.emailLabelsGroup, Weight.EMAIL,
src/com/android/contacts/common/model/account/BaseAccountType.java:1088:            kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:208:        kind.fieldList.add(new EditField(Email.DATA, R.string.emailLabelsGroup, FLAGS_EMAIL));
#2273
src/com/android/contacts/common/model/account/BaseAccountType.java:377:        kind.fieldList.add(new EditField(Organization.COMPANY, R.string.ghostData_company,
src/com/android/contacts/common/model/account/BaseAccountType.java:1235:            kind.fieldList.add(new EditField(Organization.COMPANY, R.string.ghostData_company,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:276:        kind.fieldList.add(new EditField(Organization.COMPANY, R.string.ghostData_company,
#2274
src/com/android/contacts/common/vcard/ExportProcessor.java:194:                            mService.getString(R.string.fail_reason_error_occurred_during_export,
src/com/android/contacts/common/vcard/ExportProcessor.java:234:                            mService.getString(R.string.fail_reason_error_occurred_during_export,
#2275
#2276
src/com/android/contacts/common/vcard/ImportVCardActivity.java:979:                    .setTitle(getString(R.string.reading_vcard_failed_title))
#2277
src/com/android/contacts/common/list/ContactListFilterView.java:96:                bindView(0, R.string.list_filter_all_accounts);
src/com/android/contacts/common/util/AccountFilterUtil.java:89:                        headerTextView.setText(R.string.list_filter_all_accounts);
#2278
#2279
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:74:            displayName = mContext.getString(R.string.vcard_unknown_filename);
#2280
src/com/android/contacts/common/model/account/BaseAccountType.java:620:                case Im.PROTOCOL_AIM: return R.string.chat_aim;
#2281
src/com/android/contacts/common/model/account/BaseAccountType.java:571:                case Email.TYPE_OTHER: return R.string.email_other;
#2282
src/com/android/contacts/common/model/account/BaseAccountType.java:595:            if (type == null) return R.string.map_other;
src/com/android/contacts/common/model/account/BaseAccountType.java:599:                case StructuredPostal.TYPE_OTHER: return R.string.map_other;
#2283
src/com/android/contacts/common/vcard/ExportProcessor.java:216:            final String title = mService.getString(R.string.exporting_vcard_finished_title,
#2284
src/com/android/contacts/common/list/ContactEntryListAdapter.java:387:                    partition.setLabel(mContext.getString(R.string.directory_search_label));
#2285
#2286
src/com/android/contacts/common/util/ContactDisplayUtils.java:120:                return R.string.call_tty_tdd;
#2287
src/com/android/contacts/common/model/account/BaseAccountType.java:569:                case Email.TYPE_HOME: return R.string.email_home;
#2288
src/com/android/contacts/common/util/AccountFilterUtil.java:78:                            R.string.listAllContactsInAccount, filter.accountName));
src/com/android/contacts/common/util/AccountFilterUtil.java:94:                            R.string.listAllContactsInAccount, filter.accountName));
#2289
src/com/android/contacts/common/model/account/BaseAccountType.java:573:                default: return R.string.email_custom;
#2290
src/com/android/contacts/common/ContactStatusUtil.java:37:                return resources.getString(R.string.status_away);
#2291
src/com/android/contacts/common/vcard/ExportProcessor.java:248:            return resources.getString(R.string.composer_failed_to_get_database_infomation);
#2292
#2293
src/com/android/contacts/common/vcard/NotificationImportExportListener.java:169:                mContext.getString(R.string.vcard_export_request_rejected_message)).sendToTarget();
#2294
src/com/android/contacts/common/model/account/GoogleAccountType.java:94:        kind.fieldList.add(new EditField(Phone.NUMBER, R.string.phoneLabelsGroup, FLAGS_PHONE));
src/com/android/contacts/common/model/account/BaseAccountType.java:257:        DataKind kind = addKind(new DataKind(Phone.CONTENT_ITEM_TYPE, R.string.phoneLabelsGroup,
src/com/android/contacts/common/model/account/BaseAccountType.java:290:        kind.fieldList.add(new EditField(Phone.NUMBER, R.string.phoneLabelsGroup, FLAGS_PHONE));
src/com/android/contacts/common/model/account/BaseAccountType.java:1027:                    Phone.CONTENT_ITEM_TYPE, Phone.TYPE, R.string.phoneLabelsGroup, Weight.PHONE,
src/com/android/contacts/common/model/account/BaseAccountType.java:1034:            kind.fieldList.add(new EditField(Phone.NUMBER, R.string.phoneLabelsGroup, FLAGS_PHONE));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:196:        kind.fieldList.add(new EditField(Phone.NUMBER, R.string.phoneLabelsGroup, FLAGS_PHONE));
#2295
src/com/android/contacts/common/vcard/CancelActivity.java:91:                message = getString(R.string.cancel_export_confirmation_message, mDisplayName);
#2296
src/com/android/contacts/common/util/ContactDisplayUtils.java:94:                return R.string.call_work;
src/com/android/contacts/common/util/ContactDisplayUtils.java:122:                return R.string.call_work_mobile;
src/com/android/contacts/common/util/ContactDisplayUtils.java:124:                return R.string.call_work_pager;
#2297
src/com/android/contacts/common/vcard/ImportVCardActivity.java:796:                getString(R.string.import_all_vcard_string);
#2298
src/com/android/contacts/common/list/ContactTileAdapter.java:433:                        R.string.favoritesFrequentCalled : R.string.favoritesFrequentContacted);
#2299
#2300
#2301
src/com/android/contacts/common/vcard/ImportVCardActivity.java:927:                    .setMessage(R.string.no_sdcard_message)
src/com/android/contacts/common/vcard/ExportVCardActivity.java:262:                        .setMessage(R.string.no_sdcard_message)
#2302
src/com/android/contacts/common/model/account/BaseAccountType.java:624:                case Im.PROTOCOL_QQ: return R.string.chat_qq;
#2303
src/com/android/contacts/common/list/CustomContactListFilterActivity.java:341:                    return context.getText(R.string.display_ungrouped);
#2304
src/com/android/contacts/common/util/ContactDisplayUtils.java:116:                return R.string.call_radio;
#2305
src/com/android/contacts/common/util/ContactDisplayUtils.java:126:                return R.string.call_assistant;
#2306
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:69:        CharSequence expected = getContext().getResources().getText(R.string.sms_home);
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:74:        expected = getContext().getResources().getText(R.string.sms_mobile);
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:88:        assertEquals(R.string.sms_other, ContactDisplayUtils.getSmsLabelResourceId(null));
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:92:        assertEquals(R.string.sms_home, ContactDisplayUtils.getSmsLabelResourceId(Phone.TYPE_HOME));
src/com/android/contacts/common/util/ContactDisplayUtils.java:142:        if (type == null) return R.string.sms_other;
src/com/android/contacts/common/util/ContactDisplayUtils.java:145:                return R.string.sms_home;
src/com/android/contacts/common/util/ContactDisplayUtils.java:147:                return R.string.sms_mobile;
src/com/android/contacts/common/util/ContactDisplayUtils.java:149:                return R.string.sms_work;
src/com/android/contacts/common/util/ContactDisplayUtils.java:151:                return R.string.sms_fax_work;
src/com/android/contacts/common/util/ContactDisplayUtils.java:153:                return R.string.sms_fax_home;
src/com/android/contacts/common/util/ContactDisplayUtils.java:155:                return R.string.sms_pager;
src/com/android/contacts/common/util/ContactDisplayUtils.java:157:                return R.string.sms_other;
src/com/android/contacts/common/util/ContactDisplayUtils.java:159:                return R.string.sms_callback;
src/com/android/contacts/common/util/ContactDisplayUtils.java:161:                return R.string.sms_car;
src/com/android/contacts/common/util/ContactDisplayUtils.java:163:                return R.string.sms_company_main;
src/com/android/contacts/common/util/ContactDisplayUtils.java:165:                return R.string.sms_isdn;
src/com/android/contacts/common/util/ContactDisplayUtils.java:167:                return R.string.sms_main;
src/com/android/contacts/common/util/ContactDisplayUtils.java:169:                return R.string.sms_other_fax;
src/com/android/contacts/common/util/ContactDisplayUtils.java:171:                return R.string.sms_radio;
src/com/android/contacts/common/util/ContactDisplayUtils.java:173:                return R.string.sms_telex;
src/com/android/contacts/common/util/ContactDisplayUtils.java:175:                return R.string.sms_tty_tdd;
src/com/android/contacts/common/util/ContactDisplayUtils.java:177:                return R.string.sms_work_mobile;
src/com/android/contacts/common/util/ContactDisplayUtils.java:179:                return R.string.sms_work_pager;
src/com/android/contacts/common/util/ContactDisplayUtils.java:181:                return R.string.sms_assistant;
src/com/android/contacts/common/util/ContactDisplayUtils.java:183:                return R.string.sms_mms;
src/com/android/contacts/common/util/ContactDisplayUtils.java:185:                return R.string.sms_custom;
src/com/android/contacts/common/model/account/BaseAccountType.java:260:        kind.iconAltDescriptionRes = R.string.sms;
src/com/android/contacts/common/model/account/BaseAccountType.java:1031:            kind.iconAltDescriptionRes = R.string.sms;
#2307
src/com/android/contacts/common/model/account/BaseAccountType.java:167:        kind.fieldList.add(new EditField(StructuredName.SUFFIX, R.string.name_suffix,
src/com/android/contacts/common/model/account/BaseAccountType.java:202:            kind.fieldList.add(new EditField(StructuredName.SUFFIX, R.string.name_suffix,
src/com/android/contacts/common/model/account/BaseAccountType.java:213:            kind.fieldList.add(new EditField(StructuredName.SUFFIX, R.string.name_suffix,
src/com/android/contacts/common/model/account/BaseAccountType.java:923:            ks.fieldList.add(new EditField(StructuredName.SUFFIX, R.string.name_suffix,
src/com/android/contacts/common/model/account/BaseAccountType.java:953:                kd.fieldList.add(new EditField(StructuredName.SUFFIX, R.string.name_suffix,
src/com/android/contacts/common/model/account/BaseAccountType.java:964:                kd.fieldList.add(new EditField(StructuredName.SUFFIX, R.string.name_suffix,
src/com/android/contacts/common/model/account/ExchangeAccountType.java:97:                R.string.name_suffix, FLAGS_PERSON_NAME));
src/com/android/contacts/common/model/account/ExchangeAccountType.java:135:                R.string.name_suffix, FLAGS_PERSON_NAME).setOptional(true));
#2308
src/com/android/contacts/common/list/ContactListFilterView.java:108:                bindView(0, R.string.list_filter_phones);
src/com/android/contacts/common/list/PhoneNumberListAdapter.java:109:        setDefaultFilterHeaderText(R.string.list_filter_phones);
src/com/android/contacts/common/util/AccountFilterUtil.java:73:                        headerTextView.setText(R.string.list_filter_phones);
#2309
tests/src/com/android/contacts/common/util/ContactDisplayUtilTests.java:62:        expected = getContext().getResources().getText(R.string.call_mobile);
src/com/android/contacts/common/util/ContactDisplayUtils.java:92:                return R.string.call_mobile;
#2310
src/com/android/contacts/common/util/ContactDisplayUtils.java:181:                return R.string.sms_assistant;
#2311
src/com/android/contacts/common/util/ContactDisplayUtils.java:96:                return R.string.call_fax_work;
#2312
#2313
src/com/android/contacts/common/model/account/BaseAccountType.java:158:                R.string.full_name, FLAGS_PERSON_NAME));
src/com/android/contacts/common/model/account/BaseAccountType.java:188:                R.string.full_name, FLAGS_PERSON_NAME).setShortForm(true));
src/com/android/contacts/common/model/account/BaseAccountType.java:913:            ks.fieldList.add(new EditField(StructuredName.DISPLAY_NAME, R.string.full_name,
src/com/android/contacts/common/model/account/BaseAccountType.java:942:                    R.string.full_name, FLAGS_PERSON_NAME).setShortForm(true));
#2314
#2315
#2316
#2317
#2318
#2319
#2320
#2321
#2322
#2323
#2324
#2325
#2326
#2327
#2328
#2329
#2330
#2331
#2332
#2333
#2334
#2335
#2336
#2337
#2338
#2339
#2340
#2341
#2342
#2343
#2344
#2345
#2346
#2347
#2348
#2349
#2350
#2351
#2352
#2353
#2354
#2355
#2356
src/com/android/emailcommon/utility/SendErrorBroadcastReceiver.java:64:            .setTitle(R.string.error_mail_send_error_title)
#2357
src/com/android/emailcommon/utility/SendErrorBroadcastReceiver.java:65:            .setMessage(R.string.error_mail_send_error_message)
#2358
src/com/android/emailcommon/utility/SendErrorBroadcastReceiver.java:66:            .setPositiveButton(R.string.dlg_btn_ok, new DialogInterface.OnClickListener() {
#2359
#2360
#2361
#2362
#2363
#2364
#2365
#2366
#2367
#2368
#2369
#2370
#2371
#2372
#2373
#2374
#2375
#2376
#2377
#2378
#2379
#2380
#2381
#2382
#2383
#2384
#2385
#2386
#2387
#2388
#2389
#2390
#2391
#2392
#2393
#2394
#2395
#2396
#2397
#2398
#2399
#2400
#2401
#2402
#2403
#2404
#2405
#2406
#2407
#2408
#2409
#2410
#2411
#2412
#2413
#2414
#2415
#2416
#2417
#2418
#2419
#2420
#2421
#2422
#2423
#2424
#2425
#2426
#2427
#2428
#2429
#2430
#2431
#2432
#2433
#2434
#2435
#2436
#2437
#2438
#2439
#2440
#2441
#2442
#2443
#2444
#2445
#2446
#2447
#2448
#2449
#2450
#2451
#2452
#2453
#2454
#2455
#2456
#2457
#2458
#2459
#2460
#2461
#2462
#2463
#2464
#2465
#2466
#2467
#2468
#2469
#2470
#2471
#2472
#2473
#2474
#2475
#2476
#2477
#2478
#2479
#2480
#2481
#2482
#2483
#2484
#2485
#2486
#2487
#2488
#2489
#2490
#2491
#2492
#2493
#2494
#2495
#2496
res/xml/keyboard_layouts.xml:21:            android:label="@string/keyboard_layout_english_us_label"
#2497
res/xml/default_workspace.xml:168:        launcher:title="@string/online_manual_title"
#2498
src/com/android/settings/SettingsPreferenceFragment.java:315://                    R.string.lock_settings_picker_title, null, caller, requestCode);
src/com/android/settings/SettingsPreferenceFragment.java:333:                    R.string.lock_settings_picker_title, null, caller, requestCode);
res/xml/security_settings_fingerpicker.xml:24:        android:title="@string/lock_settings_picker_title">
res/xml/security_settings_facepicker.xml:11:        android:title="@string/lock_settings_picker_title">
#2499
#2500
